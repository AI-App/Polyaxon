syntax = "proto3";

package v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "v1/base.proto";
import "v1/code_ref.proto";

// Experiment specification
message Experiment {
    // Unique integer identifier
    int64 id = 1;

    // UUID
    string uuid = 2;

    // Unique name generated
    string unique_name = 3;

    // Optional name
    string name = 4;

    // Optional description
    string description = 5;

    // Optional Tags of this entity
    repeated string tags = 6;

    // Optional if the entity has been deleted
    bool deleted = 7;

    // Required name of user started this entity
    string user = 8;

    // Optional time when the entityt was created
    string created_at = 9;

    // Optional last time the entity was updated
    string updated_at = 10;

    // Optional last time the entity was started
    string started_at = 11;

    // Optional last time the entity was started
    string finished_at = 12;

    // Required project name
    string project = 13;

    // Optional flag to tell if this entity is managed by the platform
    string is_managed = 14;

    // Optional content of the entity's spec
    string spec = 15;

    // Optional backend value of this entity
    string backend = 16;

    // Optional framework name of this entity
    string framework = 17;

    // Optional latest status of this entity
    string last_status = 18;

    // Optional Code reference
    int64 code_reference = 19;

    // Optional hardware resources requested by this entity
    Dict resources = 20;

    // Optional a readme text describing this entity
    string readme = 21;

    // Optional if this entity was bookmarked
    bool bookmarked = 22;

    // Optional params of this entity
    Dict params = 23;

    // Optional run enivronment tracked
    Dict run_env = 24;

    // Optional build job name
    string build_job = 25;

    // Optional data references of this entity
    Dict data_refs = 26;

    // Optional artificat references of this entity
    Dict artifact_refs = 27;

    // Optional Id of the original experiment
    int64 original = 28;

    // Optional if this experiment was restarted/copied/resumed
    string cloning_strategy = 29;

    // Optional Experiment group name
    string experiment_group = 30;

    // Optional number of jobs belonging to this entity
    int32 num_jobs = 31;

    // Optional if this entity has a tensorboard
    bool has_tensorboard = 32;

    // Optional last metrics of this entity
    Dict last_metric = 33;
}

// Experiment specification
message ExperimentStatus {
    // Unique integer identifier
    int64 id = 1;

    // UUID
    string uuid = 2;

    // Optional time when the entityt was created
    string created_at = 3;

    // Optional last time the entity was updated
    string updated_at = 4;

    // Optional status recorded
    string status = 5; // Add oneof validation

    // Optional status message
    string message = 6;
}

// Request data to create/update experiment
message ExperimentBodyRequest{
    // Owner of the namespace
    string owner = 1;

    // Project where the experiement will be assigned
    string project = 2;

    // Experiment object
    Experiment experiment = 3;
}

 // Contains list experiments
 message ListExperimentsResponse{
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Experiment results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}


 // Contains list experiments
 message ListExperimentStatusesResponse{
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated ExperimentStatus results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}

