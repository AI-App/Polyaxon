namespace: "polyaxon"
useRBAC: false
passwordLenght: 6
debug: false
celery:
  always_eager: false
  celeryd_prefetch_multiplier: 4

service:
  name: polyaxon
  type: LoadBalancer
  externalPort: 80
  internalPort: 80
  nodePort: 35811

types:
  core: "polyaxon-core"
  experiment: "polyaxon-experiment"

roles:
  api: "polyaxon-api"

k8s: {}

# Initial admin user to create
user:
  name: "admins"
  emailFrom: <admin@polyaxon.local>
  email: admin@polyaxon.local

email:
  host: smtp
  port: 25
  use_tls: false

queues:
  experiments_scheduler_interval_sec: 5
  experiments: 'polyaxon.experiments'

nvidiaDriverDir: "/var/lib/nvidia-docker/volumes/nvidia_driver/latest"

api:
  image: polyaxon/polyaxon-api
  imageTag: 0.0.1
  imagePullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 300m
      memory: 300Mi
workers:
  image: polyaxon/polyaxon-api
  imageTag: 0.0.1
  imagePullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 100Mi
crons:
  image: polyaxon/polyaxon-api
  imageTag: 0.0.1
  imagePullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: 50m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 128Mi
events:
  image: polyaxon/polyaxon-events
  imageTag: 0.0.1
  imagePullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: 200m
      memory: 200m
    requests:
      cpu: 100m
      memory: 100Mi
streams:
  image: polyaxon/polyaxon-streams
  imageTag: 0.0.1
  imagePullPolicy: IfNotPresent
  replicas: 1
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 100Mi

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /data/polyaxon

nodeSelectors: {}
nodeSelectorsGPU: {}

postgresql:
  imageTag: 9.6.1
  postgresUser: polyaxon
  postgresPassword: polyaxon
  postgresDatabase: polyaxon
  persistence:
    enabled: false
    size: "8Gi"
    subPath: ""

  # ---
  image: "postgres"
  persistence:
    accessMode: ReadWriteOnce
    subPath: "postgresql-db"
  metrics:
    enabled: false
    image: wrouesnel/postgres_exporter
    imageTag: v0.1.1
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
  service:
    type: ClusterIP
    port: 5432
    externalIPs: []
  networkPolicy:
    enabled: false
    allowExternal: true
  tolerations: []

redis:
  imageTag: 4.0.2
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 8Gi

  # ---
  image: redis
  imagePullPolicy: IfNotPresent
  serviceType: ClusterIP
  usePassword: false
  metrics:
    enabled: false
    image: oliver006/redis_exporter
    imageTag: v0.11
    imagePullPolicy: IfNotPresent
    resources: {}
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9121"
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
  tolerations: []
  podLabels: {}
  networkPolicy:
    enabled: false
    allowExternal: true

rabbitmq:
  imageTag: "3.6.12-management"
  image: "rabbitmq"
  imagePullPolicy: IfNotPresent
  rabbitmqUsername: polyaxon
  rabbitmqNodePort: 5672
  rabbitmqNodeType: stats
  rabbitmqNodeName: rabbit
  rabbitmqVhost: /
  rabbitmqManagerPort: 15672
  serviceType: ClusterIP
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi

  resources:
    requests:
      memory: 256Mi
      cpu: 100m

registry:
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    subPath: ""
