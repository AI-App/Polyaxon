{{- if and (.Values.ingress.enabled) (eq "polyaxon-ingress" (index .Values.ingress.annotations "kubernetes.io/ingress.class")) -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "polyaxon.fullname" . }}-ingress-controller
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "polyaxon.fullname" . }}-ingress-controller
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    type: {{ .Values.types.core }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "polyaxon.fullname" . }}-ingress-controller
        type: {{ .Values.types.core }}
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: {{ template "polyaxon.fullname" . }}-ingress-serviceaccount
      # hostNetwork makes it possible to use ipv6 and to preserve the source IP correctly regardless of docker configuration
      # however, it is not a hard dependency of the nginx-ingress-controller itself and it may cause issues if port 10254 already is taken on the host
      # that said, since hostPort is broken on CNI (https://github.com/kubernetes/kubernetes/issues/31307) we have to use hostNetwork where CNI is used
      # like with kubeadm
      # hostNetwork: true
      # Check latest version here: https://github.com/kubernetes/ingress-nginx/releases
      terminationGracePeriodSeconds: 60
      {{- if .Values.nodeSelectors.core }}
      nodeSelector:
{{ toYaml .Values.nodeSelectors.core | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations.core }}
      tolerations:
{{ toYaml .Values.tolerations.core | indent 8 }}
      {{- end }}
      containers:
      - image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.15
        name: nginx-ingress-controller
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/{{ template "polyaxon.fullname" . }}-http-backend
        - --configmap=$(POD_NAMESPACE)/{{ template "polyaxon.fullname" . }}-ingress-config
        - --ingress-class=polyaxon-ingress
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "polyaxon.fullname" . }}-ingress
  labels:
    app: {{ template "polyaxon.fullname" . }}-ingress
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    type: {{ .Values.types.core }}
spec:
  selector:
    app: {{ template "polyaxon.fullname" . }}-ingress-controller
  type: LoadBalancer
  ports:
    - port: 80
      name: http
    - port: 443
      name: https
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "polyaxon.fullname" . }}-ingress-config
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    type: {{ .Values.types.core }}
  namespace: {{ .Values.namespace }}
data:
  ssl-redirect: "false"
  hsts: "false"
  disable-ipv6: "true"
{{- end }}
