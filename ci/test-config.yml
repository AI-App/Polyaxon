isMinikube: true

rbac:
  enabled: false

ingress:
  enabled: false

serviceType: NodePort

user:
  username: travis
  password: travis

postgresql:
  imageTag: 9.6.1-alpine
  resources:
    requests:
      memory: 40Mi
      cpu: 20m

redis:
  imageTag: 4.0.2-alpine
  resources:
    requests:
      memory: 40Mi
      cpu: 20m

rabbitmq:
  imageTag: 3.6.12-management-alpine
  resources:
    requests:
      memory: 40Mi
      cpu: 20m

api:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

streams:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

scheduler:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

hpsearch:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

eventsHandlers:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

k8sEventsHandlers:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

logsHandlers:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

beat:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

crons:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

eventMonitors:
  namespace:
    imageTag: latest
    imagePullPolicy: Always
    resources:
      requests:
        memory: 80Mi
        cpu: 30m

  statuses:
    imageTag: latest
    imagePullPolicy: Always
    resources:
      requests:
        memory: 80Mi
        cpu: 30m

resourcesDaemon:
  imageTag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: 80Mi
      cpu: 30m

sidecar:
  imageTag: latest

dockerizer:
  imageTag: latest

job:
  imageTag: latest

hooks:
  imageTag: latest

persistence:
  logs:
    mountPath: "/tmp/logs"
    hostPath: "/tmp/logs"
  repos:
    existingClaim:
    mountPath: "/tmp/repos"
    hostPath: "/tmp/repos"
  upload:
    existingClaim:
    mountPath: "/tmp/upload"
    hostPath: "/tmp/upload"
  data:
    data:
      mountPath: "/tmp/data"
      hostPath: "/tmp/data"
  outputs:
    outputs:
      mountPath: "/tmp/outputs"
      hostPath: "/tmp/outputs"

environment: testing

privateRegistries:
  - host: "my.registry.com"
    user: "_json_key"
    password: '{"type": "service_account", "project_id": "my_project", "private_key_id": "ajshvasjhqweqetquytqut17253871238", "private_key": "-----BEGIN PRIVATE KEY-----\nASBHJASJDASBDJAJHSBDJB/sfbdj12231\sdfsdfs/sfsdf12323/34r342/asdasd\n-----END PRIVATE KEY-----\n", "client_email": "email@email.com", "client_id": "12345", "auth_uri": "https://accounts.google.com/o/oauth2/auth", "token_uri": "https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/asdajhdvah123712378183"}'

  - host: another.registry.com
    user: name
    password: pass

  - "user-foo:tKV9DYsxrwfiY85KYpf9N4GZ@cloud.somewhere.io:5000"
