// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/job.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Job specification
type Job struct {
	// Unique integer identifier
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Unique name generated
	UniqueName string `protobuf:"bytes,3,opt,name=unique_name,json=uniqueName,proto3" json:"unique_name,omitempty"`
	// Optional name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Optional Tags of this entity
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// Optional if the entity has been deleted
	Deleted bool `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Required name of user started this entity
	User string `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional last time the entity was started
	StartedAt string `protobuf:"bytes,11,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Optional last time the entity was started
	FinishedAt string `protobuf:"bytes,12,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Required project name
	Project string `protobuf:"bytes,13,opt,name=project,proto3" json:"project,omitempty"`
	// Optional flag to tell if this entity is managed by the platform
	IsManaged string `protobuf:"bytes,14,opt,name=is_managed,json=isManaged,proto3" json:"is_managed,omitempty"`
	// Optional content of the entity's spec
	Spec string `protobuf:"bytes,15,opt,name=spec,proto3" json:"spec,omitempty"`
	// Optional backend value of this entity
	Backend string `protobuf:"bytes,16,opt,name=backend,proto3" json:"backend,omitempty"`
	// Optional framework name of this entity
	Framework string `protobuf:"bytes,17,opt,name=framework,proto3" json:"framework,omitempty"`
	// Optional latest status of this entity
	LastStatus string `protobuf:"bytes,18,opt,name=last_status,json=lastStatus,proto3" json:"last_status,omitempty"`
	// Optional Code reference
	CodeReference int64 `protobuf:"varint,19,opt,name=code_reference,json=codeReference,proto3" json:"code_reference,omitempty"`
	// Optional hardware resources requested by this entity
	Resources *Dict `protobuf:"bytes,20,opt,name=resources,proto3" json:"resources,omitempty"`
	// Optional a readme text describing this entity
	Readme string `protobuf:"bytes,21,opt,name=readme,proto3" json:"readme,omitempty"`
	// Optional if this entity was bookmarked
	Bookmarked bool `protobuf:"varint,22,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
	// Optional params of this entity
	Params *Dict `protobuf:"bytes,23,opt,name=params,proto3" json:"params,omitempty"`
	// Optional run enivronment tracked
	RunEnv *Dict `protobuf:"bytes,24,opt,name=run_env,json=runEnv,proto3" json:"run_env,omitempty"`
	// Optional build job name
	BuildJob string `protobuf:"bytes,25,opt,name=build_job,json=buildJob,proto3" json:"build_job,omitempty"`
	// Optional data references of this entity
	DataRefs *Dict `protobuf:"bytes,26,opt,name=data_refs,json=dataRefs,proto3" json:"data_refs,omitempty"`
	// Optional artificat references of this entity
	ArtifactRefs *Dict `protobuf:"bytes,27,opt,name=artifact_refs,json=artifactRefs,proto3" json:"artifact_refs,omitempty"`
	// Optional Id of the original job
	Original int64 `protobuf:"varint,28,opt,name=original,proto3" json:"original,omitempty"`
	// Optional if this job was restarted/copied/resumed
	CloningStrategy      string   `protobuf:"bytes,29,opt,name=cloning_strategy,json=cloningStrategy,proto3" json:"cloning_strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_23554ad836921a71, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Job) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Job) GetUniqueName() string {
	if m != nil {
		return m.UniqueName
	}
	return ""
}

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Job) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Job) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Job) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Job) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Job) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Job) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Job) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *Job) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *Job) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Job) GetIsManaged() string {
	if m != nil {
		return m.IsManaged
	}
	return ""
}

func (m *Job) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Job) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *Job) GetFramework() string {
	if m != nil {
		return m.Framework
	}
	return ""
}

func (m *Job) GetLastStatus() string {
	if m != nil {
		return m.LastStatus
	}
	return ""
}

func (m *Job) GetCodeReference() int64 {
	if m != nil {
		return m.CodeReference
	}
	return 0
}

func (m *Job) GetResources() *Dict {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Job) GetReadme() string {
	if m != nil {
		return m.Readme
	}
	return ""
}

func (m *Job) GetBookmarked() bool {
	if m != nil {
		return m.Bookmarked
	}
	return false
}

func (m *Job) GetParams() *Dict {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Job) GetRunEnv() *Dict {
	if m != nil {
		return m.RunEnv
	}
	return nil
}

func (m *Job) GetBuildJob() string {
	if m != nil {
		return m.BuildJob
	}
	return ""
}

func (m *Job) GetDataRefs() *Dict {
	if m != nil {
		return m.DataRefs
	}
	return nil
}

func (m *Job) GetArtifactRefs() *Dict {
	if m != nil {
		return m.ArtifactRefs
	}
	return nil
}

func (m *Job) GetOriginal() int64 {
	if m != nil {
		return m.Original
	}
	return 0
}

func (m *Job) GetCloningStrategy() string {
	if m != nil {
		return m.CloningStrategy
	}
	return ""
}

// Job specification
type JobStatus struct {
	// Unique integer identifier
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional status recorded
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Optional status message
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatus) Reset()         { *m = JobStatus{} }
func (m *JobStatus) String() string { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()    {}
func (*JobStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_23554ad836921a71, []int{1}
}

func (m *JobStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatus.Unmarshal(m, b)
}
func (m *JobStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatus.Marshal(b, m, deterministic)
}
func (m *JobStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatus.Merge(m, src)
}
func (m *JobStatus) XXX_Size() int {
	return xxx_messageInfo_JobStatus.Size(m)
}
func (m *JobStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatus proto.InternalMessageInfo

func (m *JobStatus) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobStatus) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *JobStatus) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *JobStatus) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *JobStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *JobStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Request data to create/update job
type JobBodyRequest struct {
	// Owner of the namespace
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Project where the experiement will be assigned
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Job object
	Job                  *Job     `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobBodyRequest) Reset()         { *m = JobBodyRequest{} }
func (m *JobBodyRequest) String() string { return proto.CompactTextString(m) }
func (*JobBodyRequest) ProtoMessage()    {}
func (*JobBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23554ad836921a71, []int{2}
}

func (m *JobBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobBodyRequest.Unmarshal(m, b)
}
func (m *JobBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobBodyRequest.Marshal(b, m, deterministic)
}
func (m *JobBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobBodyRequest.Merge(m, src)
}
func (m *JobBodyRequest) XXX_Size() int {
	return xxx_messageInfo_JobBodyRequest.Size(m)
}
func (m *JobBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobBodyRequest proto.InternalMessageInfo

func (m *JobBodyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *JobBodyRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *JobBodyRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

// Contains list jobs
type ListJobsResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*Job `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobsResponse) Reset()         { *m = ListJobsResponse{} }
func (m *ListJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobsResponse) ProtoMessage()    {}
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23554ad836921a71, []int{3}
}

func (m *ListJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsResponse.Unmarshal(m, b)
}
func (m *ListJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsResponse.Marshal(b, m, deterministic)
}
func (m *ListJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsResponse.Merge(m, src)
}
func (m *ListJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobsResponse.Size(m)
}
func (m *ListJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsResponse proto.InternalMessageInfo

func (m *ListJobsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListJobsResponse) GetResults() []*Job {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListJobsResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListJobsResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

// Contains list jobs
type ListJobStatusesResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*JobStatus `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobStatusesResponse) Reset()         { *m = ListJobStatusesResponse{} }
func (m *ListJobStatusesResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobStatusesResponse) ProtoMessage()    {}
func (*ListJobStatusesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23554ad836921a71, []int{4}
}

func (m *ListJobStatusesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobStatusesResponse.Unmarshal(m, b)
}
func (m *ListJobStatusesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobStatusesResponse.Marshal(b, m, deterministic)
}
func (m *ListJobStatusesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobStatusesResponse.Merge(m, src)
}
func (m *ListJobStatusesResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobStatusesResponse.Size(m)
}
func (m *ListJobStatusesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobStatusesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobStatusesResponse proto.InternalMessageInfo

func (m *ListJobStatusesResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListJobStatusesResponse) GetResults() []*JobStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListJobStatusesResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListJobStatusesResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func init() {
	proto.RegisterType((*Job)(nil), "v1.Job")
	proto.RegisterType((*JobStatus)(nil), "v1.JobStatus")
	proto.RegisterType((*JobBodyRequest)(nil), "v1.JobBodyRequest")
	proto.RegisterType((*ListJobsResponse)(nil), "v1.ListJobsResponse")
	proto.RegisterType((*ListJobStatusesResponse)(nil), "v1.ListJobStatusesResponse")
}

func init() { proto.RegisterFile("v1/job.proto", fileDescriptor_23554ad836921a71) }

var fileDescriptor_23554ad836921a71 = []byte{
	// 1421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcb, 0x72, 0x1b, 0x45,
	0x17, 0xae, 0x91, 0x1c, 0x59, 0x3a, 0x8e, 0x6f, 0xfd, 0xfb, 0x77, 0x3a, 0xb2, 0x43, 0xe4, 0x21,
	0x17, 0x5b, 0xc4, 0x9a, 0xc8, 0xf1, 0xca, 0xc5, 0x02, 0xe7, 0x52, 0x29, 0x5c, 0x40, 0x52, 0x13,
	0x52, 0x50, 0x40, 0x95, 0xaa, 0x67, 0xa6, 0x25, 0x8f, 0x2d, 0x4d, 0x4f, 0xba, 0x7b, 0x14, 0x1b,
	0x97, 0x37, 0x59, 0xb1, 0x60, 0x05, 0x3b, 0x36, 0xbc, 0x0b, 0x0b, 0x5e, 0x80, 0x57, 0x60, 0xc9,
	0x23, 0xb0, 0xa0, 0xfa, 0x32, 0x8a, 0xa2, 0xc4, 0x92, 0x71, 0x8a, 0x95, 0xa6, 0xbf, 0xd3, 0xfd,
	0x7d, 0xe7, 0xd6, 0x17, 0xc1, 0xe5, 0x7e, 0xd3, 0x3b, 0x60, 0x41, 0x23, 0xe5, 0x4c, 0x32, 0x54,
	0xe8, 0x37, 0xab, 0xab, 0x1d, 0xc6, 0x3a, 0x5d, 0xea, 0x91, 0x34, 0xf6, 0x48, 0x92, 0x30, 0x49,
	0x64, 0xcc, 0x12, 0x61, 0x66, 0x54, 0x57, 0xac, 0x55, 0x8f, 0x82, 0xac, 0xed, 0xd1, 0x5e, 0x2a,
	0x8f, 0xad, 0xf1, 0x8e, 0xfe, 0x09, 0x37, 0x3b, 0x34, 0xd9, 0x14, 0x2f, 0x49, 0xa7, 0x43, 0xb9,
	0xc7, 0x52, 0xbd, 0xfc, 0x1d, 0x54, 0xb3, 0xfd, 0xa6, 0x17, 0x10, 0x41, 0xed, 0x70, 0xb1, 0xdf,
	0xf4, 0x42, 0x16, 0xd1, 0x16, 0xa7, 0x6d, 0x03, 0xb9, 0x7f, 0x95, 0xa0, 0xb8, 0xc7, 0x02, 0x34,
	0x07, 0x85, 0x38, 0xc2, 0x4e, 0xcd, 0x59, 0x2f, 0xfa, 0x85, 0x38, 0x42, 0x08, 0xa6, 0xb2, 0x2c,
	0x8e, 0x70, 0xa1, 0xe6, 0xac, 0x57, 0x7c, 0xfd, 0x8d, 0xae, 0xc3, 0x4c, 0x96, 0xc4, 0x2f, 0x32,
	0xda, 0x4a, 0x48, 0x8f, 0xe2, 0xa2, 0x36, 0x81, 0x81, 0xbe, 0x20, 0x3d, 0xaa, 0x16, 0x69, 0xcb,
	0x94, 0x59, 0xa4, 0xbe, 0x51, 0x0d, 0x66, 0x22, 0x2a, 0x42, 0x1e, 0x6b, 0x27, 0xf1, 0x25, 0x6d,
	0x1a, 0x86, 0xd4, 0x2a, 0x49, 0x3a, 0x02, 0x97, 0x6a, 0x45, 0xb5, 0x4a, 0x7d, 0x23, 0x0c, 0xd3,
	0x11, 0xed, 0x52, 0x49, 0x23, 0x3c, 0x5d, 0x73, 0xd6, 0xcb, 0x7e, 0x3e, 0xd4, 0x8e, 0x09, 0xca,
	0x71, 0xd9, 0x3a, 0x26, 0x28, 0x47, 0xd7, 0x00, 0x42, 0x4e, 0x89, 0xa4, 0x51, 0x8b, 0x48, 0x5c,
	0xd1, 0x96, 0x8a, 0x45, 0x76, 0xa5, 0x32, 0x67, 0x69, 0x94, 0x9b, 0xc1, 0x98, 0x2d, 0x62, 0xcc,
	0x42, 0x12, 0x6e, 0xcd, 0x33, 0xc6, 0x6c, 0x91, 0x5d, 0xa9, 0xa2, 0x6e, 0xc7, 0x49, 0x2c, 0xf6,
	0x8d, 0xfd, 0xb2, 0x89, 0x3a, 0x87, 0x76, 0xa5, 0xf2, 0x35, 0xe5, 0xec, 0x80, 0x86, 0x12, 0xcf,
	0x6a, 0x63, 0x3e, 0x54, 0xcc, 0xb1, 0x68, 0xf5, 0x48, 0x42, 0x3a, 0x34, 0xc2, 0x73, 0x86, 0x39,
	0x16, 0x9f, 0x1b, 0x40, 0x85, 0x22, 0x52, 0x1a, 0xe2, 0x79, 0x13, 0x8a, 0xfa, 0x56, 0x64, 0x01,
	0x09, 0x0f, 0x69, 0x12, 0xe1, 0x05, 0x43, 0x66, 0x87, 0x68, 0x15, 0x2a, 0x6d, 0x4e, 0x7a, 0xf4,
	0x25, 0xe3, 0x87, 0x78, 0xd1, 0x70, 0x0d, 0x00, 0xe5, 0x65, 0x97, 0x08, 0xd9, 0x12, 0x92, 0xc8,
	0x4c, 0x60, 0x64, 0xbc, 0x54, 0xd0, 0x33, 0x8d, 0xa0, 0x9b, 0x30, 0x97, 0x97, 0x9e, 0x72, 0x9a,
	0x84, 0x14, 0xff, 0x4f, 0x17, 0x7b, 0x56, 0xa1, 0x7e, 0x0e, 0xa2, 0x5b, 0x50, 0xe1, 0x54, 0xb0,
	0x8c, 0x87, 0x54, 0xe0, 0xa5, 0x9a, 0xb3, 0x3e, 0xb3, 0x55, 0x6e, 0xf4, 0x9b, 0x8d, 0x87, 0x71,
	0x28, 0xfd, 0xd7, 0x26, 0xb4, 0x0c, 0x25, 0x4e, 0x49, 0xd4, 0xa3, 0xf8, 0xff, 0x5a, 0xca, 0x8e,
	0xd0, 0x07, 0x00, 0x01, 0x63, 0x87, 0x3d, 0xc2, 0x0f, 0x69, 0x84, 0x97, 0x75, 0xed, 0x86, 0x10,
	0x54, 0x83, 0x52, 0x4a, 0x38, 0xe9, 0x09, 0x7c, 0x65, 0x84, 0xdc, 0xe2, 0x68, 0x0d, 0xa6, 0x79,
	0x96, 0xb4, 0x68, 0xd2, 0xc7, 0x78, 0x74, 0x0a, 0xcf, 0x92, 0x47, 0x49, 0x1f, 0xad, 0x40, 0x25,
	0xc8, 0xe2, 0x6e, 0xd4, 0x3a, 0x60, 0x01, 0xbe, 0xaa, 0xf5, 0xcb, 0x1a, 0x50, 0x9d, 0x7c, 0x13,
	0x2a, 0x11, 0x91, 0x44, 0x05, 0x2a, 0x70, 0x75, 0x84, 0xa1, 0xac, 0x4c, 0x3e, 0x6d, 0x0b, 0xb4,
	0x09, 0xb3, 0x84, 0xcb, 0xb8, 0x4d, 0x42, 0x69, 0xa6, 0xae, 0x8c, 0x4c, 0xbd, 0x9c, 0x9b, 0xf5,
	0xf4, 0x2a, 0x94, 0x19, 0x8f, 0x3b, 0x71, 0x42, 0xba, 0x78, 0x55, 0x27, 0x6e, 0x30, 0x46, 0x1b,
	0xb0, 0x10, 0x76, 0x59, 0x12, 0x27, 0x9d, 0x96, 0x90, 0x9c, 0x48, 0xda, 0x39, 0xc6, 0xd7, 0xb4,
	0x57, 0xf3, 0x16, 0x7f, 0x66, 0x61, 0xf7, 0x57, 0x07, 0x2a, 0x7b, 0x2c, 0xb0, 0x35, 0x39, 0xcf,
	0xa6, 0x7b, 0xb3, 0xb7, 0x8b, 0xe3, 0x7b, 0x7b, 0x6a, 0xb4, 0xb7, 0x97, 0xa1, 0x64, 0x3b, 0xc2,
	0x6c, 0x3c, 0x3b, 0x52, 0x6d, 0xd6, 0xa3, 0x42, 0x90, 0x0e, 0xc5, 0x25, 0xd3, 0x66, 0x76, 0xe8,
	0x7e, 0x0b, 0x73, 0x7b, 0x2c, 0xb8, 0xcf, 0xa2, 0x63, 0x9f, 0xbe, 0xc8, 0xa8, 0x90, 0x68, 0x09,
	0x2e, 0xb1, 0x97, 0x09, 0xe5, 0xda, 0xd1, 0x8a, 0x6f, 0x06, 0xc3, 0x5d, 0x5f, 0x78, 0xb3, 0xeb,
	0xaf, 0x42, 0x51, 0xd5, 0xa5, 0xa8, 0xf3, 0x39, 0xad, 0xf2, 0xb9, 0xc7, 0x02, 0x5f, 0x61, 0xee,
	0x09, 0x2c, 0x7c, 0x16, 0x0b, 0xb9, 0xc7, 0x02, 0xe1, 0x53, 0x91, 0xb2, 0x44, 0x50, 0x45, 0x1f,
	0xb2, 0x2c, 0x91, 0x9a, 0xfe, 0x92, 0x6f, 0x06, 0xba, 0x0b, 0xa8, 0xc8, 0xba, 0x52, 0xe0, 0x42,
	0xad, 0x38, 0x4c, 0x94, 0xe3, 0xaa, 0x24, 0x29, 0xa7, 0xfd, 0x98, 0x65, 0xc2, 0xe6, 0x65, 0x30,
	0xd6, 0x27, 0x11, 0x3d, 0x92, 0x83, 0x93, 0x88, 0x1e, 0x49, 0xf7, 0x07, 0x07, 0xae, 0x58, 0x75,
	0x93, 0x7f, 0x3a, 0xc9, 0x89, 0xdb, 0xa3, 0x4e, 0xcc, 0x5a, 0x27, 0xcc, 0xfa, 0x0b, 0xbb, 0xb2,
	0xf5, 0xf7, 0x22, 0x80, 0xa2, 0xa1, 0xbc, 0x1f, 0x87, 0x14, 0x7d, 0x07, 0xe5, 0x3c, 0x2d, 0x68,
	0x59, 0x49, 0x3c, 0x35, 0xa9, 0x1c, 0xaa, 0x42, 0x75, 0x49, 0xe1, 0xa3, 0xc9, 0x73, 0xdd, 0x57,
	0x7f, 0xfc, 0xf9, 0x73, 0x61, 0x15, 0x55, 0xbd, 0x7e, 0xd3, 0x3b, 0xd1, 0x95, 0x39, 0xf5, 0x4e,
	0x6c, 0x25, 0x4e, 0xd5, 0xb5, 0x23, 0x50, 0x04, 0x48, 0xad, 0xbb, 0x3f, 0xd8, 0x84, 0x5a, 0x47,
	0xf3, 0x3d, 0x51, 0x0b, 0xfe, 0xa5, 0x4a, 0xbe, 0x99, 0xc5, 0x40, 0x4f, 0xab, 0x10, 0x53, 0xda,
	0x5d, 0x1e, 0xee, 0xc7, 0xfd, 0x0b, 0x68, 0xac, 0x69, 0x8d, 0x15, 0x74, 0x55, 0x69, 0x10, 0xc3,
	0x32, 0x22, 0xf1, 0x04, 0x2a, 0x0f, 0x74, 0xe3, 0xab, 0x6d, 0x8e, 0x6c, 0x29, 0x86, 0x99, 0xf3,
	0x1e, 0x71, 0x6f, 0x6a, 0xb2, 0xeb, 0xee, 0x98, 0xb4, 0xec, 0x38, 0x75, 0xf4, 0x25, 0x94, 0x1e,
	0x53, 0xe5, 0x06, 0xc2, 0xb9, 0xa7, 0xd1, 0xa3, 0x44, 0xc6, 0xf2, 0xf8, 0xd3, 0xe8, 0x2d, 0xce,
	0xdb, 0x9a, 0x73, 0x0d, 0x5d, 0x3f, 0x9b, 0xd3, 0x3b, 0x89, 0xa3, 0x53, 0xf4, 0xca, 0x81, 0xca,
	0x73, 0xbd, 0x03, 0x27, 0xfa, 0xf9, 0xb5, 0xe6, 0xf4, 0xab, 0x1f, 0x8e, 0xe3, 0x54, 0x6f, 0x87,
	0x38, 0x3a, 0xdd, 0x71, 0xea, 0xdf, 0xac, 0x9f, 0x77, 0x26, 0x6a, 0x43, 0xe5, 0xa1, 0xbe, 0x31,
	0xc7, 0x47, 0xb7, 0xdc, 0x30, 0x8f, 0x8d, 0x46, 0xfe, 0xd8, 0x68, 0x3c, 0x52, 0x8f, 0x8d, 0x3c,
	0xd8, 0xfa, 0xc4, 0x60, 0xbb, 0x00, 0x03, 0x1d, 0x71, 0x01, 0xa1, 0x3b, 0x5a, 0xe8, 0x56, 0x7d,
	0x6d, 0x8c, 0x90, 0xb9, 0xfa, 0x55, 0x54, 0x5d, 0x98, 0x7e, 0x26, 0x59, 0x7a, 0xb1, 0x98, 0x3c,
	0x2d, 0xb5, 0xe1, 0xde, 0x98, 0x10, 0x93, 0x27, 0x24, 0x4b, 0x4d, 0x0e, 0xcb, 0x56, 0xed, 0xec,
	0x6d, 0x79, 0x96, 0x58, 0x5d, 0x8b, 0xdd, 0x70, 0xc7, 0x25, 0x30, 0xd7, 0x09, 0x01, 0x7c, 0xaa,
	0x1f, 0x1c, 0xe7, 0x6c, 0xc5, 0x2d, 0x4d, 0x7e, 0xc7, 0xbd, 0x3d, 0x29, 0x12, 0x6e, 0x68, 0x95,
	0x08, 0x81, 0x8a, 0x4f, 0x45, 0xd6, 0xa3, 0xe7, 0xd4, 0x68, 0x6a, 0x8d, 0x8f, 0xdc, 0x5b, 0xe7,
	0xd0, 0xc8, 0x7a, 0xba, 0x3a, 0x0c, 0xc0, 0x6e, 0xff, 0xf7, 0x2b, 0xd0, 0xc4, 0xb0, 0xec, 0xf1,
	0xa0, 0x04, 0x55, 0xe2, 0x18, 0xff, 0xaf, 0x05, 0xb9, 0x51, 0x41, 0x2f, 0x60, 0x26, 0x3f, 0x46,
	0x2f, 0xa6, 0x78, 0x57, 0x2b, 0xd6, 0xdd, 0xf5, 0x49, 0x8a, 0xf9, 0x29, 0x8b, 0x32, 0x98, 0x7d,
	0x9e, 0xbc, 0x9f, 0xa8, 0x6d, 0x97, 0x7a, 0x7d, 0x92, 0x68, 0x96, 0x0c, 0x64, 0x53, 0x98, 0x33,
	0x47, 0x63, 0x7e, 0x55, 0x8e, 0xd1, 0xd5, 0x47, 0x9c, 0xbd, 0x12, 0xf3, 0xe3, 0xdc, 0x06, 0x8a,
	0xd6, 0x27, 0x6f, 0x36, 0xcb, 0xff, 0x3d, 0xcc, 0x8f, 0xdc, 0xce, 0x63, 0x24, 0x57, 0x86, 0xee,
	0x90, 0xd1, 0xcb, 0xfc, 0x02, 0xda, 0x0c, 0xe6, 0x07, 0x37, 0x8b, 0x7d, 0x9b, 0x9d, 0xad, 0xfd,
	0xe6, 0x23, 0xc0, 0xbd, 0xa7, 0xd5, 0x36, 0xdd, 0x73, 0xab, 0xa9, 0xad, 0xd2, 0x83, 0x59, 0x93,
	0xde, 0x07, 0xe6, 0xf5, 0x3d, 0x46, 0x6e, 0x51, 0x59, 0x1e, 0x0c, 0x3f, 0xd2, 0xf3, 0xbe, 0x45,
	0x13, 0xfb, 0x56, 0xbd, 0xed, 0x39, 0x6d, 0xa3, 0x1f, 0x1d, 0x58, 0x78, 0x9c, 0x07, 0x98, 0x4b,
	0xae, 0xbe, 0x45, 0x3c, 0x7c, 0xb0, 0xbd, 0x43, 0xf6, 0xb1, 0x96, 0xdd, 0x75, 0x3f, 0xd6, 0xb2,
	0x54, 0xfb, 0xd9, 0xc8, 0xd5, 0xed, 0x70, 0xc4, 0x09, 0x8b, 0x0e, 0xf9, 0xb2, 0xe3, 0xd4, 0xef,
	0xff, 0xee, 0xfc, 0xb4, 0xfb, 0x9b, 0x83, 0x12, 0x98, 0xd9, 0x63, 0x41, 0x4d, 0x98, 0x57, 0x90,
	0xfb, 0x15, 0x2c, 0x3d, 0x65, 0xdd, 0x63, 0x72, 0xc4, 0x92, 0xda, 0xc1, 0x6b, 0x1c, 0x6d, 0xec,
	0x4b, 0x99, 0x8a, 0x1d, 0xcf, 0xeb, 0xc4, 0x72, 0x3f, 0x0b, 0x1a, 0x21, 0xeb, 0x79, 0xa9, 0x9d,
	0x38, 0xf8, 0xd8, 0x14, 0xd1, 0xa1, 0xa8, 0x2e, 0x85, 0x2c, 0x91, 0x24, 0x94, 0x9f, 0xe4, 0xb0,
	0x9a, 0xbc, 0x55, 0x6a, 0x36, 0x9a, 0xdb, 0x8d, 0xed, 0xba, 0xe3, 0x6c, 0x2d, 0x90, 0x34, 0xed,
	0xc6, 0xa1, 0xfe, 0x93, 0xec, 0x1d, 0x08, 0x96, 0xec, 0xbc, 0x85, 0xf8, 0x1b, 0x50, 0xdc, 0xbe,
	0xbb, 0x8d, 0x5c, 0xc0, 0xbe, 0xfd, 0xbb, 0x53, 0x8b, 0x18, 0x15, 0xb5, 0x84, 0xc9, 0x1a, 0x3d,
	0x8a, 0x85, 0x6c, 0xa0, 0x12, 0x4c, 0xfd, 0x52, 0x70, 0xa6, 0x83, 0x92, 0xde, 0x69, 0xf7, 0xfe,
	0x09, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x74, 0x4f, 0x3a, 0xe3, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	// List jobs
	ListJobs(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	// List bookmarked jobs
	ListBookmarkedJobs(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	// List archived jobs
	ListArchivedJobs(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	// Create new job
	CreateJob(ctx context.Context, in *JobBodyRequest, opts ...grpc.CallOption) (*Job, error)
	// Get job
	GetJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Job, error)
	// Update job
	UpdateJob(ctx context.Context, in *JobBodyRequest, opts ...grpc.CallOption) (*Job, error)
	// Delete job
	DeleteJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete jobs
	DeleteJobs(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Stop job
	StopJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Stop jobs
	StopJobs(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Restart job
	RestartJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Job, error)
	// Resume job
	ResumeJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Job, error)
	// Archive job
	ArchiveJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Restore job
	RestoreJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Bookmark job
	BookmarkJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// UnBookmark job
	UnBookmarkJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get job status
	GetJobStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// List job statuses
	ListJobStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*ListJobStatusesResponse, error)
	// Create new job status
	CreateJobStatus(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*JobStatus, error)
	// Get job code ref
	GetJobCodeRef(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*CodeReference, error)
	// Get job code ref
	GreateJobCodeRef(ctx context.Context, in *CodeReferenceBodyRequest, opts ...grpc.CallOption) (*CodeReference, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) ListJobs(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/v1.JobService/ListJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ListBookmarkedJobs(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/v1.JobService/ListBookmarkedJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ListArchivedJobs(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/v1.JobService/ListArchivedJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) CreateJob(ctx context.Context, in *JobBodyRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/v1.JobService/CreateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GetJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/v1.JobService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) UpdateJob(ctx context.Context, in *JobBodyRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/v1.JobService/UpdateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) DeleteJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/DeleteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) DeleteJobs(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/DeleteJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) StopJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/StopJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) StopJobs(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/StopJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) RestartJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/v1.JobService/RestartJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ResumeJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/v1.JobService/ResumeJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ArchiveJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/ArchiveJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) RestoreJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/RestoreJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) BookmarkJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/BookmarkJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) UnBookmarkJob(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.JobService/UnBookmarkJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GetJobStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/v1.JobService/GetJobStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) ListJobStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*ListJobStatusesResponse, error) {
	out := new(ListJobStatusesResponse)
	err := c.cc.Invoke(ctx, "/v1.JobService/ListJobStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) CreateJobStatus(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*JobStatus, error) {
	out := new(JobStatus)
	err := c.cc.Invoke(ctx, "/v1.JobService/CreateJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GetJobCodeRef(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*CodeReference, error) {
	out := new(CodeReference)
	err := c.cc.Invoke(ctx, "/v1.JobService/GetJobCodeRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) GreateJobCodeRef(ctx context.Context, in *CodeReferenceBodyRequest, opts ...grpc.CallOption) (*CodeReference, error) {
	out := new(CodeReference)
	err := c.cc.Invoke(ctx, "/v1.JobService/GreateJobCodeRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	// List jobs
	ListJobs(context.Context, *ProjectBodyRequest) (*ListJobsResponse, error)
	// List bookmarked jobs
	ListBookmarkedJobs(context.Context, *OwnerBodyRequest) (*ListJobsResponse, error)
	// List archived jobs
	ListArchivedJobs(context.Context, *OwnerBodyRequest) (*ListJobsResponse, error)
	// Create new job
	CreateJob(context.Context, *JobBodyRequest) (*Job, error)
	// Get job
	GetJob(context.Context, *OwnedEntityIdRequest) (*Job, error)
	// Update job
	UpdateJob(context.Context, *JobBodyRequest) (*Job, error)
	// Delete job
	DeleteJob(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Delete jobs
	DeleteJobs(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Stop job
	StopJob(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Stop jobs
	StopJobs(context.Context, *ProjectBodyRequest) (*empty.Empty, error)
	// Restart job
	RestartJob(context.Context, *OwnedEntityIdRequest) (*Job, error)
	// Resume job
	ResumeJob(context.Context, *OwnedEntityIdRequest) (*Job, error)
	// Archive job
	ArchiveJob(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Restore job
	RestoreJob(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Bookmark job
	BookmarkJob(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// UnBookmark job
	UnBookmarkJob(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Get job status
	GetJobStatuses(context.Context, *OwnedEntityIdRequest) (*StatusResponse, error)
	// List job statuses
	ListJobStatuses(context.Context, *OwnedEntityIdRequest) (*ListJobStatusesResponse, error)
	// Create new job status
	CreateJobStatus(context.Context, *OwnedEntityIdRequest) (*JobStatus, error)
	// Get job code ref
	GetJobCodeRef(context.Context, *OwnedEntityIdRequest) (*CodeReference, error)
	// Get job code ref
	GreateJobCodeRef(context.Context, *CodeReferenceBodyRequest) (*CodeReference, error)
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) ListJobs(ctx context.Context, req *ProjectBodyRequest) (*ListJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobs not implemented")
}
func (*UnimplementedJobServiceServer) ListBookmarkedJobs(ctx context.Context, req *OwnerBodyRequest) (*ListJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBookmarkedJobs not implemented")
}
func (*UnimplementedJobServiceServer) ListArchivedJobs(ctx context.Context, req *OwnerBodyRequest) (*ListJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArchivedJobs not implemented")
}
func (*UnimplementedJobServiceServer) CreateJob(ctx context.Context, req *JobBodyRequest) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJob not implemented")
}
func (*UnimplementedJobServiceServer) GetJob(ctx context.Context, req *OwnedEntityIdRequest) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedJobServiceServer) UpdateJob(ctx context.Context, req *JobBodyRequest) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJob not implemented")
}
func (*UnimplementedJobServiceServer) DeleteJob(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJob not implemented")
}
func (*UnimplementedJobServiceServer) DeleteJobs(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobs not implemented")
}
func (*UnimplementedJobServiceServer) StopJob(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopJob not implemented")
}
func (*UnimplementedJobServiceServer) StopJobs(ctx context.Context, req *ProjectBodyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopJobs not implemented")
}
func (*UnimplementedJobServiceServer) RestartJob(ctx context.Context, req *OwnedEntityIdRequest) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartJob not implemented")
}
func (*UnimplementedJobServiceServer) ResumeJob(ctx context.Context, req *OwnedEntityIdRequest) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeJob not implemented")
}
func (*UnimplementedJobServiceServer) ArchiveJob(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveJob not implemented")
}
func (*UnimplementedJobServiceServer) RestoreJob(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestoreJob not implemented")
}
func (*UnimplementedJobServiceServer) BookmarkJob(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookmarkJob not implemented")
}
func (*UnimplementedJobServiceServer) UnBookmarkJob(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnBookmarkJob not implemented")
}
func (*UnimplementedJobServiceServer) GetJobStatuses(ctx context.Context, req *OwnedEntityIdRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStatuses not implemented")
}
func (*UnimplementedJobServiceServer) ListJobStatuses(ctx context.Context, req *OwnedEntityIdRequest) (*ListJobStatusesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobStatuses not implemented")
}
func (*UnimplementedJobServiceServer) CreateJobStatus(ctx context.Context, req *OwnedEntityIdRequest) (*JobStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobStatus not implemented")
}
func (*UnimplementedJobServiceServer) GetJobCodeRef(ctx context.Context, req *OwnedEntityIdRequest) (*CodeReference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobCodeRef not implemented")
}
func (*UnimplementedJobServiceServer) GreateJobCodeRef(ctx context.Context, req *CodeReferenceBodyRequest) (*CodeReference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GreateJobCodeRef not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/ListJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListJobs(ctx, req.(*ProjectBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ListBookmarkedJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListBookmarkedJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/ListBookmarkedJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListBookmarkedJobs(ctx, req.(*OwnerBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ListArchivedJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListArchivedJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/ListArchivedJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListArchivedJobs(ctx, req.(*OwnerBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).CreateJob(ctx, req.(*JobBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).UpdateJob(ctx, req.(*JobBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_DeleteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).DeleteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/DeleteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).DeleteJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_DeleteJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).DeleteJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/DeleteJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).DeleteJobs(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_StopJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).StopJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/StopJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).StopJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_StopJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).StopJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/StopJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).StopJobs(ctx, req.(*ProjectBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_RestartJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).RestartJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/RestartJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).RestartJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ResumeJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ResumeJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/ResumeJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ResumeJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ArchiveJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ArchiveJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/ArchiveJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ArchiveJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_RestoreJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).RestoreJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/RestoreJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).RestoreJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_BookmarkJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).BookmarkJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/BookmarkJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).BookmarkJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_UnBookmarkJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).UnBookmarkJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/UnBookmarkJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).UnBookmarkJob(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GetJobStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetJobStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/GetJobStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetJobStatuses(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_ListJobStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ListJobStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/ListJobStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ListJobStatuses(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_CreateJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).CreateJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/CreateJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).CreateJobStatus(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GetJobCodeRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetJobCodeRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/GetJobCodeRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetJobCodeRef(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_GreateJobCodeRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeReferenceBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GreateJobCodeRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.JobService/GreateJobCodeRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GreateJobCodeRef(ctx, req.(*CodeReferenceBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListJobs",
			Handler:    _JobService_ListJobs_Handler,
		},
		{
			MethodName: "ListBookmarkedJobs",
			Handler:    _JobService_ListBookmarkedJobs_Handler,
		},
		{
			MethodName: "ListArchivedJobs",
			Handler:    _JobService_ListArchivedJobs_Handler,
		},
		{
			MethodName: "CreateJob",
			Handler:    _JobService_CreateJob_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _JobService_GetJob_Handler,
		},
		{
			MethodName: "UpdateJob",
			Handler:    _JobService_UpdateJob_Handler,
		},
		{
			MethodName: "DeleteJob",
			Handler:    _JobService_DeleteJob_Handler,
		},
		{
			MethodName: "DeleteJobs",
			Handler:    _JobService_DeleteJobs_Handler,
		},
		{
			MethodName: "StopJob",
			Handler:    _JobService_StopJob_Handler,
		},
		{
			MethodName: "StopJobs",
			Handler:    _JobService_StopJobs_Handler,
		},
		{
			MethodName: "RestartJob",
			Handler:    _JobService_RestartJob_Handler,
		},
		{
			MethodName: "ResumeJob",
			Handler:    _JobService_ResumeJob_Handler,
		},
		{
			MethodName: "ArchiveJob",
			Handler:    _JobService_ArchiveJob_Handler,
		},
		{
			MethodName: "RestoreJob",
			Handler:    _JobService_RestoreJob_Handler,
		},
		{
			MethodName: "BookmarkJob",
			Handler:    _JobService_BookmarkJob_Handler,
		},
		{
			MethodName: "UnBookmarkJob",
			Handler:    _JobService_UnBookmarkJob_Handler,
		},
		{
			MethodName: "GetJobStatuses",
			Handler:    _JobService_GetJobStatuses_Handler,
		},
		{
			MethodName: "ListJobStatuses",
			Handler:    _JobService_ListJobStatuses_Handler,
		},
		{
			MethodName: "CreateJobStatus",
			Handler:    _JobService_CreateJobStatus_Handler,
		},
		{
			MethodName: "GetJobCodeRef",
			Handler:    _JobService_GetJobCodeRef_Handler,
		},
		{
			MethodName: "GreateJobCodeRef",
			Handler:    _JobService_GreateJobCodeRef_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/job.proto",
}
