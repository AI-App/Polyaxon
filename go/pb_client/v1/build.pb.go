// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/build.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Build specification
type Build struct {
	// Unique integer identifier
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Unique name generated
	UniqueName string `protobuf:"bytes,3,opt,name=unique_name,json=uniqueName,proto3" json:"unique_name,omitempty"`
	// Optional name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Optional Tags of this entity
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// Optional if the entity has been deleted
	Deleted bool `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Required name of user started this entity
	User string `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional last time the entity was started
	StartedAt string `protobuf:"bytes,11,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Optional last time the entity was started
	FinishedAt string `protobuf:"bytes,12,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Required project name
	Project string `protobuf:"bytes,13,opt,name=project,proto3" json:"project,omitempty"`
	// Optional flag to tell if this entity is managed by the platform
	IsManaged string `protobuf:"bytes,14,opt,name=is_managed,json=isManaged,proto3" json:"is_managed,omitempty"`
	// Optional content of the entity's spec
	Spec string `protobuf:"bytes,15,opt,name=spec,proto3" json:"spec,omitempty"`
	// Optional backend value of this entity
	Backend string `protobuf:"bytes,16,opt,name=backend,proto3" json:"backend,omitempty"`
	// Optional framework name of this entity
	Framework string `protobuf:"bytes,17,opt,name=framework,proto3" json:"framework,omitempty"`
	// Optional latest status of this entity
	LastStatus string `protobuf:"bytes,18,opt,name=last_status,json=lastStatus,proto3" json:"last_status,omitempty"`
	// Optional Code reference
	CodeReference int64 `protobuf:"varint,19,opt,name=code_reference,json=codeReference,proto3" json:"code_reference,omitempty"`
	// Optional hardware resources requested by this entity
	Resources *Dict `protobuf:"bytes,20,opt,name=resources,proto3" json:"resources,omitempty"`
	// Optional a readme text describing this entity
	Readme string `protobuf:"bytes,21,opt,name=readme,proto3" json:"readme,omitempty"`
	// Optional if this entity was bookmarked
	Bookmarked bool `protobuf:"varint,22,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
	// Optional params of this entity
	Params *Dict `protobuf:"bytes,23,opt,name=params,proto3" json:"params,omitempty"`
	// Optional run enivronment tracked
	RunEnv *Dict `protobuf:"bytes,24,opt,name=run_env,json=runEnv,proto3" json:"run_env,omitempty"`
	// Optional build build name
	BuildBuild           string   `protobuf:"bytes,25,opt,name=build_build,json=buildBuild,proto3" json:"build_build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f276a347e0551d9, []int{0}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Build) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Build) GetUniqueName() string {
	if m != nil {
		return m.UniqueName
	}
	return ""
}

func (m *Build) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Build) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Build) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Build) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Build) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Build) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Build) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Build) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *Build) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *Build) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Build) GetIsManaged() string {
	if m != nil {
		return m.IsManaged
	}
	return ""
}

func (m *Build) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Build) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *Build) GetFramework() string {
	if m != nil {
		return m.Framework
	}
	return ""
}

func (m *Build) GetLastStatus() string {
	if m != nil {
		return m.LastStatus
	}
	return ""
}

func (m *Build) GetCodeReference() int64 {
	if m != nil {
		return m.CodeReference
	}
	return 0
}

func (m *Build) GetResources() *Dict {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Build) GetReadme() string {
	if m != nil {
		return m.Readme
	}
	return ""
}

func (m *Build) GetBookmarked() bool {
	if m != nil {
		return m.Bookmarked
	}
	return false
}

func (m *Build) GetParams() *Dict {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Build) GetRunEnv() *Dict {
	if m != nil {
		return m.RunEnv
	}
	return nil
}

func (m *Build) GetBuildBuild() string {
	if m != nil {
		return m.BuildBuild
	}
	return ""
}

// Build specification
type BuildStatus struct {
	// Unique integer identifier
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional status recorded
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Optional status message
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildStatus) Reset()         { *m = BuildStatus{} }
func (m *BuildStatus) String() string { return proto.CompactTextString(m) }
func (*BuildStatus) ProtoMessage()    {}
func (*BuildStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f276a347e0551d9, []int{1}
}

func (m *BuildStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildStatus.Unmarshal(m, b)
}
func (m *BuildStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildStatus.Marshal(b, m, deterministic)
}
func (m *BuildStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildStatus.Merge(m, src)
}
func (m *BuildStatus) XXX_Size() int {
	return xxx_messageInfo_BuildStatus.Size(m)
}
func (m *BuildStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BuildStatus proto.InternalMessageInfo

func (m *BuildStatus) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuildStatus) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *BuildStatus) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *BuildStatus) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *BuildStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BuildStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Request data to create/update build
type BuildBodyRequest struct {
	// Owner of the namespace
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Project where the experiement will be assigned
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Build object
	Build                *Build   `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildBodyRequest) Reset()         { *m = BuildBodyRequest{} }
func (m *BuildBodyRequest) String() string { return proto.CompactTextString(m) }
func (*BuildBodyRequest) ProtoMessage()    {}
func (*BuildBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f276a347e0551d9, []int{2}
}

func (m *BuildBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildBodyRequest.Unmarshal(m, b)
}
func (m *BuildBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildBodyRequest.Marshal(b, m, deterministic)
}
func (m *BuildBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildBodyRequest.Merge(m, src)
}
func (m *BuildBodyRequest) XXX_Size() int {
	return xxx_messageInfo_BuildBodyRequest.Size(m)
}
func (m *BuildBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildBodyRequest proto.InternalMessageInfo

func (m *BuildBodyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *BuildBodyRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *BuildBodyRequest) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

// Contains list builds
type ListBuildsResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*Build `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBuildsResponse) Reset()         { *m = ListBuildsResponse{} }
func (m *ListBuildsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBuildsResponse) ProtoMessage()    {}
func (*ListBuildsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f276a347e0551d9, []int{3}
}

func (m *ListBuildsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBuildsResponse.Unmarshal(m, b)
}
func (m *ListBuildsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBuildsResponse.Marshal(b, m, deterministic)
}
func (m *ListBuildsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBuildsResponse.Merge(m, src)
}
func (m *ListBuildsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBuildsResponse.Size(m)
}
func (m *ListBuildsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBuildsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBuildsResponse proto.InternalMessageInfo

func (m *ListBuildsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListBuildsResponse) GetResults() []*Build {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListBuildsResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListBuildsResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

// Contains list builds
type ListBuildStatusesResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*BuildStatus `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBuildStatusesResponse) Reset()         { *m = ListBuildStatusesResponse{} }
func (m *ListBuildStatusesResponse) String() string { return proto.CompactTextString(m) }
func (*ListBuildStatusesResponse) ProtoMessage()    {}
func (*ListBuildStatusesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f276a347e0551d9, []int{4}
}

func (m *ListBuildStatusesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBuildStatusesResponse.Unmarshal(m, b)
}
func (m *ListBuildStatusesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBuildStatusesResponse.Marshal(b, m, deterministic)
}
func (m *ListBuildStatusesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBuildStatusesResponse.Merge(m, src)
}
func (m *ListBuildStatusesResponse) XXX_Size() int {
	return xxx_messageInfo_ListBuildStatusesResponse.Size(m)
}
func (m *ListBuildStatusesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBuildStatusesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBuildStatusesResponse proto.InternalMessageInfo

func (m *ListBuildStatusesResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListBuildStatusesResponse) GetResults() []*BuildStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListBuildStatusesResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListBuildStatusesResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func init() {
	proto.RegisterType((*Build)(nil), "v1.Build")
	proto.RegisterType((*BuildStatus)(nil), "v1.BuildStatus")
	proto.RegisterType((*BuildBodyRequest)(nil), "v1.BuildBodyRequest")
	proto.RegisterType((*ListBuildsResponse)(nil), "v1.ListBuildsResponse")
	proto.RegisterType((*ListBuildStatusesResponse)(nil), "v1.ListBuildStatusesResponse")
}

func init() { proto.RegisterFile("v1/build.proto", fileDescriptor_0f276a347e0551d9) }

var fileDescriptor_0f276a347e0551d9 = []byte{
	// 1325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0x3a, 0x89, 0x13, 0x3f, 0xe7, 0x73, 0x08, 0x61, 0x9a, 0xa6, 0xad, 0xbb, 0x81, 0x36,
	0x31, 0xa9, 0x17, 0x87, 0x70, 0xc9, 0x01, 0x91, 0xa6, 0x55, 0x55, 0x89, 0x8f, 0xca, 0x55, 0x85,
	0xe8, 0xc5, 0x8c, 0x77, 0x5f, 0x9c, 0x4d, 0xec, 0x9d, 0xed, 0xcc, 0xac, 0x9b, 0xa8, 0x8a, 0x40,
	0x9c, 0x38, 0x70, 0x40, 0x70, 0xe3, 0xc6, 0x3f, 0xc3, 0x81, 0x2b, 0xe2, 0x3f, 0xe0, 0x0f, 0x41,
	0xf3, 0xb1, 0x8e, 0xf3, 0x81, 0xf3, 0x51, 0x89, 0x4b, 0x32, 0xef, 0xbd, 0x9d, 0xf7, 0xfb, 0xbd,
	0xaf, 0x99, 0x31, 0x4c, 0xf7, 0xea, 0x41, 0x2b, 0x8b, 0x3b, 0x51, 0x2d, 0x15, 0x5c, 0x71, 0x52,
	0xe8, 0xd5, 0x17, 0x97, 0xda, 0x9c, 0xb7, 0x3b, 0x18, 0xb0, 0x34, 0x0e, 0x58, 0x92, 0x70, 0xc5,
	0x54, 0xcc, 0x13, 0x69, 0xbf, 0x58, 0xbc, 0xe9, 0xac, 0x46, 0x6a, 0x65, 0x3b, 0x01, 0x76, 0x53,
	0x75, 0xe8, 0x8c, 0x6b, 0xe6, 0x5f, 0xf8, 0xa0, 0x8d, 0xc9, 0x03, 0xf9, 0x9a, 0xb5, 0xdb, 0x28,
	0x02, 0x9e, 0x9a, 0xed, 0xe7, 0xb8, 0x9a, 0xd2, 0xe0, 0x4c, 0xa2, 0x13, 0xe7, 0x7a, 0xf5, 0x20,
	0xe4, 0x11, 0x36, 0x05, 0xee, 0x58, 0x95, 0xff, 0xf7, 0x18, 0x8c, 0x3d, 0xd4, 0xf4, 0xc8, 0x34,
	0x14, 0xe2, 0x88, 0x7a, 0x15, 0x6f, 0x65, 0xa4, 0x51, 0x88, 0x23, 0x42, 0x60, 0x34, 0xcb, 0xe2,
	0x88, 0x16, 0x2a, 0xde, 0x4a, 0xa9, 0x61, 0xd6, 0xe4, 0x0e, 0x94, 0xb3, 0x24, 0x7e, 0x95, 0x61,
	0x33, 0x61, 0x5d, 0xa4, 0x23, 0xc6, 0x04, 0x56, 0xf5, 0x25, 0xeb, 0xa2, 0xde, 0x64, 0x2c, 0xa3,
	0x76, 0x93, 0x5e, 0x93, 0x0a, 0x94, 0x23, 0x94, 0xa1, 0x88, 0x0d, 0x4d, 0x3a, 0x66, 0x4c, 0x83,
	0x2a, 0xbd, 0x4b, 0xb1, 0xb6, 0xa4, 0xc5, 0xca, 0x88, 0xde, 0xa5, 0xd7, 0x84, 0xc2, 0x78, 0x84,
	0x1d, 0x54, 0x18, 0xd1, 0xf1, 0x8a, 0xb7, 0x32, 0xd1, 0xc8, 0x45, 0x43, 0x4c, 0xa2, 0xa0, 0x13,
	0x8e, 0x98, 0x44, 0x41, 0x6e, 0x01, 0x84, 0x02, 0x99, 0xc2, 0xa8, 0xc9, 0x14, 0x2d, 0x19, 0x4b,
	0xc9, 0x69, 0xb6, 0x94, 0x36, 0x67, 0x69, 0x94, 0x9b, 0xc1, 0x9a, 0x9d, 0xc6, 0x9a, 0xa5, 0x62,
	0xc2, 0x99, 0xcb, 0xd6, 0xec, 0x34, 0x5b, 0x4a, 0x47, 0xbd, 0x13, 0x27, 0xb1, 0xdc, 0xb5, 0xf6,
	0x49, 0x1b, 0x75, 0xae, 0xda, 0x52, 0x9a, 0x6b, 0x2a, 0xf8, 0x1e, 0x86, 0x8a, 0x4e, 0x19, 0x63,
	0x2e, 0x6a, 0xcf, 0xb1, 0x6c, 0x76, 0x59, 0xc2, 0xda, 0x18, 0xd1, 0x69, 0xeb, 0x39, 0x96, 0x5f,
	0x58, 0x85, 0x0e, 0x45, 0xa6, 0x18, 0xd2, 0x19, 0x1b, 0x8a, 0x5e, 0x6b, 0x67, 0x2d, 0x16, 0xee,
	0x63, 0x12, 0xd1, 0x59, 0xeb, 0xcc, 0x89, 0x64, 0x09, 0x4a, 0x3b, 0x82, 0x75, 0xf1, 0x35, 0x17,
	0xfb, 0x74, 0xce, 0xfa, 0xea, 0x2b, 0x34, 0xcb, 0x0e, 0x93, 0xaa, 0x29, 0x15, 0x53, 0x99, 0xa4,
	0xc4, 0xb2, 0xd4, 0xaa, 0xe7, 0x46, 0x43, 0x3e, 0x80, 0xe9, 0xbc, 0xf8, 0x28, 0x30, 0x09, 0x91,
	0xbe, 0x63, 0x8a, 0x3d, 0xa5, 0xb5, 0x8d, 0x5c, 0x49, 0xee, 0x41, 0x49, 0xa0, 0xe4, 0x99, 0x08,
	0x51, 0xd2, 0xf9, 0x8a, 0xb7, 0x52, 0x5e, 0x9f, 0xa8, 0xf5, 0xea, 0xb5, 0x47, 0x71, 0xa8, 0x1a,
	0xc7, 0x26, 0xb2, 0x00, 0x45, 0x81, 0x2c, 0xea, 0x22, 0x7d, 0xd7, 0x40, 0x39, 0x89, 0xdc, 0x06,
	0x68, 0x71, 0xbe, 0xdf, 0x65, 0x62, 0x1f, 0x23, 0xba, 0x60, 0x6a, 0x37, 0xa0, 0x21, 0x15, 0x28,
	0xa6, 0x4c, 0xb0, 0xae, 0xa4, 0xef, 0x9d, 0x72, 0xee, 0xf4, 0xe4, 0x2e, 0x8c, 0x8b, 0x2c, 0x69,
	0x62, 0xd2, 0xa3, 0xf4, 0xf4, 0x27, 0x22, 0x4b, 0x1e, 0x27, 0x3d, 0x1d, 0xac, 0x19, 0xaa, 0xa6,
	0xf9, 0x4b, 0x6f, 0xd8, 0x60, 0x8d, 0x60, 0xba, 0xd9, 0xff, 0xdd, 0x83, 0xb2, 0x59, 0xb9, 0xe0,
	0x2f, 0xd3, 0xdd, 0x27, 0x9b, 0x68, 0x64, 0x78, 0x13, 0x8d, 0x9e, 0x6e, 0xa2, 0x05, 0x28, 0xba,
	0xd4, 0xdb, 0x0e, 0x77, 0x92, 0xae, 0x67, 0x17, 0xa5, 0x64, 0x6d, 0xa4, 0x45, 0x5b, 0x4f, 0x27,
	0xfa, 0x21, 0xcc, 0x1a, 0x8a, 0x0f, 0x79, 0x74, 0xd8, 0xc0, 0x57, 0x19, 0x4a, 0x45, 0xe6, 0x61,
	0x8c, 0xbf, 0x4e, 0x50, 0x18, 0xaa, 0xa5, 0x86, 0x15, 0x06, 0x1b, 0xac, 0x70, 0xb2, 0xc1, 0xee,
	0xc0, 0x98, 0x4d, 0xc1, 0x88, 0xc9, 0x54, 0x49, 0x67, 0xca, 0x38, 0x6d, 0x58, 0xbd, 0xff, 0x1d,
	0x90, 0xcf, 0x63, 0xa9, 0x8c, 0x4e, 0x36, 0x50, 0xa6, 0x3c, 0x91, 0xa8, 0x61, 0x42, 0x9e, 0x25,
	0xca, 0xc0, 0x8c, 0x35, 0xac, 0x40, 0x96, 0x61, 0x5c, 0xa0, 0xcc, 0x3a, 0x4a, 0xd2, 0x42, 0x65,
	0xe4, 0xa4, 0xbb, 0xdc, 0x42, 0x16, 0x61, 0x22, 0x15, 0xd8, 0x8b, 0x79, 0x26, 0x5d, 0x8e, 0xfa,
	0xb2, 0x19, 0x7f, 0x3c, 0x50, 0xfd, 0xf1, 0xc7, 0x03, 0xe5, 0xff, 0xe4, 0xc1, 0x8d, 0x3e, 0x03,
	0x5b, 0x0d, 0xbc, 0x88, 0xc8, 0xea, 0x69, 0x22, 0x33, 0x7d, 0x22, 0xd6, 0xc3, 0xb5, 0xe9, 0xac,
	0xff, 0x48, 0x60, 0xd2, 0x3a, 0x42, 0xd1, 0x8b, 0x43, 0x24, 0x2d, 0x80, 0xe3, 0x04, 0x91, 0x05,
	0x0d, 0xf4, 0xcc, 0x26, 0x77, 0xa0, 0x2e, 0x8b, 0x46, 0x7f, 0x36, 0x91, 0xfe, 0xfb, 0x3f, 0xfc,
	0xf5, 0xcf, 0xaf, 0x85, 0xdb, 0x64, 0x29, 0xe8, 0xd5, 0x83, 0x37, 0xa6, 0x5a, 0x47, 0xc1, 0x1b,
	0x57, 0x9d, 0x23, 0x7b, 0xf2, 0x4b, 0xb2, 0x07, 0xf3, 0x66, 0x6f, 0x7f, 0x0a, 0x1c, 0xda, 0xbc,
	0xf6, 0xfa, 0x95, 0xde, 0x74, 0x65, 0xac, 0x7c, 0xa2, 0x64, 0x1f, 0xd5, 0x61, 0xb5, 0x6d, 0xc1,
	0xb7, 0x44, 0xb8, 0x1b, 0xf7, 0xae, 0x89, 0xb4, 0x6c, 0x90, 0x6e, 0x91, 0x9b, 0x1a, 0x89, 0x59,
	0x4f, 0x67, 0x80, 0xbe, 0x86, 0xf2, 0xb6, 0x19, 0x0e, 0x7b, 0x7f, 0xcc, 0xf7, 0x4b, 0x34, 0x88,
	0x70, 0xdc, 0x41, 0xfe, 0x7d, 0xe3, 0xf4, 0xae, 0x3f, 0x34, 0x55, 0x9b, 0x5e, 0x95, 0xbc, 0x84,
	0x89, 0x27, 0x68, 0x29, 0x11, 0x9a, 0xf3, 0x8e, 0x1e, 0x27, 0x2a, 0x56, 0x87, 0x4f, 0xa3, 0x73,
	0x3c, 0xaf, 0x1a, 0xcf, 0xcb, 0xe4, 0xee, 0x30, 0xcf, 0xc1, 0x9b, 0x38, 0x3a, 0x22, 0x3f, 0x7b,
	0x50, 0x7e, 0x61, 0x66, 0xf6, 0x92, 0xac, 0xbf, 0x35, 0xbe, 0x5f, 0x2e, 0xde, 0x1f, 0xee, 0xdb,
	0x5e, 0xf1, 0x71, 0x74, 0xb4, 0xe9, 0x55, 0x5f, 0xae, 0x5d, 0xe5, 0x6b, 0xb2, 0x07, 0xe5, 0x47,
	0xe6, 0x6a, 0xbb, 0x28, 0xe2, 0x85, 0x9a, 0x7d, 0x19, 0xd4, 0xf2, 0x97, 0x41, 0xed, 0xb1, 0x7e,
	0x19, 0xe4, 0xe1, 0x57, 0x2f, 0x11, 0x7e, 0x0a, 0x93, 0x03, 0x58, 0xf2, 0x1a, 0x60, 0x35, 0x03,
	0xb6, 0x52, 0x5d, 0x1e, 0x0a, 0x66, 0xef, 0x6a, 0x1d, 0x5d, 0x0a, 0xa5, 0xe7, 0x8a, 0xa7, 0xd7,
	0x8d, 0xad, 0x6e, 0xe0, 0x3e, 0xf4, 0xef, 0x5d, 0x18, 0x5b, 0x20, 0x15, 0x4f, 0x6d, 0x3e, 0xa1,
	0x8f, 0x38, 0x6c, 0xa0, 0xcf, 0x07, 0x5c, 0x33, 0x80, 0xf7, 0xfc, 0xe1, 0xc9, 0xcc, 0xb1, 0x62,
	0x98, 0x6c, 0xa0, 0x79, 0x29, 0x5c, 0xa1, 0x5d, 0x37, 0x0c, 0x44, 0xcd, 0x5f, 0xbd, 0x38, 0x26,
	0x61, 0x9d, 0x6b, 0x28, 0x09, 0x93, 0x6e, 0xa6, 0xdf, 0x36, 0x97, 0x97, 0xc0, 0x75, 0x33, 0xaf,
	0x41, 0x75, 0x7c, 0x5c, 0xfc, 0x1f, 0xa0, 0xc2, 0x22, 0x91, 0x0c, 0xa6, 0xf2, 0x93, 0xf2, 0xba,
	0xa8, 0xeb, 0x06, 0x75, 0xcd, 0xaf, 0x5e, 0x8c, 0x9a, 0x1f, 0xa4, 0xe4, 0x10, 0x66, 0x5e, 0x24,
	0x6f, 0x0b, 0xec, 0x6a, 0x5b, 0x5d, 0xbb, 0x18, 0x38, 0x4b, 0xfa, 0xd0, 0x0a, 0x66, 0xf3, 0x13,
	0x2f, 0xbf, 0x21, 0x87, 0x60, 0x13, 0x6d, 0x71, 0xf7, 0x60, 0x7e, 0x62, 0xbb, 0x80, 0x49, 0xf5,
	0x32, 0x73, 0xe2, 0x10, 0xbe, 0xf7, 0x60, 0xee, 0xcc, 0xcd, 0x3c, 0x04, 0xf7, 0xd6, 0x89, 0xdb,
	0xe2, 0xf4, 0x55, 0x7e, 0x2d, 0x0a, 0x19, 0xcc, 0x0d, 0xdc, 0x21, 0xee, 0xad, 0xf6, 0xdf, 0x0c,
	0x4e, 0x3f, 0x03, 0xfc, 0x4f, 0x0c, 0x66, 0xe0, 0x5f, 0x01, 0x53, 0xcf, 0xd2, 0x2b, 0x98, 0xc9,
	0xf3, 0xbd, 0x6d, 0x1f, 0xbf, 0x43, 0x40, 0xe7, 0xb4, 0x65, 0x7b, 0xf0, 0x8d, 0x9c, 0x37, 0x35,
	0xb9, 0x44, 0x53, 0xeb, 0xc7, 0xb5, 0xc0, 0x1d, 0x7d, 0xf1, 0x90, 0x27, 0xc7, 0xa1, 0xe6, 0xb0,
	0x4b, 0x67, 0x9c, 0x0f, 0x1e, 0x52, 0xe7, 0x40, 0x3f, 0x35, 0xd0, 0xdb, 0xfe, 0xa7, 0x06, 0x1a,
	0x0d, 0xd7, 0x5a, 0xce, 0xc0, 0x89, 0x67, 0x88, 0x38, 0xfd, 0x00, 0x9f, 0x4d, 0xaf, 0xfa, 0xf0,
	0x4f, 0xef, 0x97, 0xad, 0x3f, 0x3c, 0x22, 0x60, 0xca, 0x50, 0xaa, 0x48, 0xfb, 0x22, 0xf2, 0xbf,
	0x81, 0x85, 0x67, 0xbc, 0x73, 0xc8, 0x0e, 0x78, 0x52, 0x69, 0x0d, 0x5a, 0xc8, 0xea, 0xae, 0x52,
	0xa9, 0xdc, 0x0c, 0x82, 0x76, 0xac, 0x76, 0xb3, 0x56, 0x2d, 0xe4, 0xdd, 0x20, 0x75, 0x9f, 0xf6,
	0x17, 0x0f, 0x64, 0xb4, 0x2f, 0x17, 0xe7, 0x43, 0x9e, 0x28, 0x16, 0xaa, 0xcf, 0x72, 0xb5, 0xfe,
	0x78, 0xbd, 0x58, 0xaf, 0xd5, 0x37, 0x6a, 0x1b, 0x55, 0xcf, 0x5b, 0x9f, 0x65, 0x69, 0xda, 0x89,
	0x43, 0xf3, 0x7b, 0x35, 0xd8, 0x93, 0x3c, 0xd9, 0x3c, 0xa3, 0x69, 0xac, 0xc2, 0xc8, 0xc6, 0x47,
	0x1b, 0xc4, 0x07, 0xda, 0x70, 0xbf, 0x3b, 0x2a, 0x11, 0x47, 0x59, 0x49, 0xb8, 0xaa, 0xe0, 0x41,
	0x2c, 0x55, 0x8d, 0x14, 0x61, 0xf4, 0xb7, 0x82, 0x37, 0xde, 0x2a, 0x9a, 0x41, 0xfc, 0xf8, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0xb5, 0xf7, 0x5e, 0x70, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BuildServiceClient is the client API for BuildService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildServiceClient interface {
	// List builds
	ListBuilds(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error)
	// List bookmarked builds
	ListBookmarkedBuilds(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error)
	// List archived builds
	ListArchivedBuilds(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error)
	// Create new build
	CreateBuild(ctx context.Context, in *BuildBodyRequest, opts ...grpc.CallOption) (*Build, error)
	// Get build
	GetBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Build, error)
	// Update build
	UpdateBuild(ctx context.Context, in *BuildBodyRequest, opts ...grpc.CallOption) (*Build, error)
	// Delete build
	DeleteBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete builds
	DeleteBuilds(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Stop build
	StopBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Stop builds
	StopBuilds(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Restart build
	RestartBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Build, error)
	// Archive build
	ArchiveBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Restore build
	RestoreBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Bookmark build
	BookmarkBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// UnBookmark build
	UnBookmarkBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get build status
	GetBuildStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// List build statuses
	ListBuildStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*ListBuildStatusesResponse, error)
	// Create new build status
	CreateBuildStatus(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*BuildStatus, error)
	// Get build code ref
	GetBuildCodeRef(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*CodeReference, error)
	// Create build code ref
	GreateBuildCodeRef(ctx context.Context, in *CodeReferenceBodyRequest, opts ...grpc.CallOption) (*CodeReference, error)
}

type buildServiceClient struct {
	cc *grpc.ClientConn
}

func NewBuildServiceClient(cc *grpc.ClientConn) BuildServiceClient {
	return &buildServiceClient{cc}
}

func (c *buildServiceClient) ListBuilds(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := c.cc.Invoke(ctx, "/v1.BuildService/ListBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) ListBookmarkedBuilds(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := c.cc.Invoke(ctx, "/v1.BuildService/ListBookmarkedBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) ListArchivedBuilds(ctx context.Context, in *OwnerBodyRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := c.cc.Invoke(ctx, "/v1.BuildService/ListArchivedBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) CreateBuild(ctx context.Context, in *BuildBodyRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/v1.BuildService/CreateBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) GetBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/v1.BuildService/GetBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) UpdateBuild(ctx context.Context, in *BuildBodyRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/v1.BuildService/UpdateBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) DeleteBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/DeleteBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) DeleteBuilds(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/DeleteBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) StopBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/StopBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) StopBuilds(ctx context.Context, in *ProjectBodyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/StopBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) RestartBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/v1.BuildService/RestartBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) ArchiveBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/ArchiveBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) RestoreBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/RestoreBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) BookmarkBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/BookmarkBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) UnBookmarkBuild(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/v1.BuildService/UnBookmarkBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) GetBuildStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/v1.BuildService/GetBuildStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) ListBuildStatuses(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*ListBuildStatusesResponse, error) {
	out := new(ListBuildStatusesResponse)
	err := c.cc.Invoke(ctx, "/v1.BuildService/ListBuildStatuses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) CreateBuildStatus(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*BuildStatus, error) {
	out := new(BuildStatus)
	err := c.cc.Invoke(ctx, "/v1.BuildService/CreateBuildStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) GetBuildCodeRef(ctx context.Context, in *OwnedEntityIdRequest, opts ...grpc.CallOption) (*CodeReference, error) {
	out := new(CodeReference)
	err := c.cc.Invoke(ctx, "/v1.BuildService/GetBuildCodeRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildServiceClient) GreateBuildCodeRef(ctx context.Context, in *CodeReferenceBodyRequest, opts ...grpc.CallOption) (*CodeReference, error) {
	out := new(CodeReference)
	err := c.cc.Invoke(ctx, "/v1.BuildService/GreateBuildCodeRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildServiceServer is the server API for BuildService service.
type BuildServiceServer interface {
	// List builds
	ListBuilds(context.Context, *ProjectBodyRequest) (*ListBuildsResponse, error)
	// List bookmarked builds
	ListBookmarkedBuilds(context.Context, *OwnerBodyRequest) (*ListBuildsResponse, error)
	// List archived builds
	ListArchivedBuilds(context.Context, *OwnerBodyRequest) (*ListBuildsResponse, error)
	// Create new build
	CreateBuild(context.Context, *BuildBodyRequest) (*Build, error)
	// Get build
	GetBuild(context.Context, *OwnedEntityIdRequest) (*Build, error)
	// Update build
	UpdateBuild(context.Context, *BuildBodyRequest) (*Build, error)
	// Delete build
	DeleteBuild(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Delete builds
	DeleteBuilds(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Stop build
	StopBuild(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Stop builds
	StopBuilds(context.Context, *ProjectBodyRequest) (*empty.Empty, error)
	// Restart build
	RestartBuild(context.Context, *OwnedEntityIdRequest) (*Build, error)
	// Archive build
	ArchiveBuild(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Restore build
	RestoreBuild(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Bookmark build
	BookmarkBuild(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// UnBookmark build
	UnBookmarkBuild(context.Context, *OwnedEntityIdRequest) (*empty.Empty, error)
	// Get build status
	GetBuildStatuses(context.Context, *OwnedEntityIdRequest) (*StatusResponse, error)
	// List build statuses
	ListBuildStatuses(context.Context, *OwnedEntityIdRequest) (*ListBuildStatusesResponse, error)
	// Create new build status
	CreateBuildStatus(context.Context, *OwnedEntityIdRequest) (*BuildStatus, error)
	// Get build code ref
	GetBuildCodeRef(context.Context, *OwnedEntityIdRequest) (*CodeReference, error)
	// Create build code ref
	GreateBuildCodeRef(context.Context, *CodeReferenceBodyRequest) (*CodeReference, error)
}

// UnimplementedBuildServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBuildServiceServer struct {
}

func (*UnimplementedBuildServiceServer) ListBuilds(ctx context.Context, req *ProjectBodyRequest) (*ListBuildsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBuilds not implemented")
}
func (*UnimplementedBuildServiceServer) ListBookmarkedBuilds(ctx context.Context, req *OwnerBodyRequest) (*ListBuildsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBookmarkedBuilds not implemented")
}
func (*UnimplementedBuildServiceServer) ListArchivedBuilds(ctx context.Context, req *OwnerBodyRequest) (*ListBuildsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArchivedBuilds not implemented")
}
func (*UnimplementedBuildServiceServer) CreateBuild(ctx context.Context, req *BuildBodyRequest) (*Build, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBuild not implemented")
}
func (*UnimplementedBuildServiceServer) GetBuild(ctx context.Context, req *OwnedEntityIdRequest) (*Build, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuild not implemented")
}
func (*UnimplementedBuildServiceServer) UpdateBuild(ctx context.Context, req *BuildBodyRequest) (*Build, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBuild not implemented")
}
func (*UnimplementedBuildServiceServer) DeleteBuild(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBuild not implemented")
}
func (*UnimplementedBuildServiceServer) DeleteBuilds(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBuilds not implemented")
}
func (*UnimplementedBuildServiceServer) StopBuild(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopBuild not implemented")
}
func (*UnimplementedBuildServiceServer) StopBuilds(ctx context.Context, req *ProjectBodyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopBuilds not implemented")
}
func (*UnimplementedBuildServiceServer) RestartBuild(ctx context.Context, req *OwnedEntityIdRequest) (*Build, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartBuild not implemented")
}
func (*UnimplementedBuildServiceServer) ArchiveBuild(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveBuild not implemented")
}
func (*UnimplementedBuildServiceServer) RestoreBuild(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestoreBuild not implemented")
}
func (*UnimplementedBuildServiceServer) BookmarkBuild(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookmarkBuild not implemented")
}
func (*UnimplementedBuildServiceServer) UnBookmarkBuild(ctx context.Context, req *OwnedEntityIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnBookmarkBuild not implemented")
}
func (*UnimplementedBuildServiceServer) GetBuildStatuses(ctx context.Context, req *OwnedEntityIdRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuildStatuses not implemented")
}
func (*UnimplementedBuildServiceServer) ListBuildStatuses(ctx context.Context, req *OwnedEntityIdRequest) (*ListBuildStatusesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBuildStatuses not implemented")
}
func (*UnimplementedBuildServiceServer) CreateBuildStatus(ctx context.Context, req *OwnedEntityIdRequest) (*BuildStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBuildStatus not implemented")
}
func (*UnimplementedBuildServiceServer) GetBuildCodeRef(ctx context.Context, req *OwnedEntityIdRequest) (*CodeReference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuildCodeRef not implemented")
}
func (*UnimplementedBuildServiceServer) GreateBuildCodeRef(ctx context.Context, req *CodeReferenceBodyRequest) (*CodeReference, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GreateBuildCodeRef not implemented")
}

func RegisterBuildServiceServer(s *grpc.Server, srv BuildServiceServer) {
	s.RegisterService(&_BuildService_serviceDesc, srv)
}

func _BuildService_ListBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).ListBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/ListBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).ListBuilds(ctx, req.(*ProjectBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_ListBookmarkedBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).ListBookmarkedBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/ListBookmarkedBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).ListBookmarkedBuilds(ctx, req.(*OwnerBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_ListArchivedBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).ListArchivedBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/ListArchivedBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).ListArchivedBuilds(ctx, req.(*OwnerBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_CreateBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).CreateBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/CreateBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).CreateBuild(ctx, req.(*BuildBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_GetBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).GetBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/GetBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).GetBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_UpdateBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).UpdateBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/UpdateBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).UpdateBuild(ctx, req.(*BuildBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_DeleteBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).DeleteBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/DeleteBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).DeleteBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_DeleteBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).DeleteBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/DeleteBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).DeleteBuilds(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_StopBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).StopBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/StopBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).StopBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_StopBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).StopBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/StopBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).StopBuilds(ctx, req.(*ProjectBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_RestartBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).RestartBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/RestartBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).RestartBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_ArchiveBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).ArchiveBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/ArchiveBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).ArchiveBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_RestoreBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).RestoreBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/RestoreBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).RestoreBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_BookmarkBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).BookmarkBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/BookmarkBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).BookmarkBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_UnBookmarkBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).UnBookmarkBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/UnBookmarkBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).UnBookmarkBuild(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_GetBuildStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).GetBuildStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/GetBuildStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).GetBuildStatuses(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_ListBuildStatuses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).ListBuildStatuses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/ListBuildStatuses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).ListBuildStatuses(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_CreateBuildStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).CreateBuildStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/CreateBuildStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).CreateBuildStatus(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_GetBuildCodeRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnedEntityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).GetBuildCodeRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/GetBuildCodeRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).GetBuildCodeRef(ctx, req.(*OwnedEntityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildService_GreateBuildCodeRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeReferenceBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).GreateBuildCodeRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BuildService/GreateBuildCodeRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).GreateBuildCodeRef(ctx, req.(*CodeReferenceBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.BuildService",
	HandlerType: (*BuildServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBuilds",
			Handler:    _BuildService_ListBuilds_Handler,
		},
		{
			MethodName: "ListBookmarkedBuilds",
			Handler:    _BuildService_ListBookmarkedBuilds_Handler,
		},
		{
			MethodName: "ListArchivedBuilds",
			Handler:    _BuildService_ListArchivedBuilds_Handler,
		},
		{
			MethodName: "CreateBuild",
			Handler:    _BuildService_CreateBuild_Handler,
		},
		{
			MethodName: "GetBuild",
			Handler:    _BuildService_GetBuild_Handler,
		},
		{
			MethodName: "UpdateBuild",
			Handler:    _BuildService_UpdateBuild_Handler,
		},
		{
			MethodName: "DeleteBuild",
			Handler:    _BuildService_DeleteBuild_Handler,
		},
		{
			MethodName: "DeleteBuilds",
			Handler:    _BuildService_DeleteBuilds_Handler,
		},
		{
			MethodName: "StopBuild",
			Handler:    _BuildService_StopBuild_Handler,
		},
		{
			MethodName: "StopBuilds",
			Handler:    _BuildService_StopBuilds_Handler,
		},
		{
			MethodName: "RestartBuild",
			Handler:    _BuildService_RestartBuild_Handler,
		},
		{
			MethodName: "ArchiveBuild",
			Handler:    _BuildService_ArchiveBuild_Handler,
		},
		{
			MethodName: "RestoreBuild",
			Handler:    _BuildService_RestoreBuild_Handler,
		},
		{
			MethodName: "BookmarkBuild",
			Handler:    _BuildService_BookmarkBuild_Handler,
		},
		{
			MethodName: "UnBookmarkBuild",
			Handler:    _BuildService_UnBookmarkBuild_Handler,
		},
		{
			MethodName: "GetBuildStatuses",
			Handler:    _BuildService_GetBuildStatuses_Handler,
		},
		{
			MethodName: "ListBuildStatuses",
			Handler:    _BuildService_ListBuildStatuses_Handler,
		},
		{
			MethodName: "CreateBuildStatus",
			Handler:    _BuildService_CreateBuildStatus_Handler,
		},
		{
			MethodName: "GetBuildCodeRef",
			Handler:    _BuildService_GetBuildCodeRef_Handler,
		},
		{
			MethodName: "GreateBuildCodeRef",
			Handler:    _BuildService_GreateBuildCodeRef_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/build.proto",
}
