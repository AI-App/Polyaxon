// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/run.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Run specification
type Run struct {
	// UUID
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Optional name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional Tags of this entity
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Optional if the entity has been deleted
	Deleted bool `protobuf:"varint,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Required name of user started this entity
	User string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	// Required name of owner of this entity
	Owner string `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	// Required project name
	Project string `protobuf:"bytes,8,opt,name=project,proto3" json:"project,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional last time the entity was started
	StartedAt string `protobuf:"bytes,11,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Optional last time the entity was started
	FinishedAt string `protobuf:"bytes,12,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Optional flag to tell if this entity is managed by the platform
	IsManaged string `protobuf:"bytes,13,opt,name=is_managed,json=isManaged,proto3" json:"is_managed,omitempty"`
	// Optional content of the entity's spec
	Content string `protobuf:"bytes,14,opt,name=content,proto3" json:"content,omitempty"`
	// Optional latest status of this entity
	Status string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	// Optional a readme text describing this entity
	Readme string `protobuf:"bytes,16,opt,name=readme,proto3" json:"readme,omitempty"`
	// Optional if this entity was bookmarked
	Bookmarked bool `protobuf:"varint,17,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
	// Optional inputs of this entity
	Inputs map[string]string `protobuf:"bytes,18,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional outputs of this entity
	Outputs map[string]string `protobuf:"bytes,19,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional run environment tracked
	RunEnv map[string]string `protobuf:"bytes,20,rep,name=run_env,json=runEnv,proto3" json:"run_env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Id instance is clone
	IsClone bool `protobuf:"varint,21,opt,name=is_clone,json=isClone,proto3" json:"is_clone,omitempty"`
	// Optional uuid of the original run and pipeline
	Pipeline     string `protobuf:"bytes,22,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Original     string `protobuf:"bytes,23,opt,name=original,proto3" json:"original,omitempty"`
	PipelineName string `protobuf:"bytes,24,opt,name=pipeline_name,json=pipelineName,proto3" json:"pipeline_name,omitempty"`
	OriginalName string `protobuf:"bytes,25,opt,name=original_name,json=originalName,proto3" json:"original_name,omitempty"`
	// Optional if this run was restarted/copied/resumed
	CloningStrategy      string   `protobuf:"bytes,26,opt,name=cloning_strategy,json=cloningStrategy,proto3" json:"cloning_strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Run) Reset()         { *m = Run{} }
func (m *Run) String() string { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()    {}
func (*Run) Descriptor() ([]byte, []int) {
	return fileDescriptor_46ec9b83e76db539, []int{0}
}

func (m *Run) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Run.Unmarshal(m, b)
}
func (m *Run) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Run.Marshal(b, m, deterministic)
}
func (m *Run) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Run.Merge(m, src)
}
func (m *Run) XXX_Size() int {
	return xxx_messageInfo_Run.Size(m)
}
func (m *Run) XXX_DiscardUnknown() {
	xxx_messageInfo_Run.DiscardUnknown(m)
}

var xxx_messageInfo_Run proto.InternalMessageInfo

func (m *Run) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Run) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Run) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Run) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Run) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Run) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Run) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Run) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Run) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Run) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Run) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *Run) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *Run) GetIsManaged() string {
	if m != nil {
		return m.IsManaged
	}
	return ""
}

func (m *Run) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Run) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Run) GetReadme() string {
	if m != nil {
		return m.Readme
	}
	return ""
}

func (m *Run) GetBookmarked() bool {
	if m != nil {
		return m.Bookmarked
	}
	return false
}

func (m *Run) GetInputs() map[string]string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Run) GetOutputs() map[string]string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Run) GetRunEnv() map[string]string {
	if m != nil {
		return m.RunEnv
	}
	return nil
}

func (m *Run) GetIsClone() bool {
	if m != nil {
		return m.IsClone
	}
	return false
}

func (m *Run) GetPipeline() string {
	if m != nil {
		return m.Pipeline
	}
	return ""
}

func (m *Run) GetOriginal() string {
	if m != nil {
		return m.Original
	}
	return ""
}

func (m *Run) GetPipelineName() string {
	if m != nil {
		return m.PipelineName
	}
	return ""
}

func (m *Run) GetOriginalName() string {
	if m != nil {
		return m.OriginalName
	}
	return ""
}

func (m *Run) GetCloningStrategy() string {
	if m != nil {
		return m.CloningStrategy
	}
	return ""
}

// Request data to create/update run
type RunBodyRequest struct {
	// Owner of the namespace
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Project where the experiement will be assigned
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Run object
	Run                  *Run     `protobuf:"bytes,3,opt,name=run,proto3" json:"run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunBodyRequest) Reset()         { *m = RunBodyRequest{} }
func (m *RunBodyRequest) String() string { return proto.CompactTextString(m) }
func (*RunBodyRequest) ProtoMessage()    {}
func (*RunBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_46ec9b83e76db539, []int{1}
}

func (m *RunBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunBodyRequest.Unmarshal(m, b)
}
func (m *RunBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunBodyRequest.Marshal(b, m, deterministic)
}
func (m *RunBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunBodyRequest.Merge(m, src)
}
func (m *RunBodyRequest) XXX_Size() int {
	return xxx_messageInfo_RunBodyRequest.Size(m)
}
func (m *RunBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunBodyRequest proto.InternalMessageInfo

func (m *RunBodyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *RunBodyRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *RunBodyRequest) GetRun() *Run {
	if m != nil {
		return m.Run
	}
	return nil
}

// Contains list runs
type ListRunsResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*Run `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRunsResponse) Reset()         { *m = ListRunsResponse{} }
func (m *ListRunsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRunsResponse) ProtoMessage()    {}
func (*ListRunsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46ec9b83e76db539, []int{2}
}

func (m *ListRunsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRunsResponse.Unmarshal(m, b)
}
func (m *ListRunsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRunsResponse.Marshal(b, m, deterministic)
}
func (m *ListRunsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRunsResponse.Merge(m, src)
}
func (m *ListRunsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRunsResponse.Size(m)
}
func (m *ListRunsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRunsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRunsResponse proto.InternalMessageInfo

func (m *ListRunsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListRunsResponse) GetResults() []*Run {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListRunsResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListRunsResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func init() {
	proto.RegisterType((*Run)(nil), "v1.Run")
	proto.RegisterMapType((map[string]string)(nil), "v1.Run.InputsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.Run.OutputsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.Run.RunEnvEntry")
	proto.RegisterType((*RunBodyRequest)(nil), "v1.RunBodyRequest")
	proto.RegisterType((*ListRunsResponse)(nil), "v1.ListRunsResponse")
}

func init() { proto.RegisterFile("v1/run.proto", fileDescriptor_46ec9b83e76db539) }

var fileDescriptor_46ec9b83e76db539 = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcb, 0x4f, 0xdb, 0x4a,
	0x14, 0xc6, 0x95, 0x04, 0x92, 0x70, 0x1c, 0x20, 0x77, 0xe0, 0x72, 0x87, 0xe8, 0xb6, 0x4d, 0x61,
	0x43, 0x55, 0x48, 0x04, 0xdd, 0x14, 0x76, 0xb4, 0x62, 0x51, 0xa9, 0x0f, 0xc9, 0x5d, 0x76, 0x11,
	0x0d, 0xf6, 0xc1, 0x9d, 0xe2, 0xcc, 0xb8, 0xf3, 0x30, 0x44, 0xfd, 0x1b, 0xfb, 0x3f, 0x55, 0xf3,
	0x70, 0x1a, 0x54, 0x75, 0xc1, 0x2a, 0xf3, 0xfd, 0xbe, 0xef, 0x1c, 0x3b, 0xe3, 0x39, 0x03, 0x83,
	0xfa, 0x74, 0xaa, 0xac, 0x98, 0x54, 0x4a, 0x1a, 0x49, 0xda, 0xf5, 0xe9, 0xe8, 0xff, 0x42, 0xca,
	0xa2, 0xc4, 0x29, 0xab, 0xf8, 0x94, 0x09, 0x21, 0x0d, 0x33, 0x5c, 0x0a, 0x1d, 0x12, 0x4b, 0xd7,
	0xab, 0x6b, 0x7b, 0x33, 0xd5, 0x46, 0xd9, 0xcc, 0x44, 0xf7, 0xd8, 0xff, 0x64, 0x27, 0x05, 0x8a,
	0x13, 0x7d, 0xc7, 0x8a, 0x02, 0xd5, 0x54, 0x56, 0xbe, 0xfe, 0xcf, 0x5e, 0x07, 0x3f, 0x7b, 0xd0,
	0x49, 0xad, 0x20, 0x04, 0xd6, 0xac, 0xe5, 0x39, 0x6d, 0x8d, 0x5b, 0x47, 0x1b, 0xa9, 0x5f, 0x3b,
	0x26, 0xd8, 0x1c, 0x69, 0x3b, 0x30, 0xb7, 0x26, 0x63, 0x48, 0x72, 0xd4, 0x99, 0xe2, 0xbe, 0x23,
	0xed, 0x78, 0x6b, 0x15, 0xb9, 0x2a, 0xc3, 0x0a, 0x4d, 0xd7, 0xc6, 0x1d, 0x57, 0xe5, 0xd6, 0x84,
	0x42, 0x2f, 0xc7, 0x12, 0x0d, 0xe6, 0x74, 0x7d, 0xdc, 0x3a, 0xea, 0xa7, 0x8d, 0xf4, 0xcf, 0xd5,
	0xa8, 0x68, 0x37, 0x3e, 0x57, 0xa3, 0x22, 0xbb, 0xb0, 0x2e, 0xef, 0x04, 0x2a, 0xda, 0xf3, 0x30,
	0x08, 0xd7, 0xa3, 0x52, 0xf2, 0x1b, 0x66, 0x86, 0xf6, 0x3d, 0x6f, 0x24, 0x79, 0x02, 0x90, 0x29,
	0x64, 0x06, 0xf3, 0x19, 0x33, 0x74, 0xc3, 0x9b, 0x1b, 0x91, 0x5c, 0x7a, 0xdb, 0x56, 0x79, 0x63,
	0x43, 0xb0, 0x23, 0x09, 0xb6, 0x36, 0x4c, 0x45, 0x3b, 0x09, 0x76, 0x24, 0x97, 0x86, 0x3c, 0x83,
	0xe4, 0x86, 0x0b, 0xae, 0xbf, 0x06, 0x7f, 0xe0, 0x7d, 0x68, 0x50, 0xa8, 0xe7, 0x7a, 0x36, 0x67,
	0x82, 0x15, 0x98, 0xd3, 0xcd, 0x50, 0xcf, 0xf5, 0x87, 0x00, 0xdc, 0x6b, 0x67, 0x52, 0x18, 0x14,
	0x86, 0x6e, 0x85, 0xd7, 0x8e, 0x92, 0xec, 0x41, 0x57, 0x1b, 0x66, 0xac, 0xa6, 0xdb, 0xde, 0x88,
	0xca, 0x71, 0x85, 0x2c, 0x9f, 0x23, 0x1d, 0x06, 0x1e, 0x14, 0x79, 0x0a, 0x70, 0x2d, 0xe5, 0xed,
	0x9c, 0xa9, 0x5b, 0xcc, 0xe9, 0x3f, 0x7e, 0x1f, 0x57, 0x08, 0x79, 0x09, 0x5d, 0x2e, 0x2a, 0x6b,
	0x34, 0x25, 0xe3, 0xce, 0x51, 0x72, 0xb6, 0x33, 0xa9, 0x4f, 0x27, 0xa9, 0x15, 0x93, 0x77, 0x9e,
	0x5e, 0x09, 0xa3, 0x16, 0x69, 0x8c, 0x90, 0x09, 0xf4, 0xa4, 0x35, 0x3e, 0xbd, 0xe3, 0xd3, 0xbb,
	0x4d, 0xfa, 0x53, 0xc0, 0x21, 0xde, 0x84, 0xc8, 0x31, 0xf4, 0x94, 0x15, 0x33, 0x14, 0x35, 0xdd,
	0x7d, 0xd8, 0x3d, 0xb5, 0xe2, 0x4a, 0xd4, 0xb1, 0xbb, 0xf2, 0x82, 0xec, 0x43, 0x9f, 0xeb, 0x59,
	0x56, 0x4a, 0x81, 0xf4, 0xdf, 0xf0, 0xc1, 0xb9, 0x7e, 0xeb, 0x24, 0x19, 0x41, 0xbf, 0xe2, 0x15,
	0x96, 0x5c, 0x20, 0xdd, 0xf3, 0xff, 0x6f, 0xa9, 0x9d, 0x27, 0x15, 0x2f, 0xb8, 0x60, 0x25, 0xfd,
	0x2f, 0x78, 0x8d, 0x26, 0x87, 0xb0, 0xd9, 0xe4, 0x66, 0xfe, 0x54, 0x52, 0x1f, 0x18, 0x34, 0xf0,
	0xa3, 0x3b, 0x9d, 0x87, 0xb0, 0xd9, 0x14, 0x84, 0xd0, 0x7e, 0x08, 0x35, 0xd0, 0x87, 0x5e, 0xc0,
	0xd0, 0xbd, 0x19, 0x17, 0xc5, 0x4c, 0x1b, 0xc5, 0x0c, 0x16, 0x0b, 0x3a, 0xf2, 0xb9, 0xed, 0xc8,
	0x3f, 0x47, 0x3c, 0x3a, 0x87, 0x64, 0x65, 0xf3, 0xc8, 0x10, 0x3a, 0xb7, 0xb8, 0x88, 0x33, 0xe2,
	0x96, 0xee, 0xa8, 0xd6, 0xac, 0xb4, 0xcd, 0x8c, 0x04, 0x71, 0xd1, 0x7e, 0xdd, 0x1a, 0x5d, 0xc0,
	0x60, 0x75, 0x27, 0x1f, 0x55, 0x7b, 0x0e, 0xc9, 0xca, 0xae, 0x3e, 0xa6, 0xf4, 0xe0, 0x0b, 0x6c,
	0xa5, 0x56, 0xbc, 0x91, 0xf9, 0x22, 0xc5, 0xef, 0x16, 0xb5, 0xf9, 0x3d, 0x4d, 0xad, 0xbf, 0x4c,
	0x53, 0xfb, 0xe1, 0x34, 0xed, 0x43, 0x47, 0xd9, 0x30, 0xd9, 0xc9, 0x59, 0x2f, 0x7e, 0xe5, 0xd4,
	0xb1, 0x83, 0x1f, 0x30, 0x7c, 0xcf, 0xb5, 0x49, 0xad, 0xd0, 0x29, 0xea, 0x4a, 0x0a, 0x8d, 0xae,
	0x7d, 0x26, 0xad, 0x30, 0xbe, 0xfd, 0x7a, 0x1a, 0x04, 0x79, 0x0e, 0x3d, 0x85, 0xda, 0x96, 0x46,
	0xd3, 0xb6, 0x3f, 0x2e, 0xcb, 0x46, 0x0d, 0xf7, 0x07, 0x41, 0x61, 0xcd, 0xa5, 0xd5, 0xf1, 0x1a,
	0x59, 0x6a, 0x7f, 0xf3, 0xe0, 0xbd, 0xa1, 0x6b, 0xf1, 0xe6, 0xc1, 0x7b, 0x73, 0xdd, 0xf5, 0x17,
	0xd6, 0xab, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xbc, 0x20, 0xb0, 0x2e, 0x05, 0x00, 0x00,
}
