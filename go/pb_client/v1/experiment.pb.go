// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/experiment.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Experiment specification
type Experiment struct {
	// Unique integer identifier
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Unique name generated
	UniqueName string `protobuf:"bytes,3,opt,name=unique_name,json=uniqueName,proto3" json:"unique_name,omitempty"`
	// Optional name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Optional Tags of this entity
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// Optional if the entity has been deleted
	Deleted bool `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Required name of user started this entity
	User string `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional last time the entity was started
	StartedAt string `protobuf:"bytes,11,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Optional last time the entity was started
	FinishedAt string `protobuf:"bytes,12,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Required project name
	Project string `protobuf:"bytes,13,opt,name=project,proto3" json:"project,omitempty"`
	// Optional flag to tell if this entity is managed by the platform
	IsManaged string `protobuf:"bytes,14,opt,name=is_managed,json=isManaged,proto3" json:"is_managed,omitempty"`
	// Optional content of the entity's spec
	Spec string `protobuf:"bytes,15,opt,name=spec,proto3" json:"spec,omitempty"`
	// Optional backend value of this entity
	Backend string `protobuf:"bytes,16,opt,name=backend,proto3" json:"backend,omitempty"`
	// Optional framework name of this entity
	Framework string `protobuf:"bytes,17,opt,name=framework,proto3" json:"framework,omitempty"`
	// Optional latest status of this entity
	LastStatus string `protobuf:"bytes,18,opt,name=last_status,json=lastStatus,proto3" json:"last_status,omitempty"`
	// Optional Code reference
	CodeReference int64 `protobuf:"varint,19,opt,name=code_reference,json=codeReference,proto3" json:"code_reference,omitempty"`
	// Optional hardware resources requested by this entity
	Resources map[string]string `protobuf:"bytes,20,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional a readme text describing this entity
	Readme string `protobuf:"bytes,21,opt,name=readme,proto3" json:"readme,omitempty"`
	// Optional if this entity was bookmarked
	Bookmarked bool `protobuf:"varint,22,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
	// Optional params of this entity
	Params map[string]string `protobuf:"bytes,23,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional run enivronment tracked
	RunEnv map[string]string `protobuf:"bytes,24,rep,name=run_env,json=runEnv,proto3" json:"run_env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional build job name
	BuildJob string `protobuf:"bytes,25,opt,name=build_job,json=buildJob,proto3" json:"build_job,omitempty"`
	// Optional data references of this entity
	DataRefs map[string]string `protobuf:"bytes,26,rep,name=data_refs,json=dataRefs,proto3" json:"data_refs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional artificat references of this entity
	ArtifactRefs map[string]string `protobuf:"bytes,27,rep,name=artifact_refs,json=artifactRefs,proto3" json:"artifact_refs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional Id of the original experiment
	Original int64 `protobuf:"varint,28,opt,name=original,proto3" json:"original,omitempty"`
	// Optional if this experiment was restarted/copied/resumed
	CloningStrategy string `protobuf:"bytes,29,opt,name=cloning_strategy,json=cloningStrategy,proto3" json:"cloning_strategy,omitempty"`
	// Optional Experiment group name
	ExperimentGroup string `protobuf:"bytes,30,opt,name=experiment_group,json=experimentGroup,proto3" json:"experiment_group,omitempty"`
	// Optional number of jobs belonging to this entity
	NumJobs int32 `protobuf:"varint,31,opt,name=num_jobs,json=numJobs,proto3" json:"num_jobs,omitempty"`
	// Optional if this entity has a tensorboard
	HasTensorboard bool `protobuf:"varint,32,opt,name=has_tensorboard,json=hasTensorboard,proto3" json:"has_tensorboard,omitempty"`
	// Optional last metrics of this entity
	LastMetric           map[string]float64 `protobuf:"bytes,33,rep,name=last_metric,json=lastMetric,proto3" json:"last_metric,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Experiment) Reset()         { *m = Experiment{} }
func (m *Experiment) String() string { return proto.CompactTextString(m) }
func (*Experiment) ProtoMessage()    {}
func (*Experiment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a52cdac465d62215, []int{0}
}

func (m *Experiment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Experiment.Unmarshal(m, b)
}
func (m *Experiment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Experiment.Marshal(b, m, deterministic)
}
func (m *Experiment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Experiment.Merge(m, src)
}
func (m *Experiment) XXX_Size() int {
	return xxx_messageInfo_Experiment.Size(m)
}
func (m *Experiment) XXX_DiscardUnknown() {
	xxx_messageInfo_Experiment.DiscardUnknown(m)
}

var xxx_messageInfo_Experiment proto.InternalMessageInfo

func (m *Experiment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Experiment) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Experiment) GetUniqueName() string {
	if m != nil {
		return m.UniqueName
	}
	return ""
}

func (m *Experiment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Experiment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Experiment) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Experiment) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Experiment) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Experiment) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Experiment) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Experiment) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *Experiment) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *Experiment) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Experiment) GetIsManaged() string {
	if m != nil {
		return m.IsManaged
	}
	return ""
}

func (m *Experiment) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Experiment) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *Experiment) GetFramework() string {
	if m != nil {
		return m.Framework
	}
	return ""
}

func (m *Experiment) GetLastStatus() string {
	if m != nil {
		return m.LastStatus
	}
	return ""
}

func (m *Experiment) GetCodeReference() int64 {
	if m != nil {
		return m.CodeReference
	}
	return 0
}

func (m *Experiment) GetResources() map[string]string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Experiment) GetReadme() string {
	if m != nil {
		return m.Readme
	}
	return ""
}

func (m *Experiment) GetBookmarked() bool {
	if m != nil {
		return m.Bookmarked
	}
	return false
}

func (m *Experiment) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Experiment) GetRunEnv() map[string]string {
	if m != nil {
		return m.RunEnv
	}
	return nil
}

func (m *Experiment) GetBuildJob() string {
	if m != nil {
		return m.BuildJob
	}
	return ""
}

func (m *Experiment) GetDataRefs() map[string]string {
	if m != nil {
		return m.DataRefs
	}
	return nil
}

func (m *Experiment) GetArtifactRefs() map[string]string {
	if m != nil {
		return m.ArtifactRefs
	}
	return nil
}

func (m *Experiment) GetOriginal() int64 {
	if m != nil {
		return m.Original
	}
	return 0
}

func (m *Experiment) GetCloningStrategy() string {
	if m != nil {
		return m.CloningStrategy
	}
	return ""
}

func (m *Experiment) GetExperimentGroup() string {
	if m != nil {
		return m.ExperimentGroup
	}
	return ""
}

func (m *Experiment) GetNumJobs() int32 {
	if m != nil {
		return m.NumJobs
	}
	return 0
}

func (m *Experiment) GetHasTensorboard() bool {
	if m != nil {
		return m.HasTensorboard
	}
	return false
}

func (m *Experiment) GetLastMetric() map[string]float64 {
	if m != nil {
		return m.LastMetric
	}
	return nil
}

// Experiment specification
type ExperimentStatus struct {
	// Unique integer identifier
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UUID
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Optional time when the entityt was created
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt string `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional status recorded
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Optional status message
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExperimentStatus) Reset()         { *m = ExperimentStatus{} }
func (m *ExperimentStatus) String() string { return proto.CompactTextString(m) }
func (*ExperimentStatus) ProtoMessage()    {}
func (*ExperimentStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a52cdac465d62215, []int{1}
}

func (m *ExperimentStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExperimentStatus.Unmarshal(m, b)
}
func (m *ExperimentStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExperimentStatus.Marshal(b, m, deterministic)
}
func (m *ExperimentStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExperimentStatus.Merge(m, src)
}
func (m *ExperimentStatus) XXX_Size() int {
	return xxx_messageInfo_ExperimentStatus.Size(m)
}
func (m *ExperimentStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ExperimentStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ExperimentStatus proto.InternalMessageInfo

func (m *ExperimentStatus) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExperimentStatus) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ExperimentStatus) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *ExperimentStatus) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *ExperimentStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ExperimentStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Request data to create/update experiment
type ExperimentBodyRequest struct {
	// Owner of the namespace
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Project where the experiement will be assigned
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Experiment object
	Experiment           *Experiment `protobuf:"bytes,3,opt,name=experiment,proto3" json:"experiment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExperimentBodyRequest) Reset()         { *m = ExperimentBodyRequest{} }
func (m *ExperimentBodyRequest) String() string { return proto.CompactTextString(m) }
func (*ExperimentBodyRequest) ProtoMessage()    {}
func (*ExperimentBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a52cdac465d62215, []int{2}
}

func (m *ExperimentBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExperimentBodyRequest.Unmarshal(m, b)
}
func (m *ExperimentBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExperimentBodyRequest.Marshal(b, m, deterministic)
}
func (m *ExperimentBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExperimentBodyRequest.Merge(m, src)
}
func (m *ExperimentBodyRequest) XXX_Size() int {
	return xxx_messageInfo_ExperimentBodyRequest.Size(m)
}
func (m *ExperimentBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExperimentBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExperimentBodyRequest proto.InternalMessageInfo

func (m *ExperimentBodyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ExperimentBodyRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ExperimentBodyRequest) GetExperiment() *Experiment {
	if m != nil {
		return m.Experiment
	}
	return nil
}

// Contains list experiments
type ListExperimentsResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*Experiment `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExperimentsResponse) Reset()         { *m = ListExperimentsResponse{} }
func (m *ListExperimentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListExperimentsResponse) ProtoMessage()    {}
func (*ListExperimentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a52cdac465d62215, []int{3}
}

func (m *ListExperimentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExperimentsResponse.Unmarshal(m, b)
}
func (m *ListExperimentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExperimentsResponse.Marshal(b, m, deterministic)
}
func (m *ListExperimentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExperimentsResponse.Merge(m, src)
}
func (m *ListExperimentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListExperimentsResponse.Size(m)
}
func (m *ListExperimentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExperimentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListExperimentsResponse proto.InternalMessageInfo

func (m *ListExperimentsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListExperimentsResponse) GetResults() []*Experiment {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListExperimentsResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListExperimentsResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

// Contains list experiments
type ListExperimentStatusesResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*ExperimentStatus `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExperimentStatusesResponse) Reset()         { *m = ListExperimentStatusesResponse{} }
func (m *ListExperimentStatusesResponse) String() string { return proto.CompactTextString(m) }
func (*ListExperimentStatusesResponse) ProtoMessage()    {}
func (*ListExperimentStatusesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a52cdac465d62215, []int{4}
}

func (m *ListExperimentStatusesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExperimentStatusesResponse.Unmarshal(m, b)
}
func (m *ListExperimentStatusesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExperimentStatusesResponse.Marshal(b, m, deterministic)
}
func (m *ListExperimentStatusesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExperimentStatusesResponse.Merge(m, src)
}
func (m *ListExperimentStatusesResponse) XXX_Size() int {
	return xxx_messageInfo_ListExperimentStatusesResponse.Size(m)
}
func (m *ListExperimentStatusesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExperimentStatusesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListExperimentStatusesResponse proto.InternalMessageInfo

func (m *ListExperimentStatusesResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListExperimentStatusesResponse) GetResults() []*ExperimentStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListExperimentStatusesResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListExperimentStatusesResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func init() {
	proto.RegisterType((*Experiment)(nil), "v1.Experiment")
	proto.RegisterMapType((map[string]string)(nil), "v1.Experiment.ArtifactRefsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.Experiment.DataRefsEntry")
	proto.RegisterMapType((map[string]float64)(nil), "v1.Experiment.LastMetricEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.Experiment.ParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.Experiment.ResourcesEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.Experiment.RunEnvEntry")
	proto.RegisterType((*ExperimentStatus)(nil), "v1.ExperimentStatus")
	proto.RegisterType((*ExperimentBodyRequest)(nil), "v1.ExperimentBodyRequest")
	proto.RegisterType((*ListExperimentsResponse)(nil), "v1.ListExperimentsResponse")
	proto.RegisterType((*ListExperimentStatusesResponse)(nil), "v1.ListExperimentStatusesResponse")
}

func init() { proto.RegisterFile("v1/experiment.proto", fileDescriptor_a52cdac465d62215) }

var fileDescriptor_a52cdac465d62215 = []byte{
	// 953 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5d, 0x6e, 0x1b, 0x37,
	0x10, 0xc6, 0x4a, 0xb6, 0x2c, 0x8d, 0x62, 0xd9, 0x61, 0x1c, 0x87, 0x56, 0x6c, 0x47, 0x35, 0x50,
	0x54, 0x05, 0x1a, 0x19, 0x76, 0x5e, 0x9a, 0xa6, 0x45, 0xe0, 0xa2, 0x46, 0x81, 0x20, 0x29, 0x8a,
	0x4d, 0xdf, 0x17, 0xd4, 0xee, 0x68, 0xcd, 0x58, 0x4b, 0x6e, 0x48, 0xae, 0x6c, 0x1f, 0xa1, 0x17,
	0xe8, 0x11, 0x7a, 0xc7, 0xbe, 0x15, 0xfc, 0x91, 0x56, 0x52, 0x8a, 0xa6, 0xee, 0x93, 0x38, 0xdf,
	0x37, 0x33, 0xfc, 0x86, 0x9c, 0x1d, 0x0a, 0x1e, 0xcd, 0xce, 0x4e, 0xf1, 0xb6, 0x44, 0xc5, 0x0b,
	0x14, 0x66, 0x54, 0x2a, 0x69, 0x24, 0x69, 0xcc, 0xce, 0xfa, 0x87, 0xb9, 0x94, 0xf9, 0x14, 0x4f,
	0x59, 0xc9, 0x4f, 0x99, 0x10, 0xd2, 0x30, 0xc3, 0xa5, 0xd0, 0xde, 0xa3, 0x7f, 0x10, 0x58, 0x67,
	0x8d, 0xab, 0xc9, 0x29, 0x13, 0x77, 0x81, 0xfa, 0xc6, 0xfd, 0xa4, 0xcf, 0x73, 0x14, 0xcf, 0xf5,
	0x0d, 0xcb, 0x73, 0x54, 0xa7, 0xb2, 0x74, 0xc1, 0x9f, 0x26, 0x3a, 0xf9, 0xab, 0x0b, 0x70, 0xb9,
	0xd8, 0x9f, 0xf4, 0xa0, 0xc1, 0x33, 0x1a, 0x0d, 0xa2, 0x61, 0x33, 0x6e, 0xf0, 0x8c, 0x10, 0xd8,
	0xa8, 0x2a, 0x9e, 0xd1, 0xc6, 0x20, 0x1a, 0x76, 0x62, 0xb7, 0x26, 0xcf, 0xa0, 0x5b, 0x09, 0xfe,
	0xb1, 0xc2, 0x44, 0xb0, 0x02, 0x69, 0xd3, 0x51, 0xe0, 0xa1, 0x5f, 0x58, 0x81, 0x36, 0xc8, 0x31,
	0x1b, 0x3e, 0xc8, 0xae, 0xc9, 0x00, 0xba, 0x19, 0xea, 0x54, 0x71, 0xa7, 0x84, 0x6e, 0x3a, 0x6a,
	0x19, 0xb2, 0x51, 0x86, 0xe5, 0x9a, 0xb6, 0x06, 0x4d, 0x1b, 0x65, 0xd7, 0x84, 0xc2, 0x56, 0x86,
	0x53, 0x34, 0x98, 0xd1, 0xad, 0x41, 0x34, 0x6c, 0xc7, 0x73, 0xd3, 0x09, 0xd3, 0xa8, 0x68, 0x3b,
	0x08, 0xd3, 0xa8, 0xc8, 0x11, 0x40, 0xaa, 0x90, 0x19, 0xcc, 0x12, 0x66, 0x68, 0xc7, 0x31, 0x9d,
	0x80, 0x5c, 0x18, 0x4b, 0x57, 0x65, 0x36, 0xa7, 0xc1, 0xd3, 0x01, 0xf1, 0xb4, 0x36, 0x4c, 0x05,
	0xba, 0xeb, 0xe9, 0x80, 0x5c, 0x18, 0x5b, 0xf5, 0x84, 0x0b, 0xae, 0xaf, 0x3c, 0xff, 0xc0, 0x57,
	0x3d, 0x87, 0x2e, 0x8c, 0xd5, 0x5a, 0x2a, 0xf9, 0x01, 0x53, 0x43, 0xb7, 0x1d, 0x39, 0x37, 0x6d,
	0x66, 0xae, 0x93, 0x82, 0x09, 0x96, 0x63, 0x46, 0x7b, 0x3e, 0x33, 0xd7, 0xef, 0x3c, 0x60, 0x4b,
	0xd1, 0x25, 0xa6, 0x74, 0xc7, 0x97, 0x62, 0xd7, 0x36, 0xd9, 0x98, 0xa5, 0xd7, 0x28, 0x32, 0xba,
	0xeb, 0x93, 0x05, 0x93, 0x1c, 0x42, 0x67, 0xa2, 0x58, 0x81, 0x37, 0x52, 0x5d, 0xd3, 0x87, 0x3e,
	0xd7, 0x02, 0xb0, 0x2a, 0xa7, 0x4c, 0x9b, 0x44, 0x1b, 0x66, 0x2a, 0x4d, 0x89, 0x57, 0x69, 0xa1,
	0xf7, 0x0e, 0x21, 0x5f, 0x42, 0x2f, 0x95, 0x19, 0x26, 0x0a, 0x27, 0xa8, 0x50, 0xa4, 0x48, 0x1f,
	0xb9, 0xcb, 0xde, 0xb6, 0x68, 0x3c, 0x07, 0xc9, 0x2b, 0xe8, 0x28, 0xd4, 0xb2, 0x52, 0x29, 0x6a,
	0xba, 0x37, 0x68, 0x0e, 0xbb, 0xe7, 0x47, 0xa3, 0xd9, 0xd9, 0xa8, 0x6e, 0x95, 0x51, 0x3c, 0xe7,
	0x2f, 0x85, 0x51, 0x77, 0x71, 0xed, 0x4f, 0xf6, 0xa1, 0xa5, 0x90, 0x65, 0x05, 0xd2, 0xc7, 0x6e,
	0xff, 0x60, 0x91, 0x63, 0x80, 0xb1, 0x94, 0xd7, 0x05, 0x53, 0xd7, 0x98, 0xd1, 0x7d, 0x77, 0xa1,
	0x4b, 0x08, 0x39, 0x87, 0x56, 0xc9, 0x14, 0x2b, 0x34, 0x7d, 0xe2, 0x76, 0xec, 0xaf, 0xed, 0xf8,
	0xab, 0x23, 0xfd, 0x76, 0xc1, 0x93, 0xbc, 0x80, 0x2d, 0x55, 0x89, 0x04, 0xc5, 0x8c, 0xd2, 0x7f,
	0x0c, 0x8a, 0x2b, 0x71, 0x29, 0x66, 0x21, 0x48, 0x39, 0x83, 0x3c, 0x85, 0xce, 0xb8, 0xe2, 0xd3,
	0x2c, 0xf9, 0x20, 0xc7, 0xf4, 0xc0, 0x69, 0x6c, 0x3b, 0xe0, 0x8d, 0x1c, 0x93, 0x97, 0xd0, 0xc9,
	0x98, 0x61, 0xf6, 0x84, 0x34, 0xed, 0xbb, 0x9c, 0x87, 0x6b, 0x39, 0x7f, 0x62, 0x86, 0xc5, 0x38,
	0x09, 0x52, 0xda, 0x59, 0x30, 0xc9, 0x25, 0x6c, 0x33, 0x65, 0xf8, 0x84, 0xa5, 0xc6, 0x87, 0x3f,
	0x75, 0xe1, 0x83, 0xb5, 0xf0, 0x8b, 0xe0, 0x53, 0xa7, 0x78, 0xc0, 0x96, 0x20, 0xd2, 0x87, 0xb6,
	0x54, 0x3c, 0xe7, 0x82, 0x4d, 0xe9, 0xa1, 0xbb, 0x9d, 0x85, 0x4d, 0xbe, 0x86, 0xdd, 0x74, 0x2a,
	0x05, 0x17, 0x79, 0xa2, 0x8d, 0x62, 0x06, 0xf3, 0x3b, 0x7a, 0xe4, 0x2a, 0xd8, 0x09, 0xf8, 0xfb,
	0x00, 0x5b, 0xd7, 0x7a, 0xb2, 0x24, 0xb9, 0x92, 0x55, 0x49, 0x8f, 0xbd, 0x6b, 0x8d, 0xff, 0x6c,
	0x61, 0x72, 0x00, 0x6d, 0x51, 0x15, 0xf6, 0x38, 0x34, 0x7d, 0x36, 0x88, 0x86, 0x9b, 0xf1, 0x96,
	0xa8, 0x8a, 0x37, 0x72, 0xac, 0xc9, 0x57, 0xb0, 0x73, 0xc5, 0x74, 0x62, 0x50, 0x68, 0xa9, 0xc6,
	0x92, 0xa9, 0x8c, 0x0e, 0xdc, 0xcd, 0xf5, 0xae, 0x98, 0xfe, 0xad, 0x46, 0xc9, 0xeb, 0xd0, 0x7a,
	0x05, 0x1a, 0xc5, 0x53, 0xfa, 0x85, 0x2b, 0xfd, 0x78, 0xad, 0xf4, 0xb7, 0x4c, 0x9b, 0x77, 0xce,
	0xc1, 0x17, 0xee, 0x5a, 0xd3, 0x03, 0xfd, 0xef, 0xa1, 0xb7, 0xda, 0x53, 0x64, 0x17, 0x9a, 0xd7,
	0x78, 0xe7, 0xc6, 0x51, 0x27, 0xb6, 0x4b, 0xb2, 0x07, 0x9b, 0x33, 0x36, 0xad, 0x30, 0x0c, 0x24,
	0x6f, 0x7c, 0xd7, 0xf8, 0x36, 0xea, 0xbf, 0x84, 0xee, 0x52, 0x7f, 0xdc, 0x37, 0x74, 0xa9, 0x4b,
	0xee, 0x15, 0xfa, 0x0a, 0xb6, 0x57, 0x9a, 0xe1, 0x5e, 0xc1, 0xaf, 0xe1, 0xe1, 0x27, 0xad, 0x70,
	0xaf, 0x04, 0x3f, 0xc0, 0xce, 0xda, 0x81, 0x7e, 0x2e, 0x3c, 0x5a, 0x0a, 0x3f, 0xf9, 0x33, 0x82,
	0xdd, 0xfa, 0x6e, 0xc2, 0x80, 0xf8, 0x2f, 0x2f, 0xc0, 0xea, 0xa0, 0x6d, 0xfe, 0xfb, 0xa0, 0xdd,
	0x58, 0x1f, 0xb4, 0xfb, 0xd0, 0x0a, 0xe3, 0xc9, 0xbf, 0x02, 0xc1, 0xb2, 0x33, 0xaf, 0x40, 0xad,
	0x59, 0x8e, 0xb4, 0xe5, 0x67, 0x5e, 0x30, 0x4f, 0x6e, 0xe0, 0x71, 0xad, 0xf3, 0x47, 0x99, 0xdd,
	0xc5, 0xf8, 0xb1, 0x42, 0x6d, 0x6c, 0x6d, 0xf2, 0x46, 0xa0, 0x0a, 0xf5, 0x7a, 0x63, 0x79, 0x12,
	0x37, 0x56, 0x27, 0xf1, 0x08, 0xa0, 0x6e, 0x7d, 0x27, 0xbc, 0x7b, 0xde, 0x5b, 0x6d, 0xd1, 0x78,
	0xc9, 0xe3, 0xe4, 0xf7, 0x08, 0x9e, 0xbc, 0xe5, 0xda, 0xd4, 0xb4, 0x8e, 0x51, 0x97, 0x52, 0x68,
	0xb4, 0x7b, 0xa7, 0xb2, 0x12, 0xc6, 0xed, 0xbd, 0x19, 0x7b, 0x83, 0x0c, 0x61, 0x4b, 0xa1, 0xae,
	0xa6, 0x46, 0xd3, 0x86, 0xfb, 0x02, 0xd6, 0xd3, 0xcf, 0x69, 0xfb, 0x95, 0x97, 0x0a, 0x67, 0x5c,
	0x56, 0x3a, 0x1c, 0xe1, 0xc2, 0x76, 0x2f, 0x28, 0xde, 0x9a, 0xc5, 0x0b, 0x8a, 0xb7, 0xe6, 0xe4,
	0x8f, 0x08, 0x8e, 0x57, 0xb5, 0xf8, 0x1b, 0xc3, 0xcf, 0x49, 0x1a, 0xad, 0x4b, 0xda, 0x5b, 0x95,
	0xe4, 0xd3, 0xfc, 0x6f, 0x61, 0xe3, 0x96, 0xfb, 0x27, 0xf1, 0xe2, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x6c, 0x80, 0x8c, 0xb3, 0xcb, 0x08, 0x00, 0x00,
}
