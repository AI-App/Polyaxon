// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package experiment_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	service_model "github.com/polyaxon/polyaxon-sdks/go/http_client/v1/service_model"
)

// NewCreateExperimentCodeRefParams creates a new CreateExperimentCodeRefParams object
// with the default values initialized.
func NewCreateExperimentCodeRefParams() *CreateExperimentCodeRefParams {
	var ()
	return &CreateExperimentCodeRefParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateExperimentCodeRefParamsWithTimeout creates a new CreateExperimentCodeRefParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateExperimentCodeRefParamsWithTimeout(timeout time.Duration) *CreateExperimentCodeRefParams {
	var ()
	return &CreateExperimentCodeRefParams{

		timeout: timeout,
	}
}

// NewCreateExperimentCodeRefParamsWithContext creates a new CreateExperimentCodeRefParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateExperimentCodeRefParamsWithContext(ctx context.Context) *CreateExperimentCodeRefParams {
	var ()
	return &CreateExperimentCodeRefParams{

		Context: ctx,
	}
}

// NewCreateExperimentCodeRefParamsWithHTTPClient creates a new CreateExperimentCodeRefParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateExperimentCodeRefParamsWithHTTPClient(client *http.Client) *CreateExperimentCodeRefParams {
	var ()
	return &CreateExperimentCodeRefParams{
		HTTPClient: client,
	}
}

/*CreateExperimentCodeRefParams contains all the parameters to send to the API endpoint
for the create experiment code ref operation typically these are written to a http.Request
*/
type CreateExperimentCodeRefParams struct {

	/*Body*/
	Body *service_model.V1CodeReferenceBodyRequest
	/*EntityID
	  Unique integer identifier of the entity

	*/
	EntityID string
	/*EntityOwner
	  Owner of the namespace

	*/
	EntityOwner string
	/*EntityProject
	  Project where the experiement will be assigned

	*/
	EntityProject string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithTimeout(timeout time.Duration) *CreateExperimentCodeRefParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithContext(ctx context.Context) *CreateExperimentCodeRefParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithHTTPClient(client *http.Client) *CreateExperimentCodeRefParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithBody(body *service_model.V1CodeReferenceBodyRequest) *CreateExperimentCodeRefParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetBody(body *service_model.V1CodeReferenceBodyRequest) {
	o.Body = body
}

// WithEntityID adds the entityID to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithEntityID(entityID string) *CreateExperimentCodeRefParams {
	o.SetEntityID(entityID)
	return o
}

// SetEntityID adds the entityId to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetEntityID(entityID string) {
	o.EntityID = entityID
}

// WithEntityOwner adds the entityOwner to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithEntityOwner(entityOwner string) *CreateExperimentCodeRefParams {
	o.SetEntityOwner(entityOwner)
	return o
}

// SetEntityOwner adds the entityOwner to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetEntityOwner(entityOwner string) {
	o.EntityOwner = entityOwner
}

// WithEntityProject adds the entityProject to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) WithEntityProject(entityProject string) *CreateExperimentCodeRefParams {
	o.SetEntityProject(entityProject)
	return o
}

// SetEntityProject adds the entityProject to the create experiment code ref params
func (o *CreateExperimentCodeRefParams) SetEntityProject(entityProject string) {
	o.EntityProject = entityProject
}

// WriteToRequest writes these params to a swagger request
func (o *CreateExperimentCodeRefParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param entity.id
	if err := r.SetPathParam("entity.id", o.EntityID); err != nil {
		return err
	}

	// path param entity.owner
	if err := r.SetPathParam("entity.owner", o.EntityOwner); err != nil {
		return err
	}

	// path param entity.project
	if err := r.SetPathParam("entity.project", o.EntityProject); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
