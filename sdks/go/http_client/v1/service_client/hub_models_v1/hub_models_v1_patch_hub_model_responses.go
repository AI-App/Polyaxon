// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package hub_models_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// HubModelsV1PatchHubModelReader is a Reader for the HubModelsV1PatchHubModel structure.
type HubModelsV1PatchHubModelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HubModelsV1PatchHubModelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHubModelsV1PatchHubModelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewHubModelsV1PatchHubModelNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewHubModelsV1PatchHubModelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHubModelsV1PatchHubModelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewHubModelsV1PatchHubModelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHubModelsV1PatchHubModelOK creates a HubModelsV1PatchHubModelOK with default headers values
func NewHubModelsV1PatchHubModelOK() *HubModelsV1PatchHubModelOK {
	return &HubModelsV1PatchHubModelOK{}
}

/*HubModelsV1PatchHubModelOK handles this case with default header values.

A successful response.
*/
type HubModelsV1PatchHubModelOK struct {
	Payload *service_model.V1HubModel
}

func (o *HubModelsV1PatchHubModelOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/models/{model.uuid}][%d] hubModelsV1PatchHubModelOK  %+v", 200, o.Payload)
}

func (o *HubModelsV1PatchHubModelOK) GetPayload() *service_model.V1HubModel {
	return o.Payload
}

func (o *HubModelsV1PatchHubModelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1HubModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHubModelsV1PatchHubModelNoContent creates a HubModelsV1PatchHubModelNoContent with default headers values
func NewHubModelsV1PatchHubModelNoContent() *HubModelsV1PatchHubModelNoContent {
	return &HubModelsV1PatchHubModelNoContent{}
}

/*HubModelsV1PatchHubModelNoContent handles this case with default header values.

No content.
*/
type HubModelsV1PatchHubModelNoContent struct {
	Payload interface{}
}

func (o *HubModelsV1PatchHubModelNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/models/{model.uuid}][%d] hubModelsV1PatchHubModelNoContent  %+v", 204, o.Payload)
}

func (o *HubModelsV1PatchHubModelNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *HubModelsV1PatchHubModelNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHubModelsV1PatchHubModelForbidden creates a HubModelsV1PatchHubModelForbidden with default headers values
func NewHubModelsV1PatchHubModelForbidden() *HubModelsV1PatchHubModelForbidden {
	return &HubModelsV1PatchHubModelForbidden{}
}

/*HubModelsV1PatchHubModelForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type HubModelsV1PatchHubModelForbidden struct {
	Payload interface{}
}

func (o *HubModelsV1PatchHubModelForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/models/{model.uuid}][%d] hubModelsV1PatchHubModelForbidden  %+v", 403, o.Payload)
}

func (o *HubModelsV1PatchHubModelForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *HubModelsV1PatchHubModelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHubModelsV1PatchHubModelNotFound creates a HubModelsV1PatchHubModelNotFound with default headers values
func NewHubModelsV1PatchHubModelNotFound() *HubModelsV1PatchHubModelNotFound {
	return &HubModelsV1PatchHubModelNotFound{}
}

/*HubModelsV1PatchHubModelNotFound handles this case with default header values.

Resource does not exist.
*/
type HubModelsV1PatchHubModelNotFound struct {
	Payload interface{}
}

func (o *HubModelsV1PatchHubModelNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/models/{model.uuid}][%d] hubModelsV1PatchHubModelNotFound  %+v", 404, o.Payload)
}

func (o *HubModelsV1PatchHubModelNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *HubModelsV1PatchHubModelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHubModelsV1PatchHubModelDefault creates a HubModelsV1PatchHubModelDefault with default headers values
func NewHubModelsV1PatchHubModelDefault(code int) *HubModelsV1PatchHubModelDefault {
	return &HubModelsV1PatchHubModelDefault{
		_statusCode: code,
	}
}

/*HubModelsV1PatchHubModelDefault handles this case with default header values.

An unexpected error response
*/
type HubModelsV1PatchHubModelDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the hub models v1 patch hub model default response
func (o *HubModelsV1PatchHubModelDefault) Code() int {
	return o._statusCode
}

func (o *HubModelsV1PatchHubModelDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/models/{model.uuid}][%d] HubModelsV1_PatchHubModel default  %+v", o._statusCode, o.Payload)
}

func (o *HubModelsV1PatchHubModelDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *HubModelsV1PatchHubModelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
