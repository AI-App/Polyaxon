// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package schemas_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// SchemasV1NoOpReader is a Reader for the SchemasV1NoOp structure.
type SchemasV1NoOpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchemasV1NoOpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSchemasV1NoOpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSchemasV1NoOpNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSchemasV1NoOpForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSchemasV1NoOpNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSchemasV1NoOpDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSchemasV1NoOpOK creates a SchemasV1NoOpOK with default headers values
func NewSchemasV1NoOpOK() *SchemasV1NoOpOK {
	return &SchemasV1NoOpOK{}
}

/*SchemasV1NoOpOK handles this case with default header values.

A successful response.
*/
type SchemasV1NoOpOK struct {
	Payload *service_model.V1Schemas
}

func (o *SchemasV1NoOpOK) Error() string {
	return fmt.Sprintf("[GET /schemas][%d] schemasV1NoOpOK  %+v", 200, o.Payload)
}

func (o *SchemasV1NoOpOK) GetPayload() *service_model.V1Schemas {
	return o.Payload
}

func (o *SchemasV1NoOpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Schemas)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemasV1NoOpNoContent creates a SchemasV1NoOpNoContent with default headers values
func NewSchemasV1NoOpNoContent() *SchemasV1NoOpNoContent {
	return &SchemasV1NoOpNoContent{}
}

/*SchemasV1NoOpNoContent handles this case with default header values.

No content.
*/
type SchemasV1NoOpNoContent struct {
	Payload interface{}
}

func (o *SchemasV1NoOpNoContent) Error() string {
	return fmt.Sprintf("[GET /schemas][%d] schemasV1NoOpNoContent  %+v", 204, o.Payload)
}

func (o *SchemasV1NoOpNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *SchemasV1NoOpNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemasV1NoOpForbidden creates a SchemasV1NoOpForbidden with default headers values
func NewSchemasV1NoOpForbidden() *SchemasV1NoOpForbidden {
	return &SchemasV1NoOpForbidden{}
}

/*SchemasV1NoOpForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type SchemasV1NoOpForbidden struct {
	Payload interface{}
}

func (o *SchemasV1NoOpForbidden) Error() string {
	return fmt.Sprintf("[GET /schemas][%d] schemasV1NoOpForbidden  %+v", 403, o.Payload)
}

func (o *SchemasV1NoOpForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SchemasV1NoOpForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemasV1NoOpNotFound creates a SchemasV1NoOpNotFound with default headers values
func NewSchemasV1NoOpNotFound() *SchemasV1NoOpNotFound {
	return &SchemasV1NoOpNotFound{}
}

/*SchemasV1NoOpNotFound handles this case with default header values.

Resource does not exist.
*/
type SchemasV1NoOpNotFound struct {
	Payload interface{}
}

func (o *SchemasV1NoOpNotFound) Error() string {
	return fmt.Sprintf("[GET /schemas][%d] schemasV1NoOpNotFound  %+v", 404, o.Payload)
}

func (o *SchemasV1NoOpNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *SchemasV1NoOpNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchemasV1NoOpDefault creates a SchemasV1NoOpDefault with default headers values
func NewSchemasV1NoOpDefault(code int) *SchemasV1NoOpDefault {
	return &SchemasV1NoOpDefault{
		_statusCode: code,
	}
}

/*SchemasV1NoOpDefault handles this case with default header values.

An unexpected error response
*/
type SchemasV1NoOpDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the schemas v1 no op default response
func (o *SchemasV1NoOpDefault) Code() int {
	return o._statusCode
}

func (o *SchemasV1NoOpDefault) Error() string {
	return fmt.Sprintf("[GET /schemas][%d] SchemasV1_NoOp default  %+v", o._statusCode, o.Payload)
}

func (o *SchemasV1NoOpDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *SchemasV1NoOpDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
