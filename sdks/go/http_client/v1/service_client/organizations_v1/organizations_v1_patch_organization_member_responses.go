// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// OrganizationsV1PatchOrganizationMemberReader is a Reader for the OrganizationsV1PatchOrganizationMember structure.
type OrganizationsV1PatchOrganizationMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsV1PatchOrganizationMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsV1PatchOrganizationMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewOrganizationsV1PatchOrganizationMemberNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewOrganizationsV1PatchOrganizationMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsV1PatchOrganizationMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewOrganizationsV1PatchOrganizationMemberDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewOrganizationsV1PatchOrganizationMemberOK creates a OrganizationsV1PatchOrganizationMemberOK with default headers values
func NewOrganizationsV1PatchOrganizationMemberOK() *OrganizationsV1PatchOrganizationMemberOK {
	return &OrganizationsV1PatchOrganizationMemberOK{}
}

/*OrganizationsV1PatchOrganizationMemberOK handles this case with default header values.

A successful response.
*/
type OrganizationsV1PatchOrganizationMemberOK struct {
	Payload *service_model.V1OrganizationMember
}

func (o *OrganizationsV1PatchOrganizationMemberOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/members/{member.user}][%d] organizationsV1PatchOrganizationMemberOK  %+v", 200, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationMemberOK) GetPayload() *service_model.V1OrganizationMember {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1OrganizationMember)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationMemberNoContent creates a OrganizationsV1PatchOrganizationMemberNoContent with default headers values
func NewOrganizationsV1PatchOrganizationMemberNoContent() *OrganizationsV1PatchOrganizationMemberNoContent {
	return &OrganizationsV1PatchOrganizationMemberNoContent{}
}

/*OrganizationsV1PatchOrganizationMemberNoContent handles this case with default header values.

No content.
*/
type OrganizationsV1PatchOrganizationMemberNoContent struct {
	Payload interface{}
}

func (o *OrganizationsV1PatchOrganizationMemberNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/members/{member.user}][%d] organizationsV1PatchOrganizationMemberNoContent  %+v", 204, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationMemberNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationMemberNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationMemberForbidden creates a OrganizationsV1PatchOrganizationMemberForbidden with default headers values
func NewOrganizationsV1PatchOrganizationMemberForbidden() *OrganizationsV1PatchOrganizationMemberForbidden {
	return &OrganizationsV1PatchOrganizationMemberForbidden{}
}

/*OrganizationsV1PatchOrganizationMemberForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type OrganizationsV1PatchOrganizationMemberForbidden struct {
	Payload interface{}
}

func (o *OrganizationsV1PatchOrganizationMemberForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/members/{member.user}][%d] organizationsV1PatchOrganizationMemberForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationMemberForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationMemberNotFound creates a OrganizationsV1PatchOrganizationMemberNotFound with default headers values
func NewOrganizationsV1PatchOrganizationMemberNotFound() *OrganizationsV1PatchOrganizationMemberNotFound {
	return &OrganizationsV1PatchOrganizationMemberNotFound{}
}

/*OrganizationsV1PatchOrganizationMemberNotFound handles this case with default header values.

Resource does not exist.
*/
type OrganizationsV1PatchOrganizationMemberNotFound struct {
	Payload interface{}
}

func (o *OrganizationsV1PatchOrganizationMemberNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/members/{member.user}][%d] organizationsV1PatchOrganizationMemberNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationMemberNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationMemberDefault creates a OrganizationsV1PatchOrganizationMemberDefault with default headers values
func NewOrganizationsV1PatchOrganizationMemberDefault(code int) *OrganizationsV1PatchOrganizationMemberDefault {
	return &OrganizationsV1PatchOrganizationMemberDefault{
		_statusCode: code,
	}
}

/*OrganizationsV1PatchOrganizationMemberDefault handles this case with default header values.

An unexpected error response
*/
type OrganizationsV1PatchOrganizationMemberDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the organizations v1 patch organization member default response
func (o *OrganizationsV1PatchOrganizationMemberDefault) Code() int {
	return o._statusCode
}

func (o *OrganizationsV1PatchOrganizationMemberDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/members/{member.user}][%d] OrganizationsV1_PatchOrganizationMember default  %+v", o._statusCode, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationMemberDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationMemberDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
