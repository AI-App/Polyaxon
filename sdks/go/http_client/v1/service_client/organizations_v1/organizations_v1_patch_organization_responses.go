// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// OrganizationsV1PatchOrganizationReader is a Reader for the OrganizationsV1PatchOrganization structure.
type OrganizationsV1PatchOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsV1PatchOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsV1PatchOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewOrganizationsV1PatchOrganizationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewOrganizationsV1PatchOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsV1PatchOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewOrganizationsV1PatchOrganizationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewOrganizationsV1PatchOrganizationOK creates a OrganizationsV1PatchOrganizationOK with default headers values
func NewOrganizationsV1PatchOrganizationOK() *OrganizationsV1PatchOrganizationOK {
	return &OrganizationsV1PatchOrganizationOK{}
}

/*OrganizationsV1PatchOrganizationOK handles this case with default header values.

A successful response.
*/
type OrganizationsV1PatchOrganizationOK struct {
	Payload *service_model.V1Organization
}

func (o *OrganizationsV1PatchOrganizationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] organizationsV1PatchOrganizationOK  %+v", 200, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationOK) GetPayload() *service_model.V1Organization {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationNoContent creates a OrganizationsV1PatchOrganizationNoContent with default headers values
func NewOrganizationsV1PatchOrganizationNoContent() *OrganizationsV1PatchOrganizationNoContent {
	return &OrganizationsV1PatchOrganizationNoContent{}
}

/*OrganizationsV1PatchOrganizationNoContent handles this case with default header values.

No content.
*/
type OrganizationsV1PatchOrganizationNoContent struct {
	Payload interface{}
}

func (o *OrganizationsV1PatchOrganizationNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] organizationsV1PatchOrganizationNoContent  %+v", 204, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationForbidden creates a OrganizationsV1PatchOrganizationForbidden with default headers values
func NewOrganizationsV1PatchOrganizationForbidden() *OrganizationsV1PatchOrganizationForbidden {
	return &OrganizationsV1PatchOrganizationForbidden{}
}

/*OrganizationsV1PatchOrganizationForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type OrganizationsV1PatchOrganizationForbidden struct {
	Payload interface{}
}

func (o *OrganizationsV1PatchOrganizationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] organizationsV1PatchOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationNotFound creates a OrganizationsV1PatchOrganizationNotFound with default headers values
func NewOrganizationsV1PatchOrganizationNotFound() *OrganizationsV1PatchOrganizationNotFound {
	return &OrganizationsV1PatchOrganizationNotFound{}
}

/*OrganizationsV1PatchOrganizationNotFound handles this case with default header values.

Resource does not exist.
*/
type OrganizationsV1PatchOrganizationNotFound struct {
	Payload interface{}
}

func (o *OrganizationsV1PatchOrganizationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] organizationsV1PatchOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1PatchOrganizationDefault creates a OrganizationsV1PatchOrganizationDefault with default headers values
func NewOrganizationsV1PatchOrganizationDefault(code int) *OrganizationsV1PatchOrganizationDefault {
	return &OrganizationsV1PatchOrganizationDefault{
		_statusCode: code,
	}
}

/*OrganizationsV1PatchOrganizationDefault handles this case with default header values.

An unexpected error response
*/
type OrganizationsV1PatchOrganizationDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the organizations v1 patch organization default response
func (o *OrganizationsV1PatchOrganizationDefault) Code() int {
	return o._statusCode
}

func (o *OrganizationsV1PatchOrganizationDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}][%d] OrganizationsV1_PatchOrganization default  %+v", o._statusCode, o.Payload)
}

func (o *OrganizationsV1PatchOrganizationDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *OrganizationsV1PatchOrganizationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
