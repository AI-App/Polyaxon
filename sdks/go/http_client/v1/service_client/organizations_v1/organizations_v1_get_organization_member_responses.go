// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package organizations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// OrganizationsV1GetOrganizationMemberReader is a Reader for the OrganizationsV1GetOrganizationMember structure.
type OrganizationsV1GetOrganizationMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsV1GetOrganizationMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsV1GetOrganizationMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewOrganizationsV1GetOrganizationMemberNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewOrganizationsV1GetOrganizationMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsV1GetOrganizationMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewOrganizationsV1GetOrganizationMemberDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewOrganizationsV1GetOrganizationMemberOK creates a OrganizationsV1GetOrganizationMemberOK with default headers values
func NewOrganizationsV1GetOrganizationMemberOK() *OrganizationsV1GetOrganizationMemberOK {
	return &OrganizationsV1GetOrganizationMemberOK{}
}

/*OrganizationsV1GetOrganizationMemberOK handles this case with default header values.

A successful response.
*/
type OrganizationsV1GetOrganizationMemberOK struct {
	Payload *service_model.V1OrganizationMember
}

func (o *OrganizationsV1GetOrganizationMemberOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/members/{user}][%d] organizationsV1GetOrganizationMemberOK  %+v", 200, o.Payload)
}

func (o *OrganizationsV1GetOrganizationMemberOK) GetPayload() *service_model.V1OrganizationMember {
	return o.Payload
}

func (o *OrganizationsV1GetOrganizationMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1OrganizationMember)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1GetOrganizationMemberNoContent creates a OrganizationsV1GetOrganizationMemberNoContent with default headers values
func NewOrganizationsV1GetOrganizationMemberNoContent() *OrganizationsV1GetOrganizationMemberNoContent {
	return &OrganizationsV1GetOrganizationMemberNoContent{}
}

/*OrganizationsV1GetOrganizationMemberNoContent handles this case with default header values.

No content.
*/
type OrganizationsV1GetOrganizationMemberNoContent struct {
	Payload interface{}
}

func (o *OrganizationsV1GetOrganizationMemberNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/members/{user}][%d] organizationsV1GetOrganizationMemberNoContent  %+v", 204, o.Payload)
}

func (o *OrganizationsV1GetOrganizationMemberNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1GetOrganizationMemberNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1GetOrganizationMemberForbidden creates a OrganizationsV1GetOrganizationMemberForbidden with default headers values
func NewOrganizationsV1GetOrganizationMemberForbidden() *OrganizationsV1GetOrganizationMemberForbidden {
	return &OrganizationsV1GetOrganizationMemberForbidden{}
}

/*OrganizationsV1GetOrganizationMemberForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type OrganizationsV1GetOrganizationMemberForbidden struct {
	Payload interface{}
}

func (o *OrganizationsV1GetOrganizationMemberForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/members/{user}][%d] organizationsV1GetOrganizationMemberForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsV1GetOrganizationMemberForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1GetOrganizationMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1GetOrganizationMemberNotFound creates a OrganizationsV1GetOrganizationMemberNotFound with default headers values
func NewOrganizationsV1GetOrganizationMemberNotFound() *OrganizationsV1GetOrganizationMemberNotFound {
	return &OrganizationsV1GetOrganizationMemberNotFound{}
}

/*OrganizationsV1GetOrganizationMemberNotFound handles this case with default header values.

Resource does not exist.
*/
type OrganizationsV1GetOrganizationMemberNotFound struct {
	Payload interface{}
}

func (o *OrganizationsV1GetOrganizationMemberNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/members/{user}][%d] organizationsV1GetOrganizationMemberNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsV1GetOrganizationMemberNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsV1GetOrganizationMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsV1GetOrganizationMemberDefault creates a OrganizationsV1GetOrganizationMemberDefault with default headers values
func NewOrganizationsV1GetOrganizationMemberDefault(code int) *OrganizationsV1GetOrganizationMemberDefault {
	return &OrganizationsV1GetOrganizationMemberDefault{
		_statusCode: code,
	}
}

/*OrganizationsV1GetOrganizationMemberDefault handles this case with default header values.

An unexpected error response
*/
type OrganizationsV1GetOrganizationMemberDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the organizations v1 get organization member default response
func (o *OrganizationsV1GetOrganizationMemberDefault) Code() int {
	return o._statusCode
}

func (o *OrganizationsV1GetOrganizationMemberDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/members/{user}][%d] OrganizationsV1_GetOrganizationMember default  %+v", o._statusCode, o.Payload)
}

func (o *OrganizationsV1GetOrganizationMemberDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *OrganizationsV1GetOrganizationMemberDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
