// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package agents_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// AgentsV1PatchAgentReader is a Reader for the AgentsV1PatchAgent structure.
type AgentsV1PatchAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentsV1PatchAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentsV1PatchAgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewAgentsV1PatchAgentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAgentsV1PatchAgentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAgentsV1PatchAgentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAgentsV1PatchAgentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAgentsV1PatchAgentOK creates a AgentsV1PatchAgentOK with default headers values
func NewAgentsV1PatchAgentOK() *AgentsV1PatchAgentOK {
	return &AgentsV1PatchAgentOK{}
}

/*AgentsV1PatchAgentOK handles this case with default header values.

A successful response.
*/
type AgentsV1PatchAgentOK struct {
	Payload *service_model.V1Agent
}

func (o *AgentsV1PatchAgentOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}][%d] agentsV1PatchAgentOK  %+v", 200, o.Payload)
}

func (o *AgentsV1PatchAgentOK) GetPayload() *service_model.V1Agent {
	return o.Payload
}

func (o *AgentsV1PatchAgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Agent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1PatchAgentNoContent creates a AgentsV1PatchAgentNoContent with default headers values
func NewAgentsV1PatchAgentNoContent() *AgentsV1PatchAgentNoContent {
	return &AgentsV1PatchAgentNoContent{}
}

/*AgentsV1PatchAgentNoContent handles this case with default header values.

No content.
*/
type AgentsV1PatchAgentNoContent struct {
	Payload interface{}
}

func (o *AgentsV1PatchAgentNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}][%d] agentsV1PatchAgentNoContent  %+v", 204, o.Payload)
}

func (o *AgentsV1PatchAgentNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *AgentsV1PatchAgentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1PatchAgentForbidden creates a AgentsV1PatchAgentForbidden with default headers values
func NewAgentsV1PatchAgentForbidden() *AgentsV1PatchAgentForbidden {
	return &AgentsV1PatchAgentForbidden{}
}

/*AgentsV1PatchAgentForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type AgentsV1PatchAgentForbidden struct {
	Payload interface{}
}

func (o *AgentsV1PatchAgentForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}][%d] agentsV1PatchAgentForbidden  %+v", 403, o.Payload)
}

func (o *AgentsV1PatchAgentForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AgentsV1PatchAgentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1PatchAgentNotFound creates a AgentsV1PatchAgentNotFound with default headers values
func NewAgentsV1PatchAgentNotFound() *AgentsV1PatchAgentNotFound {
	return &AgentsV1PatchAgentNotFound{}
}

/*AgentsV1PatchAgentNotFound handles this case with default header values.

Resource does not exist.
*/
type AgentsV1PatchAgentNotFound struct {
	Payload interface{}
}

func (o *AgentsV1PatchAgentNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}][%d] agentsV1PatchAgentNotFound  %+v", 404, o.Payload)
}

func (o *AgentsV1PatchAgentNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AgentsV1PatchAgentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1PatchAgentDefault creates a AgentsV1PatchAgentDefault with default headers values
func NewAgentsV1PatchAgentDefault(code int) *AgentsV1PatchAgentDefault {
	return &AgentsV1PatchAgentDefault{
		_statusCode: code,
	}
}

/*AgentsV1PatchAgentDefault handles this case with default header values.

An unexpected error response
*/
type AgentsV1PatchAgentDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the agents v1 patch agent default response
func (o *AgentsV1PatchAgentDefault) Code() int {
	return o._statusCode
}

func (o *AgentsV1PatchAgentDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}][%d] AgentsV1_PatchAgent default  %+v", o._statusCode, o.Payload)
}

func (o *AgentsV1PatchAgentDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *AgentsV1PatchAgentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
