// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package agents_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// AgentsV1SyncAgentReader is a Reader for the AgentsV1SyncAgent structure.
type AgentsV1SyncAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentsV1SyncAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentsV1SyncAgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewAgentsV1SyncAgentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAgentsV1SyncAgentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAgentsV1SyncAgentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAgentsV1SyncAgentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAgentsV1SyncAgentOK creates a AgentsV1SyncAgentOK with default headers values
func NewAgentsV1SyncAgentOK() *AgentsV1SyncAgentOK {
	return &AgentsV1SyncAgentOK{}
}

/*AgentsV1SyncAgentOK handles this case with default header values.

A successful response.
*/
type AgentsV1SyncAgentOK struct {
}

func (o *AgentsV1SyncAgentOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}/sync][%d] agentsV1SyncAgentOK ", 200)
}

func (o *AgentsV1SyncAgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAgentsV1SyncAgentNoContent creates a AgentsV1SyncAgentNoContent with default headers values
func NewAgentsV1SyncAgentNoContent() *AgentsV1SyncAgentNoContent {
	return &AgentsV1SyncAgentNoContent{}
}

/*AgentsV1SyncAgentNoContent handles this case with default header values.

No content.
*/
type AgentsV1SyncAgentNoContent struct {
	Payload interface{}
}

func (o *AgentsV1SyncAgentNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}/sync][%d] agentsV1SyncAgentNoContent  %+v", 204, o.Payload)
}

func (o *AgentsV1SyncAgentNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *AgentsV1SyncAgentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1SyncAgentForbidden creates a AgentsV1SyncAgentForbidden with default headers values
func NewAgentsV1SyncAgentForbidden() *AgentsV1SyncAgentForbidden {
	return &AgentsV1SyncAgentForbidden{}
}

/*AgentsV1SyncAgentForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type AgentsV1SyncAgentForbidden struct {
	Payload interface{}
}

func (o *AgentsV1SyncAgentForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}/sync][%d] agentsV1SyncAgentForbidden  %+v", 403, o.Payload)
}

func (o *AgentsV1SyncAgentForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AgentsV1SyncAgentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1SyncAgentNotFound creates a AgentsV1SyncAgentNotFound with default headers values
func NewAgentsV1SyncAgentNotFound() *AgentsV1SyncAgentNotFound {
	return &AgentsV1SyncAgentNotFound{}
}

/*AgentsV1SyncAgentNotFound handles this case with default header values.

Resource does not exist.
*/
type AgentsV1SyncAgentNotFound struct {
	Payload interface{}
}

func (o *AgentsV1SyncAgentNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}/sync][%d] agentsV1SyncAgentNotFound  %+v", 404, o.Payload)
}

func (o *AgentsV1SyncAgentNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AgentsV1SyncAgentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsV1SyncAgentDefault creates a AgentsV1SyncAgentDefault with default headers values
func NewAgentsV1SyncAgentDefault(code int) *AgentsV1SyncAgentDefault {
	return &AgentsV1SyncAgentDefault{
		_statusCode: code,
	}
}

/*AgentsV1SyncAgentDefault handles this case with default header values.

An unexpected error response
*/
type AgentsV1SyncAgentDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the agents v1 sync agent default response
func (o *AgentsV1SyncAgentDefault) Code() int {
	return o._statusCode
}

func (o *AgentsV1SyncAgentDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/agents/{agent.uuid}/sync][%d] AgentsV1_SyncAgent default  %+v", o._statusCode, o.Payload)
}

func (o *AgentsV1SyncAgentDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *AgentsV1SyncAgentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
