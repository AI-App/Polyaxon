// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package k8s_secrets_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteK8sSecretReader is a Reader for the DeleteK8sSecret structure.
type DeleteK8sSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteK8sSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteK8sSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteK8sSecretNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteK8sSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteK8sSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteK8sSecretOK creates a DeleteK8sSecretOK with default headers values
func NewDeleteK8sSecretOK() *DeleteK8sSecretOK {
	return &DeleteK8sSecretOK{}
}

/*DeleteK8sSecretOK handles this case with default header values.

A successful response.
*/
type DeleteK8sSecretOK struct {
}

func (o *DeleteK8sSecretOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/k8s_secrets/{uuid}][%d] deleteK8sSecretOK ", 200)
}

func (o *DeleteK8sSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteK8sSecretNoContent creates a DeleteK8sSecretNoContent with default headers values
func NewDeleteK8sSecretNoContent() *DeleteK8sSecretNoContent {
	return &DeleteK8sSecretNoContent{}
}

/*DeleteK8sSecretNoContent handles this case with default header values.

No content.
*/
type DeleteK8sSecretNoContent struct {
	Payload interface{}
}

func (o *DeleteK8sSecretNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/k8s_secrets/{uuid}][%d] deleteK8sSecretNoContent  %+v", 204, o.Payload)
}

func (o *DeleteK8sSecretNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteK8sSecretNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteK8sSecretForbidden creates a DeleteK8sSecretForbidden with default headers values
func NewDeleteK8sSecretForbidden() *DeleteK8sSecretForbidden {
	return &DeleteK8sSecretForbidden{}
}

/*DeleteK8sSecretForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type DeleteK8sSecretForbidden struct {
	Payload interface{}
}

func (o *DeleteK8sSecretForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/k8s_secrets/{uuid}][%d] deleteK8sSecretForbidden  %+v", 403, o.Payload)
}

func (o *DeleteK8sSecretForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteK8sSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteK8sSecretNotFound creates a DeleteK8sSecretNotFound with default headers values
func NewDeleteK8sSecretNotFound() *DeleteK8sSecretNotFound {
	return &DeleteK8sSecretNotFound{}
}

/*DeleteK8sSecretNotFound handles this case with default header values.

Resource does not exist.
*/
type DeleteK8sSecretNotFound struct {
	Payload interface{}
}

func (o *DeleteK8sSecretNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/k8s_secrets/{uuid}][%d] deleteK8sSecretNotFound  %+v", 404, o.Payload)
}

func (o *DeleteK8sSecretNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteK8sSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
