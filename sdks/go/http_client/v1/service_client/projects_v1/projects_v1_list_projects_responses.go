// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectsV1ListProjectsReader is a Reader for the ProjectsV1ListProjects structure.
type ProjectsV1ListProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsV1ListProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsV1ListProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectsV1ListProjectsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectsV1ListProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsV1ListProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectsV1ListProjectsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectsV1ListProjectsOK creates a ProjectsV1ListProjectsOK with default headers values
func NewProjectsV1ListProjectsOK() *ProjectsV1ListProjectsOK {
	return &ProjectsV1ListProjectsOK{}
}

/*ProjectsV1ListProjectsOK handles this case with default header values.

A successful response.
*/
type ProjectsV1ListProjectsOK struct {
	Payload *service_model.V1ListProjectsResponse
}

func (o *ProjectsV1ListProjectsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] projectsV1ListProjectsOK  %+v", 200, o.Payload)
}

func (o *ProjectsV1ListProjectsOK) GetPayload() *service_model.V1ListProjectsResponse {
	return o.Payload
}

func (o *ProjectsV1ListProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListProjectsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1ListProjectsNoContent creates a ProjectsV1ListProjectsNoContent with default headers values
func NewProjectsV1ListProjectsNoContent() *ProjectsV1ListProjectsNoContent {
	return &ProjectsV1ListProjectsNoContent{}
}

/*ProjectsV1ListProjectsNoContent handles this case with default header values.

No content.
*/
type ProjectsV1ListProjectsNoContent struct {
	Payload interface{}
}

func (o *ProjectsV1ListProjectsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] projectsV1ListProjectsNoContent  %+v", 204, o.Payload)
}

func (o *ProjectsV1ListProjectsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1ListProjectsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1ListProjectsForbidden creates a ProjectsV1ListProjectsForbidden with default headers values
func NewProjectsV1ListProjectsForbidden() *ProjectsV1ListProjectsForbidden {
	return &ProjectsV1ListProjectsForbidden{}
}

/*ProjectsV1ListProjectsForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectsV1ListProjectsForbidden struct {
	Payload interface{}
}

func (o *ProjectsV1ListProjectsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] projectsV1ListProjectsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsV1ListProjectsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1ListProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1ListProjectsNotFound creates a ProjectsV1ListProjectsNotFound with default headers values
func NewProjectsV1ListProjectsNotFound() *ProjectsV1ListProjectsNotFound {
	return &ProjectsV1ListProjectsNotFound{}
}

/*ProjectsV1ListProjectsNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectsV1ListProjectsNotFound struct {
	Payload interface{}
}

func (o *ProjectsV1ListProjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] projectsV1ListProjectsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsV1ListProjectsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1ListProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1ListProjectsDefault creates a ProjectsV1ListProjectsDefault with default headers values
func NewProjectsV1ListProjectsDefault(code int) *ProjectsV1ListProjectsDefault {
	return &ProjectsV1ListProjectsDefault{
		_statusCode: code,
	}
}

/*ProjectsV1ListProjectsDefault handles this case with default header values.

An unexpected error response
*/
type ProjectsV1ListProjectsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the projects v1 list projects default response
func (o *ProjectsV1ListProjectsDefault) Code() int {
	return o._statusCode
}

func (o *ProjectsV1ListProjectsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/projects/list][%d] ProjectsV1_ListProjects default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectsV1ListProjectsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectsV1ListProjectsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
