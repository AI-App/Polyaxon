// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectsV1PatchProjectTeamsReader is a Reader for the ProjectsV1PatchProjectTeams structure.
type ProjectsV1PatchProjectTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsV1PatchProjectTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsV1PatchProjectTeamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectsV1PatchProjectTeamsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectsV1PatchProjectTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsV1PatchProjectTeamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectsV1PatchProjectTeamsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectsV1PatchProjectTeamsOK creates a ProjectsV1PatchProjectTeamsOK with default headers values
func NewProjectsV1PatchProjectTeamsOK() *ProjectsV1PatchProjectTeamsOK {
	return &ProjectsV1PatchProjectTeamsOK{}
}

/*ProjectsV1PatchProjectTeamsOK handles this case with default header values.

A successful response.
*/
type ProjectsV1PatchProjectTeamsOK struct {
	Payload *service_model.V1ProjectTeams
}

func (o *ProjectsV1PatchProjectTeamsOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/{owner}/{project}/teams][%d] projectsV1PatchProjectTeamsOK  %+v", 200, o.Payload)
}

func (o *ProjectsV1PatchProjectTeamsOK) GetPayload() *service_model.V1ProjectTeams {
	return o.Payload
}

func (o *ProjectsV1PatchProjectTeamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ProjectTeams)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1PatchProjectTeamsNoContent creates a ProjectsV1PatchProjectTeamsNoContent with default headers values
func NewProjectsV1PatchProjectTeamsNoContent() *ProjectsV1PatchProjectTeamsNoContent {
	return &ProjectsV1PatchProjectTeamsNoContent{}
}

/*ProjectsV1PatchProjectTeamsNoContent handles this case with default header values.

No content.
*/
type ProjectsV1PatchProjectTeamsNoContent struct {
	Payload interface{}
}

func (o *ProjectsV1PatchProjectTeamsNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/{owner}/{project}/teams][%d] projectsV1PatchProjectTeamsNoContent  %+v", 204, o.Payload)
}

func (o *ProjectsV1PatchProjectTeamsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1PatchProjectTeamsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1PatchProjectTeamsForbidden creates a ProjectsV1PatchProjectTeamsForbidden with default headers values
func NewProjectsV1PatchProjectTeamsForbidden() *ProjectsV1PatchProjectTeamsForbidden {
	return &ProjectsV1PatchProjectTeamsForbidden{}
}

/*ProjectsV1PatchProjectTeamsForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectsV1PatchProjectTeamsForbidden struct {
	Payload interface{}
}

func (o *ProjectsV1PatchProjectTeamsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/{owner}/{project}/teams][%d] projectsV1PatchProjectTeamsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsV1PatchProjectTeamsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1PatchProjectTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1PatchProjectTeamsNotFound creates a ProjectsV1PatchProjectTeamsNotFound with default headers values
func NewProjectsV1PatchProjectTeamsNotFound() *ProjectsV1PatchProjectTeamsNotFound {
	return &ProjectsV1PatchProjectTeamsNotFound{}
}

/*ProjectsV1PatchProjectTeamsNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectsV1PatchProjectTeamsNotFound struct {
	Payload interface{}
}

func (o *ProjectsV1PatchProjectTeamsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/{owner}/{project}/teams][%d] projectsV1PatchProjectTeamsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsV1PatchProjectTeamsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1PatchProjectTeamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1PatchProjectTeamsDefault creates a ProjectsV1PatchProjectTeamsDefault with default headers values
func NewProjectsV1PatchProjectTeamsDefault(code int) *ProjectsV1PatchProjectTeamsDefault {
	return &ProjectsV1PatchProjectTeamsDefault{
		_statusCode: code,
	}
}

/*ProjectsV1PatchProjectTeamsDefault handles this case with default header values.

An unexpected error response
*/
type ProjectsV1PatchProjectTeamsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the projects v1 patch project teams default response
func (o *ProjectsV1PatchProjectTeamsDefault) Code() int {
	return o._statusCode
}

func (o *ProjectsV1PatchProjectTeamsDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/{owner}/{project}/teams][%d] ProjectsV1_PatchProjectTeams default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectsV1PatchProjectTeamsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectsV1PatchProjectTeamsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
