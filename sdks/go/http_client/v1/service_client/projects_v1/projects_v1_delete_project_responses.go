// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectsV1DeleteProjectReader is a Reader for the ProjectsV1DeleteProject structure.
type ProjectsV1DeleteProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsV1DeleteProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsV1DeleteProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectsV1DeleteProjectNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectsV1DeleteProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsV1DeleteProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectsV1DeleteProjectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectsV1DeleteProjectOK creates a ProjectsV1DeleteProjectOK with default headers values
func NewProjectsV1DeleteProjectOK() *ProjectsV1DeleteProjectOK {
	return &ProjectsV1DeleteProjectOK{}
}

/*ProjectsV1DeleteProjectOK handles this case with default header values.

A successful response.
*/
type ProjectsV1DeleteProjectOK struct {
}

func (o *ProjectsV1DeleteProjectOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}][%d] projectsV1DeleteProjectOK ", 200)
}

func (o *ProjectsV1DeleteProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectsV1DeleteProjectNoContent creates a ProjectsV1DeleteProjectNoContent with default headers values
func NewProjectsV1DeleteProjectNoContent() *ProjectsV1DeleteProjectNoContent {
	return &ProjectsV1DeleteProjectNoContent{}
}

/*ProjectsV1DeleteProjectNoContent handles this case with default header values.

No content.
*/
type ProjectsV1DeleteProjectNoContent struct {
	Payload interface{}
}

func (o *ProjectsV1DeleteProjectNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}][%d] projectsV1DeleteProjectNoContent  %+v", 204, o.Payload)
}

func (o *ProjectsV1DeleteProjectNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1DeleteProjectNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1DeleteProjectForbidden creates a ProjectsV1DeleteProjectForbidden with default headers values
func NewProjectsV1DeleteProjectForbidden() *ProjectsV1DeleteProjectForbidden {
	return &ProjectsV1DeleteProjectForbidden{}
}

/*ProjectsV1DeleteProjectForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectsV1DeleteProjectForbidden struct {
	Payload interface{}
}

func (o *ProjectsV1DeleteProjectForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}][%d] projectsV1DeleteProjectForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsV1DeleteProjectForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1DeleteProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1DeleteProjectNotFound creates a ProjectsV1DeleteProjectNotFound with default headers values
func NewProjectsV1DeleteProjectNotFound() *ProjectsV1DeleteProjectNotFound {
	return &ProjectsV1DeleteProjectNotFound{}
}

/*ProjectsV1DeleteProjectNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectsV1DeleteProjectNotFound struct {
	Payload interface{}
}

func (o *ProjectsV1DeleteProjectNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}][%d] projectsV1DeleteProjectNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsV1DeleteProjectNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1DeleteProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1DeleteProjectDefault creates a ProjectsV1DeleteProjectDefault with default headers values
func NewProjectsV1DeleteProjectDefault(code int) *ProjectsV1DeleteProjectDefault {
	return &ProjectsV1DeleteProjectDefault{
		_statusCode: code,
	}
}

/*ProjectsV1DeleteProjectDefault handles this case with default header values.

An unexpected error response
*/
type ProjectsV1DeleteProjectDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the projects v1 delete project default response
func (o *ProjectsV1DeleteProjectDefault) Code() int {
	return o._statusCode
}

func (o *ProjectsV1DeleteProjectDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}][%d] ProjectsV1_DeleteProject default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectsV1DeleteProjectDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectsV1DeleteProjectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
