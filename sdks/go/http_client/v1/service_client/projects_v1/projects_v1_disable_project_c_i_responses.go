// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectsV1DisableProjectCIReader is a Reader for the ProjectsV1DisableProjectCI structure.
type ProjectsV1DisableProjectCIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsV1DisableProjectCIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsV1DisableProjectCIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectsV1DisableProjectCINoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectsV1DisableProjectCIForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsV1DisableProjectCINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectsV1DisableProjectCIDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectsV1DisableProjectCIOK creates a ProjectsV1DisableProjectCIOK with default headers values
func NewProjectsV1DisableProjectCIOK() *ProjectsV1DisableProjectCIOK {
	return &ProjectsV1DisableProjectCIOK{}
}

/*ProjectsV1DisableProjectCIOK handles this case with default header values.

A successful response.
*/
type ProjectsV1DisableProjectCIOK struct {
}

func (o *ProjectsV1DisableProjectCIOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}/ci][%d] projectsV1DisableProjectCIOK ", 200)
}

func (o *ProjectsV1DisableProjectCIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectsV1DisableProjectCINoContent creates a ProjectsV1DisableProjectCINoContent with default headers values
func NewProjectsV1DisableProjectCINoContent() *ProjectsV1DisableProjectCINoContent {
	return &ProjectsV1DisableProjectCINoContent{}
}

/*ProjectsV1DisableProjectCINoContent handles this case with default header values.

No content.
*/
type ProjectsV1DisableProjectCINoContent struct {
	Payload interface{}
}

func (o *ProjectsV1DisableProjectCINoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}/ci][%d] projectsV1DisableProjectCINoContent  %+v", 204, o.Payload)
}

func (o *ProjectsV1DisableProjectCINoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1DisableProjectCINoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1DisableProjectCIForbidden creates a ProjectsV1DisableProjectCIForbidden with default headers values
func NewProjectsV1DisableProjectCIForbidden() *ProjectsV1DisableProjectCIForbidden {
	return &ProjectsV1DisableProjectCIForbidden{}
}

/*ProjectsV1DisableProjectCIForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectsV1DisableProjectCIForbidden struct {
	Payload interface{}
}

func (o *ProjectsV1DisableProjectCIForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}/ci][%d] projectsV1DisableProjectCIForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsV1DisableProjectCIForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1DisableProjectCIForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1DisableProjectCINotFound creates a ProjectsV1DisableProjectCINotFound with default headers values
func NewProjectsV1DisableProjectCINotFound() *ProjectsV1DisableProjectCINotFound {
	return &ProjectsV1DisableProjectCINotFound{}
}

/*ProjectsV1DisableProjectCINotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectsV1DisableProjectCINotFound struct {
	Payload interface{}
}

func (o *ProjectsV1DisableProjectCINotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}/ci][%d] projectsV1DisableProjectCINotFound  %+v", 404, o.Payload)
}

func (o *ProjectsV1DisableProjectCINotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsV1DisableProjectCINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsV1DisableProjectCIDefault creates a ProjectsV1DisableProjectCIDefault with default headers values
func NewProjectsV1DisableProjectCIDefault(code int) *ProjectsV1DisableProjectCIDefault {
	return &ProjectsV1DisableProjectCIDefault{
		_statusCode: code,
	}
}

/*ProjectsV1DisableProjectCIDefault handles this case with default header values.

An unexpected error response
*/
type ProjectsV1DisableProjectCIDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the projects v1 disable project c i default response
func (o *ProjectsV1DisableProjectCIDefault) Code() int {
	return o._statusCode
}

func (o *ProjectsV1DisableProjectCIDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/{owner}/{project}/ci][%d] ProjectsV1_DisableProjectCI default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectsV1DisableProjectCIDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectsV1DisableProjectCIDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
