// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package projects_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewProjectsV1EnableProjectCIParams creates a new ProjectsV1EnableProjectCIParams object
// with the default values initialized.
func NewProjectsV1EnableProjectCIParams() *ProjectsV1EnableProjectCIParams {
	var ()
	return &ProjectsV1EnableProjectCIParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProjectsV1EnableProjectCIParamsWithTimeout creates a new ProjectsV1EnableProjectCIParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProjectsV1EnableProjectCIParamsWithTimeout(timeout time.Duration) *ProjectsV1EnableProjectCIParams {
	var ()
	return &ProjectsV1EnableProjectCIParams{

		timeout: timeout,
	}
}

// NewProjectsV1EnableProjectCIParamsWithContext creates a new ProjectsV1EnableProjectCIParams object
// with the default values initialized, and the ability to set a context for a request
func NewProjectsV1EnableProjectCIParamsWithContext(ctx context.Context) *ProjectsV1EnableProjectCIParams {
	var ()
	return &ProjectsV1EnableProjectCIParams{

		Context: ctx,
	}
}

// NewProjectsV1EnableProjectCIParamsWithHTTPClient creates a new ProjectsV1EnableProjectCIParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProjectsV1EnableProjectCIParamsWithHTTPClient(client *http.Client) *ProjectsV1EnableProjectCIParams {
	var ()
	return &ProjectsV1EnableProjectCIParams{
		HTTPClient: client,
	}
}

/*ProjectsV1EnableProjectCIParams contains all the parameters to send to the API endpoint
for the projects v1 enable project c i operation typically these are written to a http.Request
*/
type ProjectsV1EnableProjectCIParams struct {

	/*Owner
	  Owner of the namespace

	*/
	Owner string
	/*Project
	  Project under namesapce

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) WithTimeout(timeout time.Duration) *ProjectsV1EnableProjectCIParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) WithContext(ctx context.Context) *ProjectsV1EnableProjectCIParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) WithHTTPClient(client *http.Client) *ProjectsV1EnableProjectCIParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOwner adds the owner to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) WithOwner(owner string) *ProjectsV1EnableProjectCIParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithProject adds the project to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) WithProject(project string) *ProjectsV1EnableProjectCIParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the projects v1 enable project c i params
func (o *ProjectsV1EnableProjectCIParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *ProjectsV1EnableProjectCIParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
