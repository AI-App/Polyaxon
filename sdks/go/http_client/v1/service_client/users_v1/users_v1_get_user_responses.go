// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package users_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// UsersV1GetUserReader is a Reader for the UsersV1GetUser structure.
type UsersV1GetUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersV1GetUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersV1GetUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUsersV1GetUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUsersV1GetUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUsersV1GetUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUsersV1GetUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUsersV1GetUserOK creates a UsersV1GetUserOK with default headers values
func NewUsersV1GetUserOK() *UsersV1GetUserOK {
	return &UsersV1GetUserOK{}
}

/*UsersV1GetUserOK handles this case with default header values.

A successful response.
*/
type UsersV1GetUserOK struct {
	Payload *service_model.V1User
}

func (o *UsersV1GetUserOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/users][%d] usersV1GetUserOK  %+v", 200, o.Payload)
}

func (o *UsersV1GetUserOK) GetPayload() *service_model.V1User {
	return o.Payload
}

func (o *UsersV1GetUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersV1GetUserNoContent creates a UsersV1GetUserNoContent with default headers values
func NewUsersV1GetUserNoContent() *UsersV1GetUserNoContent {
	return &UsersV1GetUserNoContent{}
}

/*UsersV1GetUserNoContent handles this case with default header values.

No content.
*/
type UsersV1GetUserNoContent struct {
	Payload interface{}
}

func (o *UsersV1GetUserNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/users][%d] usersV1GetUserNoContent  %+v", 204, o.Payload)
}

func (o *UsersV1GetUserNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UsersV1GetUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersV1GetUserForbidden creates a UsersV1GetUserForbidden with default headers values
func NewUsersV1GetUserForbidden() *UsersV1GetUserForbidden {
	return &UsersV1GetUserForbidden{}
}

/*UsersV1GetUserForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type UsersV1GetUserForbidden struct {
	Payload interface{}
}

func (o *UsersV1GetUserForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/users][%d] usersV1GetUserForbidden  %+v", 403, o.Payload)
}

func (o *UsersV1GetUserForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UsersV1GetUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersV1GetUserNotFound creates a UsersV1GetUserNotFound with default headers values
func NewUsersV1GetUserNotFound() *UsersV1GetUserNotFound {
	return &UsersV1GetUserNotFound{}
}

/*UsersV1GetUserNotFound handles this case with default header values.

Resource does not exist.
*/
type UsersV1GetUserNotFound struct {
	Payload interface{}
}

func (o *UsersV1GetUserNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/users][%d] usersV1GetUserNotFound  %+v", 404, o.Payload)
}

func (o *UsersV1GetUserNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UsersV1GetUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersV1GetUserDefault creates a UsersV1GetUserDefault with default headers values
func NewUsersV1GetUserDefault(code int) *UsersV1GetUserDefault {
	return &UsersV1GetUserDefault{
		_statusCode: code,
	}
}

/*UsersV1GetUserDefault handles this case with default header values.

An unexpected error response
*/
type UsersV1GetUserDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the users v1 get user default response
func (o *UsersV1GetUserDefault) Code() int {
	return o._statusCode
}

func (o *UsersV1GetUserDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/users][%d] UsersV1_GetUser default  %+v", o._statusCode, o.Payload)
}

func (o *UsersV1GetUserDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UsersV1GetUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
