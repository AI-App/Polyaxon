// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package dashboards_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// DashboardsV1CreateDashboardReader is a Reader for the DashboardsV1CreateDashboard structure.
type DashboardsV1CreateDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DashboardsV1CreateDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDashboardsV1CreateDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDashboardsV1CreateDashboardNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDashboardsV1CreateDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDashboardsV1CreateDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDashboardsV1CreateDashboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDashboardsV1CreateDashboardOK creates a DashboardsV1CreateDashboardOK with default headers values
func NewDashboardsV1CreateDashboardOK() *DashboardsV1CreateDashboardOK {
	return &DashboardsV1CreateDashboardOK{}
}

/*DashboardsV1CreateDashboardOK handles this case with default header values.

A successful response.
*/
type DashboardsV1CreateDashboardOK struct {
	Payload *service_model.V1Dashboard
}

func (o *DashboardsV1CreateDashboardOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/dashboards][%d] dashboardsV1CreateDashboardOK  %+v", 200, o.Payload)
}

func (o *DashboardsV1CreateDashboardOK) GetPayload() *service_model.V1Dashboard {
	return o.Payload
}

func (o *DashboardsV1CreateDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Dashboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1CreateDashboardNoContent creates a DashboardsV1CreateDashboardNoContent with default headers values
func NewDashboardsV1CreateDashboardNoContent() *DashboardsV1CreateDashboardNoContent {
	return &DashboardsV1CreateDashboardNoContent{}
}

/*DashboardsV1CreateDashboardNoContent handles this case with default header values.

No content.
*/
type DashboardsV1CreateDashboardNoContent struct {
	Payload interface{}
}

func (o *DashboardsV1CreateDashboardNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/dashboards][%d] dashboardsV1CreateDashboardNoContent  %+v", 204, o.Payload)
}

func (o *DashboardsV1CreateDashboardNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *DashboardsV1CreateDashboardNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1CreateDashboardForbidden creates a DashboardsV1CreateDashboardForbidden with default headers values
func NewDashboardsV1CreateDashboardForbidden() *DashboardsV1CreateDashboardForbidden {
	return &DashboardsV1CreateDashboardForbidden{}
}

/*DashboardsV1CreateDashboardForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type DashboardsV1CreateDashboardForbidden struct {
	Payload interface{}
}

func (o *DashboardsV1CreateDashboardForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/dashboards][%d] dashboardsV1CreateDashboardForbidden  %+v", 403, o.Payload)
}

func (o *DashboardsV1CreateDashboardForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DashboardsV1CreateDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1CreateDashboardNotFound creates a DashboardsV1CreateDashboardNotFound with default headers values
func NewDashboardsV1CreateDashboardNotFound() *DashboardsV1CreateDashboardNotFound {
	return &DashboardsV1CreateDashboardNotFound{}
}

/*DashboardsV1CreateDashboardNotFound handles this case with default header values.

Resource does not exist.
*/
type DashboardsV1CreateDashboardNotFound struct {
	Payload interface{}
}

func (o *DashboardsV1CreateDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/dashboards][%d] dashboardsV1CreateDashboardNotFound  %+v", 404, o.Payload)
}

func (o *DashboardsV1CreateDashboardNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *DashboardsV1CreateDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1CreateDashboardDefault creates a DashboardsV1CreateDashboardDefault with default headers values
func NewDashboardsV1CreateDashboardDefault(code int) *DashboardsV1CreateDashboardDefault {
	return &DashboardsV1CreateDashboardDefault{
		_statusCode: code,
	}
}

/*DashboardsV1CreateDashboardDefault handles this case with default header values.

An unexpected error response
*/
type DashboardsV1CreateDashboardDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the dashboards v1 create dashboard default response
func (o *DashboardsV1CreateDashboardDefault) Code() int {
	return o._statusCode
}

func (o *DashboardsV1CreateDashboardDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/dashboards][%d] DashboardsV1_CreateDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *DashboardsV1CreateDashboardDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *DashboardsV1CreateDashboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
