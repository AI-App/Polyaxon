// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package dashboards_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// DashboardsV1DeleteDashboardReader is a Reader for the DashboardsV1DeleteDashboard structure.
type DashboardsV1DeleteDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DashboardsV1DeleteDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDashboardsV1DeleteDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDashboardsV1DeleteDashboardNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDashboardsV1DeleteDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDashboardsV1DeleteDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDashboardsV1DeleteDashboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDashboardsV1DeleteDashboardOK creates a DashboardsV1DeleteDashboardOK with default headers values
func NewDashboardsV1DeleteDashboardOK() *DashboardsV1DeleteDashboardOK {
	return &DashboardsV1DeleteDashboardOK{}
}

/*DashboardsV1DeleteDashboardOK handles this case with default header values.

A successful response.
*/
type DashboardsV1DeleteDashboardOK struct {
}

func (o *DashboardsV1DeleteDashboardOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/dashboards/{uuid}][%d] dashboardsV1DeleteDashboardOK ", 200)
}

func (o *DashboardsV1DeleteDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDashboardsV1DeleteDashboardNoContent creates a DashboardsV1DeleteDashboardNoContent with default headers values
func NewDashboardsV1DeleteDashboardNoContent() *DashboardsV1DeleteDashboardNoContent {
	return &DashboardsV1DeleteDashboardNoContent{}
}

/*DashboardsV1DeleteDashboardNoContent handles this case with default header values.

No content.
*/
type DashboardsV1DeleteDashboardNoContent struct {
	Payload interface{}
}

func (o *DashboardsV1DeleteDashboardNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/dashboards/{uuid}][%d] dashboardsV1DeleteDashboardNoContent  %+v", 204, o.Payload)
}

func (o *DashboardsV1DeleteDashboardNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *DashboardsV1DeleteDashboardNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1DeleteDashboardForbidden creates a DashboardsV1DeleteDashboardForbidden with default headers values
func NewDashboardsV1DeleteDashboardForbidden() *DashboardsV1DeleteDashboardForbidden {
	return &DashboardsV1DeleteDashboardForbidden{}
}

/*DashboardsV1DeleteDashboardForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type DashboardsV1DeleteDashboardForbidden struct {
	Payload interface{}
}

func (o *DashboardsV1DeleteDashboardForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/dashboards/{uuid}][%d] dashboardsV1DeleteDashboardForbidden  %+v", 403, o.Payload)
}

func (o *DashboardsV1DeleteDashboardForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *DashboardsV1DeleteDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1DeleteDashboardNotFound creates a DashboardsV1DeleteDashboardNotFound with default headers values
func NewDashboardsV1DeleteDashboardNotFound() *DashboardsV1DeleteDashboardNotFound {
	return &DashboardsV1DeleteDashboardNotFound{}
}

/*DashboardsV1DeleteDashboardNotFound handles this case with default header values.

Resource does not exist.
*/
type DashboardsV1DeleteDashboardNotFound struct {
	Payload interface{}
}

func (o *DashboardsV1DeleteDashboardNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/dashboards/{uuid}][%d] dashboardsV1DeleteDashboardNotFound  %+v", 404, o.Payload)
}

func (o *DashboardsV1DeleteDashboardNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *DashboardsV1DeleteDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardsV1DeleteDashboardDefault creates a DashboardsV1DeleteDashboardDefault with default headers values
func NewDashboardsV1DeleteDashboardDefault(code int) *DashboardsV1DeleteDashboardDefault {
	return &DashboardsV1DeleteDashboardDefault{
		_statusCode: code,
	}
}

/*DashboardsV1DeleteDashboardDefault handles this case with default header values.

An unexpected error response
*/
type DashboardsV1DeleteDashboardDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the dashboards v1 delete dashboard default response
func (o *DashboardsV1DeleteDashboardDefault) Code() int {
	return o._statusCode
}

func (o *DashboardsV1DeleteDashboardDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/dashboards/{uuid}][%d] DashboardsV1_DeleteDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *DashboardsV1DeleteDashboardDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *DashboardsV1DeleteDashboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
