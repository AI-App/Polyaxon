// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package project_dashboards_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectDashboardsV1ListProjectDashboardNamesReader is a Reader for the ProjectDashboardsV1ListProjectDashboardNames structure.
type ProjectDashboardsV1ListProjectDashboardNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectDashboardsV1ListProjectDashboardNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectDashboardsV1ListProjectDashboardNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectDashboardsV1ListProjectDashboardNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectDashboardsV1ListProjectDashboardNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectDashboardsV1ListProjectDashboardNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectDashboardsV1ListProjectDashboardNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectDashboardsV1ListProjectDashboardNamesOK creates a ProjectDashboardsV1ListProjectDashboardNamesOK with default headers values
func NewProjectDashboardsV1ListProjectDashboardNamesOK() *ProjectDashboardsV1ListProjectDashboardNamesOK {
	return &ProjectDashboardsV1ListProjectDashboardNamesOK{}
}

/*ProjectDashboardsV1ListProjectDashboardNamesOK handles this case with default header values.

A successful response.
*/
type ProjectDashboardsV1ListProjectDashboardNamesOK struct {
	Payload *service_model.V1ListDashboardsResponse
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/dashboards/names][%d] projectDashboardsV1ListProjectDashboardNamesOK  %+v", 200, o.Payload)
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesOK) GetPayload() *service_model.V1ListDashboardsResponse {
	return o.Payload
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListDashboardsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1ListProjectDashboardNamesNoContent creates a ProjectDashboardsV1ListProjectDashboardNamesNoContent with default headers values
func NewProjectDashboardsV1ListProjectDashboardNamesNoContent() *ProjectDashboardsV1ListProjectDashboardNamesNoContent {
	return &ProjectDashboardsV1ListProjectDashboardNamesNoContent{}
}

/*ProjectDashboardsV1ListProjectDashboardNamesNoContent handles this case with default header values.

No content.
*/
type ProjectDashboardsV1ListProjectDashboardNamesNoContent struct {
	Payload interface{}
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/dashboards/names][%d] projectDashboardsV1ListProjectDashboardNamesNoContent  %+v", 204, o.Payload)
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1ListProjectDashboardNamesForbidden creates a ProjectDashboardsV1ListProjectDashboardNamesForbidden with default headers values
func NewProjectDashboardsV1ListProjectDashboardNamesForbidden() *ProjectDashboardsV1ListProjectDashboardNamesForbidden {
	return &ProjectDashboardsV1ListProjectDashboardNamesForbidden{}
}

/*ProjectDashboardsV1ListProjectDashboardNamesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectDashboardsV1ListProjectDashboardNamesForbidden struct {
	Payload interface{}
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/dashboards/names][%d] projectDashboardsV1ListProjectDashboardNamesForbidden  %+v", 403, o.Payload)
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1ListProjectDashboardNamesNotFound creates a ProjectDashboardsV1ListProjectDashboardNamesNotFound with default headers values
func NewProjectDashboardsV1ListProjectDashboardNamesNotFound() *ProjectDashboardsV1ListProjectDashboardNamesNotFound {
	return &ProjectDashboardsV1ListProjectDashboardNamesNotFound{}
}

/*ProjectDashboardsV1ListProjectDashboardNamesNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectDashboardsV1ListProjectDashboardNamesNotFound struct {
	Payload interface{}
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/dashboards/names][%d] projectDashboardsV1ListProjectDashboardNamesNotFound  %+v", 404, o.Payload)
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1ListProjectDashboardNamesDefault creates a ProjectDashboardsV1ListProjectDashboardNamesDefault with default headers values
func NewProjectDashboardsV1ListProjectDashboardNamesDefault(code int) *ProjectDashboardsV1ListProjectDashboardNamesDefault {
	return &ProjectDashboardsV1ListProjectDashboardNamesDefault{
		_statusCode: code,
	}
}

/*ProjectDashboardsV1ListProjectDashboardNamesDefault handles this case with default header values.

An unexpected error response
*/
type ProjectDashboardsV1ListProjectDashboardNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the project dashboards v1 list project dashboard names default response
func (o *ProjectDashboardsV1ListProjectDashboardNamesDefault) Code() int {
	return o._statusCode
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/dashboards/names][%d] ProjectDashboardsV1_ListProjectDashboardNames default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectDashboardsV1ListProjectDashboardNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
