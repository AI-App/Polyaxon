// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package project_dashboards_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectDashboardsV1CreateProjectDashboardReader is a Reader for the ProjectDashboardsV1CreateProjectDashboard structure.
type ProjectDashboardsV1CreateProjectDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectDashboardsV1CreateProjectDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectDashboardsV1CreateProjectDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectDashboardsV1CreateProjectDashboardNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectDashboardsV1CreateProjectDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectDashboardsV1CreateProjectDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectDashboardsV1CreateProjectDashboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectDashboardsV1CreateProjectDashboardOK creates a ProjectDashboardsV1CreateProjectDashboardOK with default headers values
func NewProjectDashboardsV1CreateProjectDashboardOK() *ProjectDashboardsV1CreateProjectDashboardOK {
	return &ProjectDashboardsV1CreateProjectDashboardOK{}
}

/*ProjectDashboardsV1CreateProjectDashboardOK handles this case with default header values.

A successful response.
*/
type ProjectDashboardsV1CreateProjectDashboardOK struct {
	Payload *service_model.V1Dashboard
}

func (o *ProjectDashboardsV1CreateProjectDashboardOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/dashboards][%d] projectDashboardsV1CreateProjectDashboardOK  %+v", 200, o.Payload)
}

func (o *ProjectDashboardsV1CreateProjectDashboardOK) GetPayload() *service_model.V1Dashboard {
	return o.Payload
}

func (o *ProjectDashboardsV1CreateProjectDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Dashboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1CreateProjectDashboardNoContent creates a ProjectDashboardsV1CreateProjectDashboardNoContent with default headers values
func NewProjectDashboardsV1CreateProjectDashboardNoContent() *ProjectDashboardsV1CreateProjectDashboardNoContent {
	return &ProjectDashboardsV1CreateProjectDashboardNoContent{}
}

/*ProjectDashboardsV1CreateProjectDashboardNoContent handles this case with default header values.

No content.
*/
type ProjectDashboardsV1CreateProjectDashboardNoContent struct {
	Payload interface{}
}

func (o *ProjectDashboardsV1CreateProjectDashboardNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/dashboards][%d] projectDashboardsV1CreateProjectDashboardNoContent  %+v", 204, o.Payload)
}

func (o *ProjectDashboardsV1CreateProjectDashboardNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectDashboardsV1CreateProjectDashboardNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1CreateProjectDashboardForbidden creates a ProjectDashboardsV1CreateProjectDashboardForbidden with default headers values
func NewProjectDashboardsV1CreateProjectDashboardForbidden() *ProjectDashboardsV1CreateProjectDashboardForbidden {
	return &ProjectDashboardsV1CreateProjectDashboardForbidden{}
}

/*ProjectDashboardsV1CreateProjectDashboardForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectDashboardsV1CreateProjectDashboardForbidden struct {
	Payload interface{}
}

func (o *ProjectDashboardsV1CreateProjectDashboardForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/dashboards][%d] projectDashboardsV1CreateProjectDashboardForbidden  %+v", 403, o.Payload)
}

func (o *ProjectDashboardsV1CreateProjectDashboardForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectDashboardsV1CreateProjectDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1CreateProjectDashboardNotFound creates a ProjectDashboardsV1CreateProjectDashboardNotFound with default headers values
func NewProjectDashboardsV1CreateProjectDashboardNotFound() *ProjectDashboardsV1CreateProjectDashboardNotFound {
	return &ProjectDashboardsV1CreateProjectDashboardNotFound{}
}

/*ProjectDashboardsV1CreateProjectDashboardNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectDashboardsV1CreateProjectDashboardNotFound struct {
	Payload interface{}
}

func (o *ProjectDashboardsV1CreateProjectDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/dashboards][%d] projectDashboardsV1CreateProjectDashboardNotFound  %+v", 404, o.Payload)
}

func (o *ProjectDashboardsV1CreateProjectDashboardNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectDashboardsV1CreateProjectDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDashboardsV1CreateProjectDashboardDefault creates a ProjectDashboardsV1CreateProjectDashboardDefault with default headers values
func NewProjectDashboardsV1CreateProjectDashboardDefault(code int) *ProjectDashboardsV1CreateProjectDashboardDefault {
	return &ProjectDashboardsV1CreateProjectDashboardDefault{
		_statusCode: code,
	}
}

/*ProjectDashboardsV1CreateProjectDashboardDefault handles this case with default header values.

An unexpected error response
*/
type ProjectDashboardsV1CreateProjectDashboardDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the project dashboards v1 create project dashboard default response
func (o *ProjectDashboardsV1CreateProjectDashboardDefault) Code() int {
	return o._statusCode
}

func (o *ProjectDashboardsV1CreateProjectDashboardDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{owner}/{project}/dashboards][%d] ProjectDashboardsV1_CreateProjectDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectDashboardsV1CreateProjectDashboardDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectDashboardsV1CreateProjectDashboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
