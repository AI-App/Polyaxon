// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package queues_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// QueuesV1ListQueueNamesReader is a Reader for the QueuesV1ListQueueNames structure.
type QueuesV1ListQueueNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueuesV1ListQueueNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueuesV1ListQueueNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewQueuesV1ListQueueNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewQueuesV1ListQueueNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewQueuesV1ListQueueNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewQueuesV1ListQueueNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQueuesV1ListQueueNamesOK creates a QueuesV1ListQueueNamesOK with default headers values
func NewQueuesV1ListQueueNamesOK() *QueuesV1ListQueueNamesOK {
	return &QueuesV1ListQueueNamesOK{}
}

/*QueuesV1ListQueueNamesOK handles this case with default header values.

A successful response.
*/
type QueuesV1ListQueueNamesOK struct {
	Payload *service_model.V1ListQueuesResponse
}

func (o *QueuesV1ListQueueNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{agent}/queues/names][%d] queuesV1ListQueueNamesOK  %+v", 200, o.Payload)
}

func (o *QueuesV1ListQueueNamesOK) GetPayload() *service_model.V1ListQueuesResponse {
	return o.Payload
}

func (o *QueuesV1ListQueueNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListQueuesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1ListQueueNamesNoContent creates a QueuesV1ListQueueNamesNoContent with default headers values
func NewQueuesV1ListQueueNamesNoContent() *QueuesV1ListQueueNamesNoContent {
	return &QueuesV1ListQueueNamesNoContent{}
}

/*QueuesV1ListQueueNamesNoContent handles this case with default header values.

No content.
*/
type QueuesV1ListQueueNamesNoContent struct {
	Payload interface{}
}

func (o *QueuesV1ListQueueNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{agent}/queues/names][%d] queuesV1ListQueueNamesNoContent  %+v", 204, o.Payload)
}

func (o *QueuesV1ListQueueNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *QueuesV1ListQueueNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1ListQueueNamesForbidden creates a QueuesV1ListQueueNamesForbidden with default headers values
func NewQueuesV1ListQueueNamesForbidden() *QueuesV1ListQueueNamesForbidden {
	return &QueuesV1ListQueueNamesForbidden{}
}

/*QueuesV1ListQueueNamesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type QueuesV1ListQueueNamesForbidden struct {
	Payload interface{}
}

func (o *QueuesV1ListQueueNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{agent}/queues/names][%d] queuesV1ListQueueNamesForbidden  %+v", 403, o.Payload)
}

func (o *QueuesV1ListQueueNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *QueuesV1ListQueueNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1ListQueueNamesNotFound creates a QueuesV1ListQueueNamesNotFound with default headers values
func NewQueuesV1ListQueueNamesNotFound() *QueuesV1ListQueueNamesNotFound {
	return &QueuesV1ListQueueNamesNotFound{}
}

/*QueuesV1ListQueueNamesNotFound handles this case with default header values.

Resource does not exist.
*/
type QueuesV1ListQueueNamesNotFound struct {
	Payload interface{}
}

func (o *QueuesV1ListQueueNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{agent}/queues/names][%d] queuesV1ListQueueNamesNotFound  %+v", 404, o.Payload)
}

func (o *QueuesV1ListQueueNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *QueuesV1ListQueueNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1ListQueueNamesDefault creates a QueuesV1ListQueueNamesDefault with default headers values
func NewQueuesV1ListQueueNamesDefault(code int) *QueuesV1ListQueueNamesDefault {
	return &QueuesV1ListQueueNamesDefault{
		_statusCode: code,
	}
}

/*QueuesV1ListQueueNamesDefault handles this case with default header values.

An unexpected error response
*/
type QueuesV1ListQueueNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the queues v1 list queue names default response
func (o *QueuesV1ListQueueNamesDefault) Code() int {
	return o._statusCode
}

func (o *QueuesV1ListQueueNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/agents/{agent}/queues/names][%d] QueuesV1_ListQueueNames default  %+v", o._statusCode, o.Payload)
}

func (o *QueuesV1ListQueueNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *QueuesV1ListQueueNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
