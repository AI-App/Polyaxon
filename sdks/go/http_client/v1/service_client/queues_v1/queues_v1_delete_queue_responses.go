// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package queues_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// QueuesV1DeleteQueueReader is a Reader for the QueuesV1DeleteQueue structure.
type QueuesV1DeleteQueueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueuesV1DeleteQueueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueuesV1DeleteQueueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewQueuesV1DeleteQueueNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewQueuesV1DeleteQueueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewQueuesV1DeleteQueueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewQueuesV1DeleteQueueDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQueuesV1DeleteQueueOK creates a QueuesV1DeleteQueueOK with default headers values
func NewQueuesV1DeleteQueueOK() *QueuesV1DeleteQueueOK {
	return &QueuesV1DeleteQueueOK{}
}

/*QueuesV1DeleteQueueOK handles this case with default header values.

A successful response.
*/
type QueuesV1DeleteQueueOK struct {
}

func (o *QueuesV1DeleteQueueOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/agents/{agent}/queues/{uuid}][%d] queuesV1DeleteQueueOK ", 200)
}

func (o *QueuesV1DeleteQueueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewQueuesV1DeleteQueueNoContent creates a QueuesV1DeleteQueueNoContent with default headers values
func NewQueuesV1DeleteQueueNoContent() *QueuesV1DeleteQueueNoContent {
	return &QueuesV1DeleteQueueNoContent{}
}

/*QueuesV1DeleteQueueNoContent handles this case with default header values.

No content.
*/
type QueuesV1DeleteQueueNoContent struct {
	Payload interface{}
}

func (o *QueuesV1DeleteQueueNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/agents/{agent}/queues/{uuid}][%d] queuesV1DeleteQueueNoContent  %+v", 204, o.Payload)
}

func (o *QueuesV1DeleteQueueNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *QueuesV1DeleteQueueNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1DeleteQueueForbidden creates a QueuesV1DeleteQueueForbidden with default headers values
func NewQueuesV1DeleteQueueForbidden() *QueuesV1DeleteQueueForbidden {
	return &QueuesV1DeleteQueueForbidden{}
}

/*QueuesV1DeleteQueueForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type QueuesV1DeleteQueueForbidden struct {
	Payload interface{}
}

func (o *QueuesV1DeleteQueueForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/agents/{agent}/queues/{uuid}][%d] queuesV1DeleteQueueForbidden  %+v", 403, o.Payload)
}

func (o *QueuesV1DeleteQueueForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *QueuesV1DeleteQueueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1DeleteQueueNotFound creates a QueuesV1DeleteQueueNotFound with default headers values
func NewQueuesV1DeleteQueueNotFound() *QueuesV1DeleteQueueNotFound {
	return &QueuesV1DeleteQueueNotFound{}
}

/*QueuesV1DeleteQueueNotFound handles this case with default header values.

Resource does not exist.
*/
type QueuesV1DeleteQueueNotFound struct {
	Payload interface{}
}

func (o *QueuesV1DeleteQueueNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/agents/{agent}/queues/{uuid}][%d] queuesV1DeleteQueueNotFound  %+v", 404, o.Payload)
}

func (o *QueuesV1DeleteQueueNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *QueuesV1DeleteQueueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueuesV1DeleteQueueDefault creates a QueuesV1DeleteQueueDefault with default headers values
func NewQueuesV1DeleteQueueDefault(code int) *QueuesV1DeleteQueueDefault {
	return &QueuesV1DeleteQueueDefault{
		_statusCode: code,
	}
}

/*QueuesV1DeleteQueueDefault handles this case with default header values.

An unexpected error response
*/
type QueuesV1DeleteQueueDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the queues v1 delete queue default response
func (o *QueuesV1DeleteQueueDefault) Code() int {
	return o._statusCode
}

func (o *QueuesV1DeleteQueueDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/agents/{agent}/queues/{uuid}][%d] QueuesV1_DeleteQueue default  %+v", o._statusCode, o.Payload)
}

func (o *QueuesV1DeleteQueueDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *QueuesV1DeleteQueueDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
