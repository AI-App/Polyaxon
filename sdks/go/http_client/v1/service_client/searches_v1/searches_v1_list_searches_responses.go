// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package searches_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// SearchesV1ListSearchesReader is a Reader for the SearchesV1ListSearches structure.
type SearchesV1ListSearchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchesV1ListSearchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchesV1ListSearchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSearchesV1ListSearchesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSearchesV1ListSearchesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchesV1ListSearchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSearchesV1ListSearchesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchesV1ListSearchesOK creates a SearchesV1ListSearchesOK with default headers values
func NewSearchesV1ListSearchesOK() *SearchesV1ListSearchesOK {
	return &SearchesV1ListSearchesOK{}
}

/*SearchesV1ListSearchesOK handles this case with default header values.

A successful response.
*/
type SearchesV1ListSearchesOK struct {
	Payload *service_model.V1ListSearchesResponse
}

func (o *SearchesV1ListSearchesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches][%d] searchesV1ListSearchesOK  %+v", 200, o.Payload)
}

func (o *SearchesV1ListSearchesOK) GetPayload() *service_model.V1ListSearchesResponse {
	return o.Payload
}

func (o *SearchesV1ListSearchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListSearchesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1ListSearchesNoContent creates a SearchesV1ListSearchesNoContent with default headers values
func NewSearchesV1ListSearchesNoContent() *SearchesV1ListSearchesNoContent {
	return &SearchesV1ListSearchesNoContent{}
}

/*SearchesV1ListSearchesNoContent handles this case with default header values.

No content.
*/
type SearchesV1ListSearchesNoContent struct {
	Payload interface{}
}

func (o *SearchesV1ListSearchesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches][%d] searchesV1ListSearchesNoContent  %+v", 204, o.Payload)
}

func (o *SearchesV1ListSearchesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchesV1ListSearchesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1ListSearchesForbidden creates a SearchesV1ListSearchesForbidden with default headers values
func NewSearchesV1ListSearchesForbidden() *SearchesV1ListSearchesForbidden {
	return &SearchesV1ListSearchesForbidden{}
}

/*SearchesV1ListSearchesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type SearchesV1ListSearchesForbidden struct {
	Payload interface{}
}

func (o *SearchesV1ListSearchesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches][%d] searchesV1ListSearchesForbidden  %+v", 403, o.Payload)
}

func (o *SearchesV1ListSearchesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchesV1ListSearchesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1ListSearchesNotFound creates a SearchesV1ListSearchesNotFound with default headers values
func NewSearchesV1ListSearchesNotFound() *SearchesV1ListSearchesNotFound {
	return &SearchesV1ListSearchesNotFound{}
}

/*SearchesV1ListSearchesNotFound handles this case with default header values.

Resource does not exist.
*/
type SearchesV1ListSearchesNotFound struct {
	Payload interface{}
}

func (o *SearchesV1ListSearchesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches][%d] searchesV1ListSearchesNotFound  %+v", 404, o.Payload)
}

func (o *SearchesV1ListSearchesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchesV1ListSearchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1ListSearchesDefault creates a SearchesV1ListSearchesDefault with default headers values
func NewSearchesV1ListSearchesDefault(code int) *SearchesV1ListSearchesDefault {
	return &SearchesV1ListSearchesDefault{
		_statusCode: code,
	}
}

/*SearchesV1ListSearchesDefault handles this case with default header values.

An unexpected error response
*/
type SearchesV1ListSearchesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the searches v1 list searches default response
func (o *SearchesV1ListSearchesDefault) Code() int {
	return o._statusCode
}

func (o *SearchesV1ListSearchesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches][%d] SearchesV1_ListSearches default  %+v", o._statusCode, o.Payload)
}

func (o *SearchesV1ListSearchesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *SearchesV1ListSearchesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
