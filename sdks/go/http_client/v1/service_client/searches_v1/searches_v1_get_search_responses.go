// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package searches_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// SearchesV1GetSearchReader is a Reader for the SearchesV1GetSearch structure.
type SearchesV1GetSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchesV1GetSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchesV1GetSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSearchesV1GetSearchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSearchesV1GetSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchesV1GetSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSearchesV1GetSearchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchesV1GetSearchOK creates a SearchesV1GetSearchOK with default headers values
func NewSearchesV1GetSearchOK() *SearchesV1GetSearchOK {
	return &SearchesV1GetSearchOK{}
}

/*SearchesV1GetSearchOK handles this case with default header values.

A successful response.
*/
type SearchesV1GetSearchOK struct {
	Payload *service_model.V1Search
}

func (o *SearchesV1GetSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] searchesV1GetSearchOK  %+v", 200, o.Payload)
}

func (o *SearchesV1GetSearchOK) GetPayload() *service_model.V1Search {
	return o.Payload
}

func (o *SearchesV1GetSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Search)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1GetSearchNoContent creates a SearchesV1GetSearchNoContent with default headers values
func NewSearchesV1GetSearchNoContent() *SearchesV1GetSearchNoContent {
	return &SearchesV1GetSearchNoContent{}
}

/*SearchesV1GetSearchNoContent handles this case with default header values.

No content.
*/
type SearchesV1GetSearchNoContent struct {
	Payload interface{}
}

func (o *SearchesV1GetSearchNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] searchesV1GetSearchNoContent  %+v", 204, o.Payload)
}

func (o *SearchesV1GetSearchNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchesV1GetSearchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1GetSearchForbidden creates a SearchesV1GetSearchForbidden with default headers values
func NewSearchesV1GetSearchForbidden() *SearchesV1GetSearchForbidden {
	return &SearchesV1GetSearchForbidden{}
}

/*SearchesV1GetSearchForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type SearchesV1GetSearchForbidden struct {
	Payload interface{}
}

func (o *SearchesV1GetSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] searchesV1GetSearchForbidden  %+v", 403, o.Payload)
}

func (o *SearchesV1GetSearchForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchesV1GetSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1GetSearchNotFound creates a SearchesV1GetSearchNotFound with default headers values
func NewSearchesV1GetSearchNotFound() *SearchesV1GetSearchNotFound {
	return &SearchesV1GetSearchNotFound{}
}

/*SearchesV1GetSearchNotFound handles this case with default header values.

Resource does not exist.
*/
type SearchesV1GetSearchNotFound struct {
	Payload interface{}
}

func (o *SearchesV1GetSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] searchesV1GetSearchNotFound  %+v", 404, o.Payload)
}

func (o *SearchesV1GetSearchNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchesV1GetSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchesV1GetSearchDefault creates a SearchesV1GetSearchDefault with default headers values
func NewSearchesV1GetSearchDefault(code int) *SearchesV1GetSearchDefault {
	return &SearchesV1GetSearchDefault{
		_statusCode: code,
	}
}

/*SearchesV1GetSearchDefault handles this case with default header values.

An unexpected error response
*/
type SearchesV1GetSearchDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the searches v1 get search default response
func (o *SearchesV1GetSearchDefault) Code() int {
	return o._statusCode
}

func (o *SearchesV1GetSearchDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/searches/{uuid}][%d] SearchesV1_GetSearch default  %+v", o._statusCode, o.Payload)
}

func (o *SearchesV1GetSearchDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *SearchesV1GetSearchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
