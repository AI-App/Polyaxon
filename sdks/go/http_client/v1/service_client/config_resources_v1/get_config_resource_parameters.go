// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package config_resources_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetConfigResourceParams creates a new GetConfigResourceParams object
// with the default values initialized.
func NewGetConfigResourceParams() *GetConfigResourceParams {
	var ()
	return &GetConfigResourceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConfigResourceParamsWithTimeout creates a new GetConfigResourceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConfigResourceParamsWithTimeout(timeout time.Duration) *GetConfigResourceParams {
	var ()
	return &GetConfigResourceParams{

		timeout: timeout,
	}
}

// NewGetConfigResourceParamsWithContext creates a new GetConfigResourceParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetConfigResourceParamsWithContext(ctx context.Context) *GetConfigResourceParams {
	var ()
	return &GetConfigResourceParams{

		Context: ctx,
	}
}

// NewGetConfigResourceParamsWithHTTPClient creates a new GetConfigResourceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetConfigResourceParamsWithHTTPClient(client *http.Client) *GetConfigResourceParams {
	var ()
	return &GetConfigResourceParams{
		HTTPClient: client,
	}
}

/*GetConfigResourceParams contains all the parameters to send to the API endpoint
for the get config resource operation typically these are written to a http.Request
*/
type GetConfigResourceParams struct {

	/*Owner
	  Owner of the namespace

	*/
	Owner string
	/*UUID
	  Unique integer identifier of the entity

	*/
	UUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get config resource params
func (o *GetConfigResourceParams) WithTimeout(timeout time.Duration) *GetConfigResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get config resource params
func (o *GetConfigResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get config resource params
func (o *GetConfigResourceParams) WithContext(ctx context.Context) *GetConfigResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get config resource params
func (o *GetConfigResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get config resource params
func (o *GetConfigResourceParams) WithHTTPClient(client *http.Client) *GetConfigResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get config resource params
func (o *GetConfigResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOwner adds the owner to the get config resource params
func (o *GetConfigResourceParams) WithOwner(owner string) *GetConfigResourceParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the get config resource params
func (o *GetConfigResourceParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithUUID adds the uuid to the get config resource params
func (o *GetConfigResourceParams) WithUUID(uuid string) *GetConfigResourceParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the get config resource params
func (o *GetConfigResourceParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *GetConfigResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
