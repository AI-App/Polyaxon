// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package config_resources_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	service_model "github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetConfigResourceReader is a Reader for the GetConfigResource structure.
type GetConfigResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetConfigResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetConfigResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConfigResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConfigResourceOK creates a GetConfigResourceOK with default headers values
func NewGetConfigResourceOK() *GetConfigResourceOK {
	return &GetConfigResourceOK{}
}

/*GetConfigResourceOK handles this case with default header values.

A successful response.
*/
type GetConfigResourceOK struct {
	Payload *service_model.V1ConfigResource
}

func (o *GetConfigResourceOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/config_resources/{uuid}][%d] getConfigResourceOK  %+v", 200, o.Payload)
}

func (o *GetConfigResourceOK) GetPayload() *service_model.V1ConfigResource {
	return o.Payload
}

func (o *GetConfigResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ConfigResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigResourceNoContent creates a GetConfigResourceNoContent with default headers values
func NewGetConfigResourceNoContent() *GetConfigResourceNoContent {
	return &GetConfigResourceNoContent{}
}

/*GetConfigResourceNoContent handles this case with default header values.

No content.
*/
type GetConfigResourceNoContent struct {
	Payload interface{}
}

func (o *GetConfigResourceNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/config_resources/{uuid}][%d] getConfigResourceNoContent  %+v", 204, o.Payload)
}

func (o *GetConfigResourceNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConfigResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigResourceForbidden creates a GetConfigResourceForbidden with default headers values
func NewGetConfigResourceForbidden() *GetConfigResourceForbidden {
	return &GetConfigResourceForbidden{}
}

/*GetConfigResourceForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type GetConfigResourceForbidden struct {
	Payload interface{}
}

func (o *GetConfigResourceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/config_resources/{uuid}][%d] getConfigResourceForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigResourceForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConfigResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigResourceNotFound creates a GetConfigResourceNotFound with default headers values
func NewGetConfigResourceNotFound() *GetConfigResourceNotFound {
	return &GetConfigResourceNotFound{}
}

/*GetConfigResourceNotFound handles this case with default header values.

Resource does not exist.
*/
type GetConfigResourceNotFound struct {
	Payload interface{}
}

func (o *GetConfigResourceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/config_resources/{uuid}][%d] getConfigResourceNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigResourceNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConfigResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
