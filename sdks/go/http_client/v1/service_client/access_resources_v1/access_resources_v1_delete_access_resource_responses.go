// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package access_resources_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// AccessResourcesV1DeleteAccessResourceReader is a Reader for the AccessResourcesV1DeleteAccessResource structure.
type AccessResourcesV1DeleteAccessResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccessResourcesV1DeleteAccessResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccessResourcesV1DeleteAccessResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewAccessResourcesV1DeleteAccessResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAccessResourcesV1DeleteAccessResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccessResourcesV1DeleteAccessResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAccessResourcesV1DeleteAccessResourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccessResourcesV1DeleteAccessResourceOK creates a AccessResourcesV1DeleteAccessResourceOK with default headers values
func NewAccessResourcesV1DeleteAccessResourceOK() *AccessResourcesV1DeleteAccessResourceOK {
	return &AccessResourcesV1DeleteAccessResourceOK{}
}

/*AccessResourcesV1DeleteAccessResourceOK handles this case with default header values.

A successful response.
*/
type AccessResourcesV1DeleteAccessResourceOK struct {
}

func (o *AccessResourcesV1DeleteAccessResourceOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/access_resources/{uuid}][%d] accessResourcesV1DeleteAccessResourceOK ", 200)
}

func (o *AccessResourcesV1DeleteAccessResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccessResourcesV1DeleteAccessResourceNoContent creates a AccessResourcesV1DeleteAccessResourceNoContent with default headers values
func NewAccessResourcesV1DeleteAccessResourceNoContent() *AccessResourcesV1DeleteAccessResourceNoContent {
	return &AccessResourcesV1DeleteAccessResourceNoContent{}
}

/*AccessResourcesV1DeleteAccessResourceNoContent handles this case with default header values.

No content.
*/
type AccessResourcesV1DeleteAccessResourceNoContent struct {
	Payload interface{}
}

func (o *AccessResourcesV1DeleteAccessResourceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/access_resources/{uuid}][%d] accessResourcesV1DeleteAccessResourceNoContent  %+v", 204, o.Payload)
}

func (o *AccessResourcesV1DeleteAccessResourceNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessResourcesV1DeleteAccessResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1DeleteAccessResourceForbidden creates a AccessResourcesV1DeleteAccessResourceForbidden with default headers values
func NewAccessResourcesV1DeleteAccessResourceForbidden() *AccessResourcesV1DeleteAccessResourceForbidden {
	return &AccessResourcesV1DeleteAccessResourceForbidden{}
}

/*AccessResourcesV1DeleteAccessResourceForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type AccessResourcesV1DeleteAccessResourceForbidden struct {
	Payload interface{}
}

func (o *AccessResourcesV1DeleteAccessResourceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/access_resources/{uuid}][%d] accessResourcesV1DeleteAccessResourceForbidden  %+v", 403, o.Payload)
}

func (o *AccessResourcesV1DeleteAccessResourceForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessResourcesV1DeleteAccessResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1DeleteAccessResourceNotFound creates a AccessResourcesV1DeleteAccessResourceNotFound with default headers values
func NewAccessResourcesV1DeleteAccessResourceNotFound() *AccessResourcesV1DeleteAccessResourceNotFound {
	return &AccessResourcesV1DeleteAccessResourceNotFound{}
}

/*AccessResourcesV1DeleteAccessResourceNotFound handles this case with default header values.

Resource does not exist.
*/
type AccessResourcesV1DeleteAccessResourceNotFound struct {
	Payload interface{}
}

func (o *AccessResourcesV1DeleteAccessResourceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/access_resources/{uuid}][%d] accessResourcesV1DeleteAccessResourceNotFound  %+v", 404, o.Payload)
}

func (o *AccessResourcesV1DeleteAccessResourceNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessResourcesV1DeleteAccessResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1DeleteAccessResourceDefault creates a AccessResourcesV1DeleteAccessResourceDefault with default headers values
func NewAccessResourcesV1DeleteAccessResourceDefault(code int) *AccessResourcesV1DeleteAccessResourceDefault {
	return &AccessResourcesV1DeleteAccessResourceDefault{
		_statusCode: code,
	}
}

/*AccessResourcesV1DeleteAccessResourceDefault handles this case with default header values.

An unexpected error response
*/
type AccessResourcesV1DeleteAccessResourceDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the access resources v1 delete access resource default response
func (o *AccessResourcesV1DeleteAccessResourceDefault) Code() int {
	return o._statusCode
}

func (o *AccessResourcesV1DeleteAccessResourceDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/access_resources/{uuid}][%d] AccessResourcesV1_DeleteAccessResource default  %+v", o._statusCode, o.Payload)
}

func (o *AccessResourcesV1DeleteAccessResourceDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *AccessResourcesV1DeleteAccessResourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
