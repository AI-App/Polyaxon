// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package access_resources_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// AccessResourcesV1CreateAccessResourceReader is a Reader for the AccessResourcesV1CreateAccessResource structure.
type AccessResourcesV1CreateAccessResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccessResourcesV1CreateAccessResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccessResourcesV1CreateAccessResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewAccessResourcesV1CreateAccessResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAccessResourcesV1CreateAccessResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccessResourcesV1CreateAccessResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAccessResourcesV1CreateAccessResourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccessResourcesV1CreateAccessResourceOK creates a AccessResourcesV1CreateAccessResourceOK with default headers values
func NewAccessResourcesV1CreateAccessResourceOK() *AccessResourcesV1CreateAccessResourceOK {
	return &AccessResourcesV1CreateAccessResourceOK{}
}

/*AccessResourcesV1CreateAccessResourceOK handles this case with default header values.

A successful response.
*/
type AccessResourcesV1CreateAccessResourceOK struct {
	Payload *service_model.V1AccessResource
}

func (o *AccessResourcesV1CreateAccessResourceOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/access_resources][%d] accessResourcesV1CreateAccessResourceOK  %+v", 200, o.Payload)
}

func (o *AccessResourcesV1CreateAccessResourceOK) GetPayload() *service_model.V1AccessResource {
	return o.Payload
}

func (o *AccessResourcesV1CreateAccessResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1AccessResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1CreateAccessResourceNoContent creates a AccessResourcesV1CreateAccessResourceNoContent with default headers values
func NewAccessResourcesV1CreateAccessResourceNoContent() *AccessResourcesV1CreateAccessResourceNoContent {
	return &AccessResourcesV1CreateAccessResourceNoContent{}
}

/*AccessResourcesV1CreateAccessResourceNoContent handles this case with default header values.

No content.
*/
type AccessResourcesV1CreateAccessResourceNoContent struct {
	Payload interface{}
}

func (o *AccessResourcesV1CreateAccessResourceNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/access_resources][%d] accessResourcesV1CreateAccessResourceNoContent  %+v", 204, o.Payload)
}

func (o *AccessResourcesV1CreateAccessResourceNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessResourcesV1CreateAccessResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1CreateAccessResourceForbidden creates a AccessResourcesV1CreateAccessResourceForbidden with default headers values
func NewAccessResourcesV1CreateAccessResourceForbidden() *AccessResourcesV1CreateAccessResourceForbidden {
	return &AccessResourcesV1CreateAccessResourceForbidden{}
}

/*AccessResourcesV1CreateAccessResourceForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type AccessResourcesV1CreateAccessResourceForbidden struct {
	Payload interface{}
}

func (o *AccessResourcesV1CreateAccessResourceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/access_resources][%d] accessResourcesV1CreateAccessResourceForbidden  %+v", 403, o.Payload)
}

func (o *AccessResourcesV1CreateAccessResourceForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessResourcesV1CreateAccessResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1CreateAccessResourceNotFound creates a AccessResourcesV1CreateAccessResourceNotFound with default headers values
func NewAccessResourcesV1CreateAccessResourceNotFound() *AccessResourcesV1CreateAccessResourceNotFound {
	return &AccessResourcesV1CreateAccessResourceNotFound{}
}

/*AccessResourcesV1CreateAccessResourceNotFound handles this case with default header values.

Resource does not exist.
*/
type AccessResourcesV1CreateAccessResourceNotFound struct {
	Payload interface{}
}

func (o *AccessResourcesV1CreateAccessResourceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/access_resources][%d] accessResourcesV1CreateAccessResourceNotFound  %+v", 404, o.Payload)
}

func (o *AccessResourcesV1CreateAccessResourceNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessResourcesV1CreateAccessResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessResourcesV1CreateAccessResourceDefault creates a AccessResourcesV1CreateAccessResourceDefault with default headers values
func NewAccessResourcesV1CreateAccessResourceDefault(code int) *AccessResourcesV1CreateAccessResourceDefault {
	return &AccessResourcesV1CreateAccessResourceDefault{
		_statusCode: code,
	}
}

/*AccessResourcesV1CreateAccessResourceDefault handles this case with default header values.

An unexpected error response
*/
type AccessResourcesV1CreateAccessResourceDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the access resources v1 create access resource default response
func (o *AccessResourcesV1CreateAccessResourceDefault) Code() int {
	return o._statusCode
}

func (o *AccessResourcesV1CreateAccessResourceDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/orgs/{owner}/access_resources][%d] AccessResourcesV1_CreateAccessResource default  %+v", o._statusCode, o.Payload)
}

func (o *AccessResourcesV1CreateAccessResourceDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *AccessResourcesV1CreateAccessResourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
