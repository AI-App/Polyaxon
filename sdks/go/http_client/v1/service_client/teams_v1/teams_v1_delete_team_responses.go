// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// TeamsV1DeleteTeamReader is a Reader for the TeamsV1DeleteTeam structure.
type TeamsV1DeleteTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamsV1DeleteTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamsV1DeleteTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewTeamsV1DeleteTeamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTeamsV1DeleteTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTeamsV1DeleteTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTeamsV1DeleteTeamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTeamsV1DeleteTeamOK creates a TeamsV1DeleteTeamOK with default headers values
func NewTeamsV1DeleteTeamOK() *TeamsV1DeleteTeamOK {
	return &TeamsV1DeleteTeamOK{}
}

/*TeamsV1DeleteTeamOK handles this case with default header values.

A successful response.
*/
type TeamsV1DeleteTeamOK struct {
}

func (o *TeamsV1DeleteTeamOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1DeleteTeamOK ", 200)
}

func (o *TeamsV1DeleteTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTeamsV1DeleteTeamNoContent creates a TeamsV1DeleteTeamNoContent with default headers values
func NewTeamsV1DeleteTeamNoContent() *TeamsV1DeleteTeamNoContent {
	return &TeamsV1DeleteTeamNoContent{}
}

/*TeamsV1DeleteTeamNoContent handles this case with default header values.

No content.
*/
type TeamsV1DeleteTeamNoContent struct {
	Payload interface{}
}

func (o *TeamsV1DeleteTeamNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1DeleteTeamNoContent  %+v", 204, o.Payload)
}

func (o *TeamsV1DeleteTeamNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1DeleteTeamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1DeleteTeamForbidden creates a TeamsV1DeleteTeamForbidden with default headers values
func NewTeamsV1DeleteTeamForbidden() *TeamsV1DeleteTeamForbidden {
	return &TeamsV1DeleteTeamForbidden{}
}

/*TeamsV1DeleteTeamForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type TeamsV1DeleteTeamForbidden struct {
	Payload interface{}
}

func (o *TeamsV1DeleteTeamForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1DeleteTeamForbidden  %+v", 403, o.Payload)
}

func (o *TeamsV1DeleteTeamForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1DeleteTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1DeleteTeamNotFound creates a TeamsV1DeleteTeamNotFound with default headers values
func NewTeamsV1DeleteTeamNotFound() *TeamsV1DeleteTeamNotFound {
	return &TeamsV1DeleteTeamNotFound{}
}

/*TeamsV1DeleteTeamNotFound handles this case with default header values.

Resource does not exist.
*/
type TeamsV1DeleteTeamNotFound struct {
	Payload interface{}
}

func (o *TeamsV1DeleteTeamNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1DeleteTeamNotFound  %+v", 404, o.Payload)
}

func (o *TeamsV1DeleteTeamNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1DeleteTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1DeleteTeamDefault creates a TeamsV1DeleteTeamDefault with default headers values
func NewTeamsV1DeleteTeamDefault(code int) *TeamsV1DeleteTeamDefault {
	return &TeamsV1DeleteTeamDefault{
		_statusCode: code,
	}
}

/*TeamsV1DeleteTeamDefault handles this case with default header values.

An unexpected error response
*/
type TeamsV1DeleteTeamDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the teams v1 delete team default response
func (o *TeamsV1DeleteTeamDefault) Code() int {
	return o._statusCode
}

func (o *TeamsV1DeleteTeamDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/teams/{team}][%d] TeamsV1_DeleteTeam default  %+v", o._statusCode, o.Payload)
}

func (o *TeamsV1DeleteTeamDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *TeamsV1DeleteTeamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
