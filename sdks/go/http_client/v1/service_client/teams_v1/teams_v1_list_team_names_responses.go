// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// TeamsV1ListTeamNamesReader is a Reader for the TeamsV1ListTeamNames structure.
type TeamsV1ListTeamNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamsV1ListTeamNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamsV1ListTeamNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewTeamsV1ListTeamNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTeamsV1ListTeamNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTeamsV1ListTeamNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTeamsV1ListTeamNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTeamsV1ListTeamNamesOK creates a TeamsV1ListTeamNamesOK with default headers values
func NewTeamsV1ListTeamNamesOK() *TeamsV1ListTeamNamesOK {
	return &TeamsV1ListTeamNamesOK{}
}

/*TeamsV1ListTeamNamesOK handles this case with default header values.

A successful response.
*/
type TeamsV1ListTeamNamesOK struct {
	Payload *service_model.V1ListTeamsResponse
}

func (o *TeamsV1ListTeamNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/names][%d] teamsV1ListTeamNamesOK  %+v", 200, o.Payload)
}

func (o *TeamsV1ListTeamNamesOK) GetPayload() *service_model.V1ListTeamsResponse {
	return o.Payload
}

func (o *TeamsV1ListTeamNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListTeamsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1ListTeamNamesNoContent creates a TeamsV1ListTeamNamesNoContent with default headers values
func NewTeamsV1ListTeamNamesNoContent() *TeamsV1ListTeamNamesNoContent {
	return &TeamsV1ListTeamNamesNoContent{}
}

/*TeamsV1ListTeamNamesNoContent handles this case with default header values.

No content.
*/
type TeamsV1ListTeamNamesNoContent struct {
	Payload interface{}
}

func (o *TeamsV1ListTeamNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/names][%d] teamsV1ListTeamNamesNoContent  %+v", 204, o.Payload)
}

func (o *TeamsV1ListTeamNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1ListTeamNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1ListTeamNamesForbidden creates a TeamsV1ListTeamNamesForbidden with default headers values
func NewTeamsV1ListTeamNamesForbidden() *TeamsV1ListTeamNamesForbidden {
	return &TeamsV1ListTeamNamesForbidden{}
}

/*TeamsV1ListTeamNamesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type TeamsV1ListTeamNamesForbidden struct {
	Payload interface{}
}

func (o *TeamsV1ListTeamNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/names][%d] teamsV1ListTeamNamesForbidden  %+v", 403, o.Payload)
}

func (o *TeamsV1ListTeamNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1ListTeamNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1ListTeamNamesNotFound creates a TeamsV1ListTeamNamesNotFound with default headers values
func NewTeamsV1ListTeamNamesNotFound() *TeamsV1ListTeamNamesNotFound {
	return &TeamsV1ListTeamNamesNotFound{}
}

/*TeamsV1ListTeamNamesNotFound handles this case with default header values.

Resource does not exist.
*/
type TeamsV1ListTeamNamesNotFound struct {
	Payload interface{}
}

func (o *TeamsV1ListTeamNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/names][%d] teamsV1ListTeamNamesNotFound  %+v", 404, o.Payload)
}

func (o *TeamsV1ListTeamNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1ListTeamNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1ListTeamNamesDefault creates a TeamsV1ListTeamNamesDefault with default headers values
func NewTeamsV1ListTeamNamesDefault(code int) *TeamsV1ListTeamNamesDefault {
	return &TeamsV1ListTeamNamesDefault{
		_statusCode: code,
	}
}

/*TeamsV1ListTeamNamesDefault handles this case with default header values.

An unexpected error response
*/
type TeamsV1ListTeamNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the teams v1 list team names default response
func (o *TeamsV1ListTeamNamesDefault) Code() int {
	return o._statusCode
}

func (o *TeamsV1ListTeamNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/names][%d] TeamsV1_ListTeamNames default  %+v", o._statusCode, o.Payload)
}

func (o *TeamsV1ListTeamNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *TeamsV1ListTeamNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
