// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// TeamsV1GetTeamReader is a Reader for the TeamsV1GetTeam structure.
type TeamsV1GetTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamsV1GetTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamsV1GetTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewTeamsV1GetTeamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTeamsV1GetTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTeamsV1GetTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTeamsV1GetTeamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTeamsV1GetTeamOK creates a TeamsV1GetTeamOK with default headers values
func NewTeamsV1GetTeamOK() *TeamsV1GetTeamOK {
	return &TeamsV1GetTeamOK{}
}

/*TeamsV1GetTeamOK handles this case with default header values.

A successful response.
*/
type TeamsV1GetTeamOK struct {
	Payload *service_model.V1Team
}

func (o *TeamsV1GetTeamOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1GetTeamOK  %+v", 200, o.Payload)
}

func (o *TeamsV1GetTeamOK) GetPayload() *service_model.V1Team {
	return o.Payload
}

func (o *TeamsV1GetTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1GetTeamNoContent creates a TeamsV1GetTeamNoContent with default headers values
func NewTeamsV1GetTeamNoContent() *TeamsV1GetTeamNoContent {
	return &TeamsV1GetTeamNoContent{}
}

/*TeamsV1GetTeamNoContent handles this case with default header values.

No content.
*/
type TeamsV1GetTeamNoContent struct {
	Payload interface{}
}

func (o *TeamsV1GetTeamNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1GetTeamNoContent  %+v", 204, o.Payload)
}

func (o *TeamsV1GetTeamNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1GetTeamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1GetTeamForbidden creates a TeamsV1GetTeamForbidden with default headers values
func NewTeamsV1GetTeamForbidden() *TeamsV1GetTeamForbidden {
	return &TeamsV1GetTeamForbidden{}
}

/*TeamsV1GetTeamForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type TeamsV1GetTeamForbidden struct {
	Payload interface{}
}

func (o *TeamsV1GetTeamForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1GetTeamForbidden  %+v", 403, o.Payload)
}

func (o *TeamsV1GetTeamForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1GetTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1GetTeamNotFound creates a TeamsV1GetTeamNotFound with default headers values
func NewTeamsV1GetTeamNotFound() *TeamsV1GetTeamNotFound {
	return &TeamsV1GetTeamNotFound{}
}

/*TeamsV1GetTeamNotFound handles this case with default header values.

Resource does not exist.
*/
type TeamsV1GetTeamNotFound struct {
	Payload interface{}
}

func (o *TeamsV1GetTeamNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{team}][%d] teamsV1GetTeamNotFound  %+v", 404, o.Payload)
}

func (o *TeamsV1GetTeamNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1GetTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1GetTeamDefault creates a TeamsV1GetTeamDefault with default headers values
func NewTeamsV1GetTeamDefault(code int) *TeamsV1GetTeamDefault {
	return &TeamsV1GetTeamDefault{
		_statusCode: code,
	}
}

/*TeamsV1GetTeamDefault handles this case with default header values.

An unexpected error response
*/
type TeamsV1GetTeamDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the teams v1 get team default response
func (o *TeamsV1GetTeamDefault) Code() int {
	return o._statusCode
}

func (o *TeamsV1GetTeamDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/teams/{team}][%d] TeamsV1_GetTeam default  %+v", o._statusCode, o.Payload)
}

func (o *TeamsV1GetTeamDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *TeamsV1GetTeamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
