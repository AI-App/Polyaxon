// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// TeamsV1PatchTeamMemberReader is a Reader for the TeamsV1PatchTeamMember structure.
type TeamsV1PatchTeamMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamsV1PatchTeamMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamsV1PatchTeamMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewTeamsV1PatchTeamMemberNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTeamsV1PatchTeamMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTeamsV1PatchTeamMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTeamsV1PatchTeamMemberDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTeamsV1PatchTeamMemberOK creates a TeamsV1PatchTeamMemberOK with default headers values
func NewTeamsV1PatchTeamMemberOK() *TeamsV1PatchTeamMemberOK {
	return &TeamsV1PatchTeamMemberOK{}
}

/*TeamsV1PatchTeamMemberOK handles this case with default header values.

A successful response.
*/
type TeamsV1PatchTeamMemberOK struct {
	Payload *service_model.V1TeamMember
}

func (o *TeamsV1PatchTeamMemberOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1PatchTeamMemberOK  %+v", 200, o.Payload)
}

func (o *TeamsV1PatchTeamMemberOK) GetPayload() *service_model.V1TeamMember {
	return o.Payload
}

func (o *TeamsV1PatchTeamMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1TeamMember)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1PatchTeamMemberNoContent creates a TeamsV1PatchTeamMemberNoContent with default headers values
func NewTeamsV1PatchTeamMemberNoContent() *TeamsV1PatchTeamMemberNoContent {
	return &TeamsV1PatchTeamMemberNoContent{}
}

/*TeamsV1PatchTeamMemberNoContent handles this case with default header values.

No content.
*/
type TeamsV1PatchTeamMemberNoContent struct {
	Payload interface{}
}

func (o *TeamsV1PatchTeamMemberNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1PatchTeamMemberNoContent  %+v", 204, o.Payload)
}

func (o *TeamsV1PatchTeamMemberNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1PatchTeamMemberNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1PatchTeamMemberForbidden creates a TeamsV1PatchTeamMemberForbidden with default headers values
func NewTeamsV1PatchTeamMemberForbidden() *TeamsV1PatchTeamMemberForbidden {
	return &TeamsV1PatchTeamMemberForbidden{}
}

/*TeamsV1PatchTeamMemberForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type TeamsV1PatchTeamMemberForbidden struct {
	Payload interface{}
}

func (o *TeamsV1PatchTeamMemberForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1PatchTeamMemberForbidden  %+v", 403, o.Payload)
}

func (o *TeamsV1PatchTeamMemberForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1PatchTeamMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1PatchTeamMemberNotFound creates a TeamsV1PatchTeamMemberNotFound with default headers values
func NewTeamsV1PatchTeamMemberNotFound() *TeamsV1PatchTeamMemberNotFound {
	return &TeamsV1PatchTeamMemberNotFound{}
}

/*TeamsV1PatchTeamMemberNotFound handles this case with default header values.

Resource does not exist.
*/
type TeamsV1PatchTeamMemberNotFound struct {
	Payload interface{}
}

func (o *TeamsV1PatchTeamMemberNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1PatchTeamMemberNotFound  %+v", 404, o.Payload)
}

func (o *TeamsV1PatchTeamMemberNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1PatchTeamMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1PatchTeamMemberDefault creates a TeamsV1PatchTeamMemberDefault with default headers values
func NewTeamsV1PatchTeamMemberDefault(code int) *TeamsV1PatchTeamMemberDefault {
	return &TeamsV1PatchTeamMemberDefault{
		_statusCode: code,
	}
}

/*TeamsV1PatchTeamMemberDefault handles this case with default header values.

An unexpected error response
*/
type TeamsV1PatchTeamMemberDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the teams v1 patch team member default response
func (o *TeamsV1PatchTeamMemberDefault) Code() int {
	return o._statusCode
}

func (o *TeamsV1PatchTeamMemberDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] TeamsV1_PatchTeamMember default  %+v", o._statusCode, o.Payload)
}

func (o *TeamsV1PatchTeamMemberDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *TeamsV1PatchTeamMemberDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
