// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package teams_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// TeamsV1UpdateTeamMemberReader is a Reader for the TeamsV1UpdateTeamMember structure.
type TeamsV1UpdateTeamMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamsV1UpdateTeamMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTeamsV1UpdateTeamMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewTeamsV1UpdateTeamMemberNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTeamsV1UpdateTeamMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTeamsV1UpdateTeamMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTeamsV1UpdateTeamMemberDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTeamsV1UpdateTeamMemberOK creates a TeamsV1UpdateTeamMemberOK with default headers values
func NewTeamsV1UpdateTeamMemberOK() *TeamsV1UpdateTeamMemberOK {
	return &TeamsV1UpdateTeamMemberOK{}
}

/*TeamsV1UpdateTeamMemberOK handles this case with default header values.

A successful response.
*/
type TeamsV1UpdateTeamMemberOK struct {
	Payload *service_model.V1TeamMember
}

func (o *TeamsV1UpdateTeamMemberOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1UpdateTeamMemberOK  %+v", 200, o.Payload)
}

func (o *TeamsV1UpdateTeamMemberOK) GetPayload() *service_model.V1TeamMember {
	return o.Payload
}

func (o *TeamsV1UpdateTeamMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1TeamMember)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1UpdateTeamMemberNoContent creates a TeamsV1UpdateTeamMemberNoContent with default headers values
func NewTeamsV1UpdateTeamMemberNoContent() *TeamsV1UpdateTeamMemberNoContent {
	return &TeamsV1UpdateTeamMemberNoContent{}
}

/*TeamsV1UpdateTeamMemberNoContent handles this case with default header values.

No content.
*/
type TeamsV1UpdateTeamMemberNoContent struct {
	Payload interface{}
}

func (o *TeamsV1UpdateTeamMemberNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1UpdateTeamMemberNoContent  %+v", 204, o.Payload)
}

func (o *TeamsV1UpdateTeamMemberNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1UpdateTeamMemberNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1UpdateTeamMemberForbidden creates a TeamsV1UpdateTeamMemberForbidden with default headers values
func NewTeamsV1UpdateTeamMemberForbidden() *TeamsV1UpdateTeamMemberForbidden {
	return &TeamsV1UpdateTeamMemberForbidden{}
}

/*TeamsV1UpdateTeamMemberForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type TeamsV1UpdateTeamMemberForbidden struct {
	Payload interface{}
}

func (o *TeamsV1UpdateTeamMemberForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1UpdateTeamMemberForbidden  %+v", 403, o.Payload)
}

func (o *TeamsV1UpdateTeamMemberForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1UpdateTeamMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1UpdateTeamMemberNotFound creates a TeamsV1UpdateTeamMemberNotFound with default headers values
func NewTeamsV1UpdateTeamMemberNotFound() *TeamsV1UpdateTeamMemberNotFound {
	return &TeamsV1UpdateTeamMemberNotFound{}
}

/*TeamsV1UpdateTeamMemberNotFound handles this case with default header values.

Resource does not exist.
*/
type TeamsV1UpdateTeamMemberNotFound struct {
	Payload interface{}
}

func (o *TeamsV1UpdateTeamMemberNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] teamsV1UpdateTeamMemberNotFound  %+v", 404, o.Payload)
}

func (o *TeamsV1UpdateTeamMemberNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TeamsV1UpdateTeamMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamsV1UpdateTeamMemberDefault creates a TeamsV1UpdateTeamMemberDefault with default headers values
func NewTeamsV1UpdateTeamMemberDefault(code int) *TeamsV1UpdateTeamMemberDefault {
	return &TeamsV1UpdateTeamMemberDefault{
		_statusCode: code,
	}
}

/*TeamsV1UpdateTeamMemberDefault handles this case with default header values.

An unexpected error response
*/
type TeamsV1UpdateTeamMemberDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the teams v1 update team member default response
func (o *TeamsV1UpdateTeamMemberDefault) Code() int {
	return o._statusCode
}

func (o *TeamsV1UpdateTeamMemberDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/teams/{team}/members/{member.user}][%d] TeamsV1_UpdateTeamMember default  %+v", o._statusCode, o.Payload)
}

func (o *TeamsV1UpdateTeamMemberDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *TeamsV1UpdateTeamMemberDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
