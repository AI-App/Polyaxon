// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package project_searches_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectSearchesV1ListProjectSearchesReader is a Reader for the ProjectSearchesV1ListProjectSearches structure.
type ProjectSearchesV1ListProjectSearchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectSearchesV1ListProjectSearchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectSearchesV1ListProjectSearchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectSearchesV1ListProjectSearchesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectSearchesV1ListProjectSearchesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectSearchesV1ListProjectSearchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectSearchesV1ListProjectSearchesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectSearchesV1ListProjectSearchesOK creates a ProjectSearchesV1ListProjectSearchesOK with default headers values
func NewProjectSearchesV1ListProjectSearchesOK() *ProjectSearchesV1ListProjectSearchesOK {
	return &ProjectSearchesV1ListProjectSearchesOK{}
}

/*ProjectSearchesV1ListProjectSearchesOK handles this case with default header values.

A successful response.
*/
type ProjectSearchesV1ListProjectSearchesOK struct {
	Payload *service_model.V1ListSearchesResponse
}

func (o *ProjectSearchesV1ListProjectSearchesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches][%d] projectSearchesV1ListProjectSearchesOK  %+v", 200, o.Payload)
}

func (o *ProjectSearchesV1ListProjectSearchesOK) GetPayload() *service_model.V1ListSearchesResponse {
	return o.Payload
}

func (o *ProjectSearchesV1ListProjectSearchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListSearchesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1ListProjectSearchesNoContent creates a ProjectSearchesV1ListProjectSearchesNoContent with default headers values
func NewProjectSearchesV1ListProjectSearchesNoContent() *ProjectSearchesV1ListProjectSearchesNoContent {
	return &ProjectSearchesV1ListProjectSearchesNoContent{}
}

/*ProjectSearchesV1ListProjectSearchesNoContent handles this case with default header values.

No content.
*/
type ProjectSearchesV1ListProjectSearchesNoContent struct {
	Payload interface{}
}

func (o *ProjectSearchesV1ListProjectSearchesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches][%d] projectSearchesV1ListProjectSearchesNoContent  %+v", 204, o.Payload)
}

func (o *ProjectSearchesV1ListProjectSearchesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectSearchesV1ListProjectSearchesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1ListProjectSearchesForbidden creates a ProjectSearchesV1ListProjectSearchesForbidden with default headers values
func NewProjectSearchesV1ListProjectSearchesForbidden() *ProjectSearchesV1ListProjectSearchesForbidden {
	return &ProjectSearchesV1ListProjectSearchesForbidden{}
}

/*ProjectSearchesV1ListProjectSearchesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectSearchesV1ListProjectSearchesForbidden struct {
	Payload interface{}
}

func (o *ProjectSearchesV1ListProjectSearchesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches][%d] projectSearchesV1ListProjectSearchesForbidden  %+v", 403, o.Payload)
}

func (o *ProjectSearchesV1ListProjectSearchesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectSearchesV1ListProjectSearchesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1ListProjectSearchesNotFound creates a ProjectSearchesV1ListProjectSearchesNotFound with default headers values
func NewProjectSearchesV1ListProjectSearchesNotFound() *ProjectSearchesV1ListProjectSearchesNotFound {
	return &ProjectSearchesV1ListProjectSearchesNotFound{}
}

/*ProjectSearchesV1ListProjectSearchesNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectSearchesV1ListProjectSearchesNotFound struct {
	Payload interface{}
}

func (o *ProjectSearchesV1ListProjectSearchesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches][%d] projectSearchesV1ListProjectSearchesNotFound  %+v", 404, o.Payload)
}

func (o *ProjectSearchesV1ListProjectSearchesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectSearchesV1ListProjectSearchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1ListProjectSearchesDefault creates a ProjectSearchesV1ListProjectSearchesDefault with default headers values
func NewProjectSearchesV1ListProjectSearchesDefault(code int) *ProjectSearchesV1ListProjectSearchesDefault {
	return &ProjectSearchesV1ListProjectSearchesDefault{
		_statusCode: code,
	}
}

/*ProjectSearchesV1ListProjectSearchesDefault handles this case with default header values.

An unexpected error response
*/
type ProjectSearchesV1ListProjectSearchesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the project searches v1 list project searches default response
func (o *ProjectSearchesV1ListProjectSearchesDefault) Code() int {
	return o._statusCode
}

func (o *ProjectSearchesV1ListProjectSearchesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches][%d] ProjectSearchesV1_ListProjectSearches default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectSearchesV1ListProjectSearchesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectSearchesV1ListProjectSearchesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
