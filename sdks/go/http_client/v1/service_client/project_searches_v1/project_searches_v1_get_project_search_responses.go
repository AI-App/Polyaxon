// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package project_searches_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ProjectSearchesV1GetProjectSearchReader is a Reader for the ProjectSearchesV1GetProjectSearch structure.
type ProjectSearchesV1GetProjectSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectSearchesV1GetProjectSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectSearchesV1GetProjectSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectSearchesV1GetProjectSearchNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewProjectSearchesV1GetProjectSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectSearchesV1GetProjectSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectSearchesV1GetProjectSearchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectSearchesV1GetProjectSearchOK creates a ProjectSearchesV1GetProjectSearchOK with default headers values
func NewProjectSearchesV1GetProjectSearchOK() *ProjectSearchesV1GetProjectSearchOK {
	return &ProjectSearchesV1GetProjectSearchOK{}
}

/*ProjectSearchesV1GetProjectSearchOK handles this case with default header values.

A successful response.
*/
type ProjectSearchesV1GetProjectSearchOK struct {
	Payload *service_model.V1Search
}

func (o *ProjectSearchesV1GetProjectSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches/{uuid}][%d] projectSearchesV1GetProjectSearchOK  %+v", 200, o.Payload)
}

func (o *ProjectSearchesV1GetProjectSearchOK) GetPayload() *service_model.V1Search {
	return o.Payload
}

func (o *ProjectSearchesV1GetProjectSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Search)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1GetProjectSearchNoContent creates a ProjectSearchesV1GetProjectSearchNoContent with default headers values
func NewProjectSearchesV1GetProjectSearchNoContent() *ProjectSearchesV1GetProjectSearchNoContent {
	return &ProjectSearchesV1GetProjectSearchNoContent{}
}

/*ProjectSearchesV1GetProjectSearchNoContent handles this case with default header values.

No content.
*/
type ProjectSearchesV1GetProjectSearchNoContent struct {
	Payload interface{}
}

func (o *ProjectSearchesV1GetProjectSearchNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches/{uuid}][%d] projectSearchesV1GetProjectSearchNoContent  %+v", 204, o.Payload)
}

func (o *ProjectSearchesV1GetProjectSearchNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectSearchesV1GetProjectSearchNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1GetProjectSearchForbidden creates a ProjectSearchesV1GetProjectSearchForbidden with default headers values
func NewProjectSearchesV1GetProjectSearchForbidden() *ProjectSearchesV1GetProjectSearchForbidden {
	return &ProjectSearchesV1GetProjectSearchForbidden{}
}

/*ProjectSearchesV1GetProjectSearchForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ProjectSearchesV1GetProjectSearchForbidden struct {
	Payload interface{}
}

func (o *ProjectSearchesV1GetProjectSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches/{uuid}][%d] projectSearchesV1GetProjectSearchForbidden  %+v", 403, o.Payload)
}

func (o *ProjectSearchesV1GetProjectSearchForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectSearchesV1GetProjectSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1GetProjectSearchNotFound creates a ProjectSearchesV1GetProjectSearchNotFound with default headers values
func NewProjectSearchesV1GetProjectSearchNotFound() *ProjectSearchesV1GetProjectSearchNotFound {
	return &ProjectSearchesV1GetProjectSearchNotFound{}
}

/*ProjectSearchesV1GetProjectSearchNotFound handles this case with default header values.

Resource does not exist.
*/
type ProjectSearchesV1GetProjectSearchNotFound struct {
	Payload interface{}
}

func (o *ProjectSearchesV1GetProjectSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches/{uuid}][%d] projectSearchesV1GetProjectSearchNotFound  %+v", 404, o.Payload)
}

func (o *ProjectSearchesV1GetProjectSearchNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectSearchesV1GetProjectSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectSearchesV1GetProjectSearchDefault creates a ProjectSearchesV1GetProjectSearchDefault with default headers values
func NewProjectSearchesV1GetProjectSearchDefault(code int) *ProjectSearchesV1GetProjectSearchDefault {
	return &ProjectSearchesV1GetProjectSearchDefault{
		_statusCode: code,
	}
}

/*ProjectSearchesV1GetProjectSearchDefault handles this case with default header values.

An unexpected error response
*/
type ProjectSearchesV1GetProjectSearchDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the project searches v1 get project search default response
func (o *ProjectSearchesV1GetProjectSearchDefault) Code() int {
	return o._statusCode
}

func (o *ProjectSearchesV1GetProjectSearchDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/searches/{uuid}][%d] ProjectSearchesV1_GetProjectSearch default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectSearchesV1GetProjectSearchDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ProjectSearchesV1GetProjectSearchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
