// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package connections_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ConnectionsV1UpdateConnectionReader is a Reader for the ConnectionsV1UpdateConnection structure.
type ConnectionsV1UpdateConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectionsV1UpdateConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectionsV1UpdateConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewConnectionsV1UpdateConnectionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewConnectionsV1UpdateConnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectionsV1UpdateConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewConnectionsV1UpdateConnectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectionsV1UpdateConnectionOK creates a ConnectionsV1UpdateConnectionOK with default headers values
func NewConnectionsV1UpdateConnectionOK() *ConnectionsV1UpdateConnectionOK {
	return &ConnectionsV1UpdateConnectionOK{}
}

/*ConnectionsV1UpdateConnectionOK handles this case with default header values.

A successful response.
*/
type ConnectionsV1UpdateConnectionOK struct {
	Payload *service_model.V1ConnectionResponse
}

func (o *ConnectionsV1UpdateConnectionOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/connections/{connection.uuid}][%d] connectionsV1UpdateConnectionOK  %+v", 200, o.Payload)
}

func (o *ConnectionsV1UpdateConnectionOK) GetPayload() *service_model.V1ConnectionResponse {
	return o.Payload
}

func (o *ConnectionsV1UpdateConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ConnectionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1UpdateConnectionNoContent creates a ConnectionsV1UpdateConnectionNoContent with default headers values
func NewConnectionsV1UpdateConnectionNoContent() *ConnectionsV1UpdateConnectionNoContent {
	return &ConnectionsV1UpdateConnectionNoContent{}
}

/*ConnectionsV1UpdateConnectionNoContent handles this case with default header values.

No content.
*/
type ConnectionsV1UpdateConnectionNoContent struct {
	Payload interface{}
}

func (o *ConnectionsV1UpdateConnectionNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/connections/{connection.uuid}][%d] connectionsV1UpdateConnectionNoContent  %+v", 204, o.Payload)
}

func (o *ConnectionsV1UpdateConnectionNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ConnectionsV1UpdateConnectionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1UpdateConnectionForbidden creates a ConnectionsV1UpdateConnectionForbidden with default headers values
func NewConnectionsV1UpdateConnectionForbidden() *ConnectionsV1UpdateConnectionForbidden {
	return &ConnectionsV1UpdateConnectionForbidden{}
}

/*ConnectionsV1UpdateConnectionForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ConnectionsV1UpdateConnectionForbidden struct {
	Payload interface{}
}

func (o *ConnectionsV1UpdateConnectionForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/connections/{connection.uuid}][%d] connectionsV1UpdateConnectionForbidden  %+v", 403, o.Payload)
}

func (o *ConnectionsV1UpdateConnectionForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ConnectionsV1UpdateConnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1UpdateConnectionNotFound creates a ConnectionsV1UpdateConnectionNotFound with default headers values
func NewConnectionsV1UpdateConnectionNotFound() *ConnectionsV1UpdateConnectionNotFound {
	return &ConnectionsV1UpdateConnectionNotFound{}
}

/*ConnectionsV1UpdateConnectionNotFound handles this case with default header values.

Resource does not exist.
*/
type ConnectionsV1UpdateConnectionNotFound struct {
	Payload interface{}
}

func (o *ConnectionsV1UpdateConnectionNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/connections/{connection.uuid}][%d] connectionsV1UpdateConnectionNotFound  %+v", 404, o.Payload)
}

func (o *ConnectionsV1UpdateConnectionNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ConnectionsV1UpdateConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1UpdateConnectionDefault creates a ConnectionsV1UpdateConnectionDefault with default headers values
func NewConnectionsV1UpdateConnectionDefault(code int) *ConnectionsV1UpdateConnectionDefault {
	return &ConnectionsV1UpdateConnectionDefault{
		_statusCode: code,
	}
}

/*ConnectionsV1UpdateConnectionDefault handles this case with default header values.

An unexpected error response
*/
type ConnectionsV1UpdateConnectionDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the connections v1 update connection default response
func (o *ConnectionsV1UpdateConnectionDefault) Code() int {
	return o._statusCode
}

func (o *ConnectionsV1UpdateConnectionDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/connections/{connection.uuid}][%d] ConnectionsV1_UpdateConnection default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectionsV1UpdateConnectionDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ConnectionsV1UpdateConnectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
