// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package connections_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ConnectionsV1DeleteConnectionReader is a Reader for the ConnectionsV1DeleteConnection structure.
type ConnectionsV1DeleteConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectionsV1DeleteConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectionsV1DeleteConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewConnectionsV1DeleteConnectionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewConnectionsV1DeleteConnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectionsV1DeleteConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewConnectionsV1DeleteConnectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectionsV1DeleteConnectionOK creates a ConnectionsV1DeleteConnectionOK with default headers values
func NewConnectionsV1DeleteConnectionOK() *ConnectionsV1DeleteConnectionOK {
	return &ConnectionsV1DeleteConnectionOK{}
}

/*ConnectionsV1DeleteConnectionOK handles this case with default header values.

A successful response.
*/
type ConnectionsV1DeleteConnectionOK struct {
}

func (o *ConnectionsV1DeleteConnectionOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/connections/{uuid}][%d] connectionsV1DeleteConnectionOK ", 200)
}

func (o *ConnectionsV1DeleteConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConnectionsV1DeleteConnectionNoContent creates a ConnectionsV1DeleteConnectionNoContent with default headers values
func NewConnectionsV1DeleteConnectionNoContent() *ConnectionsV1DeleteConnectionNoContent {
	return &ConnectionsV1DeleteConnectionNoContent{}
}

/*ConnectionsV1DeleteConnectionNoContent handles this case with default header values.

No content.
*/
type ConnectionsV1DeleteConnectionNoContent struct {
	Payload interface{}
}

func (o *ConnectionsV1DeleteConnectionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/connections/{uuid}][%d] connectionsV1DeleteConnectionNoContent  %+v", 204, o.Payload)
}

func (o *ConnectionsV1DeleteConnectionNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ConnectionsV1DeleteConnectionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1DeleteConnectionForbidden creates a ConnectionsV1DeleteConnectionForbidden with default headers values
func NewConnectionsV1DeleteConnectionForbidden() *ConnectionsV1DeleteConnectionForbidden {
	return &ConnectionsV1DeleteConnectionForbidden{}
}

/*ConnectionsV1DeleteConnectionForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ConnectionsV1DeleteConnectionForbidden struct {
	Payload interface{}
}

func (o *ConnectionsV1DeleteConnectionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/connections/{uuid}][%d] connectionsV1DeleteConnectionForbidden  %+v", 403, o.Payload)
}

func (o *ConnectionsV1DeleteConnectionForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ConnectionsV1DeleteConnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1DeleteConnectionNotFound creates a ConnectionsV1DeleteConnectionNotFound with default headers values
func NewConnectionsV1DeleteConnectionNotFound() *ConnectionsV1DeleteConnectionNotFound {
	return &ConnectionsV1DeleteConnectionNotFound{}
}

/*ConnectionsV1DeleteConnectionNotFound handles this case with default header values.

Resource does not exist.
*/
type ConnectionsV1DeleteConnectionNotFound struct {
	Payload interface{}
}

func (o *ConnectionsV1DeleteConnectionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/connections/{uuid}][%d] connectionsV1DeleteConnectionNotFound  %+v", 404, o.Payload)
}

func (o *ConnectionsV1DeleteConnectionNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ConnectionsV1DeleteConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionsV1DeleteConnectionDefault creates a ConnectionsV1DeleteConnectionDefault with default headers values
func NewConnectionsV1DeleteConnectionDefault(code int) *ConnectionsV1DeleteConnectionDefault {
	return &ConnectionsV1DeleteConnectionDefault{
		_statusCode: code,
	}
}

/*ConnectionsV1DeleteConnectionDefault handles this case with default header values.

An unexpected error response
*/
type ConnectionsV1DeleteConnectionDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the connections v1 delete connection default response
func (o *ConnectionsV1DeleteConnectionDefault) Code() int {
	return o._statusCode
}

func (o *ConnectionsV1DeleteConnectionDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/orgs/{owner}/connections/{uuid}][%d] ConnectionsV1_DeleteConnection default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectionsV1DeleteConnectionDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ConnectionsV1DeleteConnectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
