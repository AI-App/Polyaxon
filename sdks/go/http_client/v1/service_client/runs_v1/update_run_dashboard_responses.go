// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// UpdateRunDashboardReader is a Reader for the UpdateRunDashboard structure.
type UpdateRunDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRunDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRunDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateRunDashboardNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateRunDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRunDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateRunDashboardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateRunDashboardOK creates a UpdateRunDashboardOK with default headers values
func NewUpdateRunDashboardOK() *UpdateRunDashboardOK {
	return &UpdateRunDashboardOK{}
}

/*UpdateRunDashboardOK handles this case with default header values.

A successful response.
*/
type UpdateRunDashboardOK struct {
	Payload *service_model.V1Dashboard
}

func (o *UpdateRunDashboardOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/{project}/runs/{run}/dashboards/{dashboard.uuid}][%d] updateRunDashboardOK  %+v", 200, o.Payload)
}

func (o *UpdateRunDashboardOK) GetPayload() *service_model.V1Dashboard {
	return o.Payload
}

func (o *UpdateRunDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Dashboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunDashboardNoContent creates a UpdateRunDashboardNoContent with default headers values
func NewUpdateRunDashboardNoContent() *UpdateRunDashboardNoContent {
	return &UpdateRunDashboardNoContent{}
}

/*UpdateRunDashboardNoContent handles this case with default header values.

No content.
*/
type UpdateRunDashboardNoContent struct {
	Payload interface{}
}

func (o *UpdateRunDashboardNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/{project}/runs/{run}/dashboards/{dashboard.uuid}][%d] updateRunDashboardNoContent  %+v", 204, o.Payload)
}

func (o *UpdateRunDashboardNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRunDashboardNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunDashboardForbidden creates a UpdateRunDashboardForbidden with default headers values
func NewUpdateRunDashboardForbidden() *UpdateRunDashboardForbidden {
	return &UpdateRunDashboardForbidden{}
}

/*UpdateRunDashboardForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type UpdateRunDashboardForbidden struct {
	Payload interface{}
}

func (o *UpdateRunDashboardForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/{project}/runs/{run}/dashboards/{dashboard.uuid}][%d] updateRunDashboardForbidden  %+v", 403, o.Payload)
}

func (o *UpdateRunDashboardForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRunDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunDashboardNotFound creates a UpdateRunDashboardNotFound with default headers values
func NewUpdateRunDashboardNotFound() *UpdateRunDashboardNotFound {
	return &UpdateRunDashboardNotFound{}
}

/*UpdateRunDashboardNotFound handles this case with default header values.

Resource does not exist.
*/
type UpdateRunDashboardNotFound struct {
	Payload interface{}
}

func (o *UpdateRunDashboardNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/{project}/runs/{run}/dashboards/{dashboard.uuid}][%d] updateRunDashboardNotFound  %+v", 404, o.Payload)
}

func (o *UpdateRunDashboardNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRunDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunDashboardDefault creates a UpdateRunDashboardDefault with default headers values
func NewUpdateRunDashboardDefault(code int) *UpdateRunDashboardDefault {
	return &UpdateRunDashboardDefault{
		_statusCode: code,
	}
}

/*UpdateRunDashboardDefault handles this case with default header values.

An unexpected error response
*/
type UpdateRunDashboardDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the update run dashboard default response
func (o *UpdateRunDashboardDefault) Code() int {
	return o._statusCode
}

func (o *UpdateRunDashboardDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/{owner}/{project}/runs/{run}/dashboards/{dashboard.uuid}][%d] UpdateRunDashboard default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateRunDashboardDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UpdateRunDashboardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
