// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListRunDashboardsReader is a Reader for the ListRunDashboards structure.
type ListRunDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRunDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRunDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListRunDashboardsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListRunDashboardsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListRunDashboardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListRunDashboardsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRunDashboardsOK creates a ListRunDashboardsOK with default headers values
func NewListRunDashboardsOK() *ListRunDashboardsOK {
	return &ListRunDashboardsOK{}
}

/*ListRunDashboardsOK handles this case with default header values.

A successful response.
*/
type ListRunDashboardsOK struct {
	Payload *service_model.V1ListDashboardsResponse
}

func (o *ListRunDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/{run}/dashboards][%d] listRunDashboardsOK  %+v", 200, o.Payload)
}

func (o *ListRunDashboardsOK) GetPayload() *service_model.V1ListDashboardsResponse {
	return o.Payload
}

func (o *ListRunDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListDashboardsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRunDashboardsNoContent creates a ListRunDashboardsNoContent with default headers values
func NewListRunDashboardsNoContent() *ListRunDashboardsNoContent {
	return &ListRunDashboardsNoContent{}
}

/*ListRunDashboardsNoContent handles this case with default header values.

No content.
*/
type ListRunDashboardsNoContent struct {
	Payload interface{}
}

func (o *ListRunDashboardsNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/{run}/dashboards][%d] listRunDashboardsNoContent  %+v", 204, o.Payload)
}

func (o *ListRunDashboardsNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListRunDashboardsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRunDashboardsForbidden creates a ListRunDashboardsForbidden with default headers values
func NewListRunDashboardsForbidden() *ListRunDashboardsForbidden {
	return &ListRunDashboardsForbidden{}
}

/*ListRunDashboardsForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ListRunDashboardsForbidden struct {
	Payload interface{}
}

func (o *ListRunDashboardsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/{run}/dashboards][%d] listRunDashboardsForbidden  %+v", 403, o.Payload)
}

func (o *ListRunDashboardsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListRunDashboardsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRunDashboardsNotFound creates a ListRunDashboardsNotFound with default headers values
func NewListRunDashboardsNotFound() *ListRunDashboardsNotFound {
	return &ListRunDashboardsNotFound{}
}

/*ListRunDashboardsNotFound handles this case with default header values.

Resource does not exist.
*/
type ListRunDashboardsNotFound struct {
	Payload interface{}
}

func (o *ListRunDashboardsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/{run}/dashboards][%d] listRunDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *ListRunDashboardsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListRunDashboardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRunDashboardsDefault creates a ListRunDashboardsDefault with default headers values
func NewListRunDashboardsDefault(code int) *ListRunDashboardsDefault {
	return &ListRunDashboardsDefault{
		_statusCode: code,
	}
}

/*ListRunDashboardsDefault handles this case with default header values.

An unexpected error response
*/
type ListRunDashboardsDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list run dashboards default response
func (o *ListRunDashboardsDefault) Code() int {
	return o._statusCode
}

func (o *ListRunDashboardsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/{run}/dashboards][%d] ListRunDashboards default  %+v", o._statusCode, o.Payload)
}

func (o *ListRunDashboardsDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListRunDashboardsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
