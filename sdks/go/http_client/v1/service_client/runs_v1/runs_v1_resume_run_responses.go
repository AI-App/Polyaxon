// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// RunsV1ResumeRunReader is a Reader for the RunsV1ResumeRun structure.
type RunsV1ResumeRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunsV1ResumeRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunsV1ResumeRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRunsV1ResumeRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRunsV1ResumeRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunsV1ResumeRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRunsV1ResumeRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRunsV1ResumeRunOK creates a RunsV1ResumeRunOK with default headers values
func NewRunsV1ResumeRunOK() *RunsV1ResumeRunOK {
	return &RunsV1ResumeRunOK{}
}

/*RunsV1ResumeRunOK handles this case with default header values.

A successful response.
*/
type RunsV1ResumeRunOK struct {
	Payload *service_model.V1Run
}

func (o *RunsV1ResumeRunOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/resume][%d] runsV1ResumeRunOK  %+v", 200, o.Payload)
}

func (o *RunsV1ResumeRunOK) GetPayload() *service_model.V1Run {
	return o.Payload
}

func (o *RunsV1ResumeRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ResumeRunNoContent creates a RunsV1ResumeRunNoContent with default headers values
func NewRunsV1ResumeRunNoContent() *RunsV1ResumeRunNoContent {
	return &RunsV1ResumeRunNoContent{}
}

/*RunsV1ResumeRunNoContent handles this case with default header values.

No content.
*/
type RunsV1ResumeRunNoContent struct {
	Payload interface{}
}

func (o *RunsV1ResumeRunNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/resume][%d] runsV1ResumeRunNoContent  %+v", 204, o.Payload)
}

func (o *RunsV1ResumeRunNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1ResumeRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ResumeRunForbidden creates a RunsV1ResumeRunForbidden with default headers values
func NewRunsV1ResumeRunForbidden() *RunsV1ResumeRunForbidden {
	return &RunsV1ResumeRunForbidden{}
}

/*RunsV1ResumeRunForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type RunsV1ResumeRunForbidden struct {
	Payload interface{}
}

func (o *RunsV1ResumeRunForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/resume][%d] runsV1ResumeRunForbidden  %+v", 403, o.Payload)
}

func (o *RunsV1ResumeRunForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1ResumeRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ResumeRunNotFound creates a RunsV1ResumeRunNotFound with default headers values
func NewRunsV1ResumeRunNotFound() *RunsV1ResumeRunNotFound {
	return &RunsV1ResumeRunNotFound{}
}

/*RunsV1ResumeRunNotFound handles this case with default header values.

Resource does not exist.
*/
type RunsV1ResumeRunNotFound struct {
	Payload interface{}
}

func (o *RunsV1ResumeRunNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/resume][%d] runsV1ResumeRunNotFound  %+v", 404, o.Payload)
}

func (o *RunsV1ResumeRunNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1ResumeRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ResumeRunDefault creates a RunsV1ResumeRunDefault with default headers values
func NewRunsV1ResumeRunDefault(code int) *RunsV1ResumeRunDefault {
	return &RunsV1ResumeRunDefault{
		_statusCode: code,
	}
}

/*RunsV1ResumeRunDefault handles this case with default header values.

An unexpected error response
*/
type RunsV1ResumeRunDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the runs v1 resume run default response
func (o *RunsV1ResumeRunDefault) Code() int {
	return o._statusCode
}

func (o *RunsV1ResumeRunDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/resume][%d] RunsV1_ResumeRun default  %+v", o._statusCode, o.Payload)
}

func (o *RunsV1ResumeRunDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RunsV1ResumeRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
