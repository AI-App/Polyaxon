// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// NewRunsV1BookmarkRunsParams creates a new RunsV1BookmarkRunsParams object
// with the default values initialized.
func NewRunsV1BookmarkRunsParams() *RunsV1BookmarkRunsParams {
	var ()
	return &RunsV1BookmarkRunsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRunsV1BookmarkRunsParamsWithTimeout creates a new RunsV1BookmarkRunsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRunsV1BookmarkRunsParamsWithTimeout(timeout time.Duration) *RunsV1BookmarkRunsParams {
	var ()
	return &RunsV1BookmarkRunsParams{

		timeout: timeout,
	}
}

// NewRunsV1BookmarkRunsParamsWithContext creates a new RunsV1BookmarkRunsParams object
// with the default values initialized, and the ability to set a context for a request
func NewRunsV1BookmarkRunsParamsWithContext(ctx context.Context) *RunsV1BookmarkRunsParams {
	var ()
	return &RunsV1BookmarkRunsParams{

		Context: ctx,
	}
}

// NewRunsV1BookmarkRunsParamsWithHTTPClient creates a new RunsV1BookmarkRunsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRunsV1BookmarkRunsParamsWithHTTPClient(client *http.Client) *RunsV1BookmarkRunsParams {
	var ()
	return &RunsV1BookmarkRunsParams{
		HTTPClient: client,
	}
}

/*RunsV1BookmarkRunsParams contains all the parameters to send to the API endpoint
for the runs v1 bookmark runs operation typically these are written to a http.Request
*/
type RunsV1BookmarkRunsParams struct {

	/*Body
	  Uuids of the entities

	*/
	Body *service_model.V1Uuids
	/*Owner
	  Owner of the namespace

	*/
	Owner string
	/*Project
	  Project under namesapce

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) WithTimeout(timeout time.Duration) *RunsV1BookmarkRunsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) WithContext(ctx context.Context) *RunsV1BookmarkRunsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) WithHTTPClient(client *http.Client) *RunsV1BookmarkRunsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) WithBody(body *service_model.V1Uuids) *RunsV1BookmarkRunsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) SetBody(body *service_model.V1Uuids) {
	o.Body = body
}

// WithOwner adds the owner to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) WithOwner(owner string) *RunsV1BookmarkRunsParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithProject adds the project to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) WithProject(project string) *RunsV1BookmarkRunsParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the runs v1 bookmark runs params
func (o *RunsV1BookmarkRunsParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *RunsV1BookmarkRunsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
