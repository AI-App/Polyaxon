// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// RunsV1RestartRunReader is a Reader for the RunsV1RestartRun structure.
type RunsV1RestartRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunsV1RestartRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunsV1RestartRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRunsV1RestartRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRunsV1RestartRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunsV1RestartRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRunsV1RestartRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRunsV1RestartRunOK creates a RunsV1RestartRunOK with default headers values
func NewRunsV1RestartRunOK() *RunsV1RestartRunOK {
	return &RunsV1RestartRunOK{}
}

/*RunsV1RestartRunOK handles this case with default header values.

A successful response.
*/
type RunsV1RestartRunOK struct {
	Payload *service_model.V1Run
}

func (o *RunsV1RestartRunOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/restart][%d] runsV1RestartRunOK  %+v", 200, o.Payload)
}

func (o *RunsV1RestartRunOK) GetPayload() *service_model.V1Run {
	return o.Payload
}

func (o *RunsV1RestartRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1RestartRunNoContent creates a RunsV1RestartRunNoContent with default headers values
func NewRunsV1RestartRunNoContent() *RunsV1RestartRunNoContent {
	return &RunsV1RestartRunNoContent{}
}

/*RunsV1RestartRunNoContent handles this case with default header values.

No content.
*/
type RunsV1RestartRunNoContent struct {
	Payload interface{}
}

func (o *RunsV1RestartRunNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/restart][%d] runsV1RestartRunNoContent  %+v", 204, o.Payload)
}

func (o *RunsV1RestartRunNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1RestartRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1RestartRunForbidden creates a RunsV1RestartRunForbidden with default headers values
func NewRunsV1RestartRunForbidden() *RunsV1RestartRunForbidden {
	return &RunsV1RestartRunForbidden{}
}

/*RunsV1RestartRunForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type RunsV1RestartRunForbidden struct {
	Payload interface{}
}

func (o *RunsV1RestartRunForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/restart][%d] runsV1RestartRunForbidden  %+v", 403, o.Payload)
}

func (o *RunsV1RestartRunForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1RestartRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1RestartRunNotFound creates a RunsV1RestartRunNotFound with default headers values
func NewRunsV1RestartRunNotFound() *RunsV1RestartRunNotFound {
	return &RunsV1RestartRunNotFound{}
}

/*RunsV1RestartRunNotFound handles this case with default header values.

Resource does not exist.
*/
type RunsV1RestartRunNotFound struct {
	Payload interface{}
}

func (o *RunsV1RestartRunNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/restart][%d] runsV1RestartRunNotFound  %+v", 404, o.Payload)
}

func (o *RunsV1RestartRunNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1RestartRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1RestartRunDefault creates a RunsV1RestartRunDefault with default headers values
func NewRunsV1RestartRunDefault(code int) *RunsV1RestartRunDefault {
	return &RunsV1RestartRunDefault{
		_statusCode: code,
	}
}

/*RunsV1RestartRunDefault handles this case with default header values.

An unexpected error response
*/
type RunsV1RestartRunDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the runs v1 restart run default response
func (o *RunsV1RestartRunDefault) Code() int {
	return o._statusCode
}

func (o *RunsV1RestartRunDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/restart][%d] RunsV1_RestartRun default  %+v", o._statusCode, o.Payload)
}

func (o *RunsV1RestartRunDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RunsV1RestartRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
