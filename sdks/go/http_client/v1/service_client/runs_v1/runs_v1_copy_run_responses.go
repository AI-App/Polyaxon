// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// RunsV1CopyRunReader is a Reader for the RunsV1CopyRun structure.
type RunsV1CopyRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunsV1CopyRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunsV1CopyRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRunsV1CopyRunNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRunsV1CopyRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunsV1CopyRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRunsV1CopyRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRunsV1CopyRunOK creates a RunsV1CopyRunOK with default headers values
func NewRunsV1CopyRunOK() *RunsV1CopyRunOK {
	return &RunsV1CopyRunOK{}
}

/*RunsV1CopyRunOK handles this case with default header values.

A successful response.
*/
type RunsV1CopyRunOK struct {
	Payload *service_model.V1Run
}

func (o *RunsV1CopyRunOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/copy][%d] runsV1CopyRunOK  %+v", 200, o.Payload)
}

func (o *RunsV1CopyRunOK) GetPayload() *service_model.V1Run {
	return o.Payload
}

func (o *RunsV1CopyRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1Run)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1CopyRunNoContent creates a RunsV1CopyRunNoContent with default headers values
func NewRunsV1CopyRunNoContent() *RunsV1CopyRunNoContent {
	return &RunsV1CopyRunNoContent{}
}

/*RunsV1CopyRunNoContent handles this case with default header values.

No content.
*/
type RunsV1CopyRunNoContent struct {
	Payload interface{}
}

func (o *RunsV1CopyRunNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/copy][%d] runsV1CopyRunNoContent  %+v", 204, o.Payload)
}

func (o *RunsV1CopyRunNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1CopyRunNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1CopyRunForbidden creates a RunsV1CopyRunForbidden with default headers values
func NewRunsV1CopyRunForbidden() *RunsV1CopyRunForbidden {
	return &RunsV1CopyRunForbidden{}
}

/*RunsV1CopyRunForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type RunsV1CopyRunForbidden struct {
	Payload interface{}
}

func (o *RunsV1CopyRunForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/copy][%d] runsV1CopyRunForbidden  %+v", 403, o.Payload)
}

func (o *RunsV1CopyRunForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1CopyRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1CopyRunNotFound creates a RunsV1CopyRunNotFound with default headers values
func NewRunsV1CopyRunNotFound() *RunsV1CopyRunNotFound {
	return &RunsV1CopyRunNotFound{}
}

/*RunsV1CopyRunNotFound handles this case with default header values.

Resource does not exist.
*/
type RunsV1CopyRunNotFound struct {
	Payload interface{}
}

func (o *RunsV1CopyRunNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/copy][%d] runsV1CopyRunNotFound  %+v", 404, o.Payload)
}

func (o *RunsV1CopyRunNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1CopyRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1CopyRunDefault creates a RunsV1CopyRunDefault with default headers values
func NewRunsV1CopyRunDefault(code int) *RunsV1CopyRunDefault {
	return &RunsV1CopyRunDefault{
		_statusCode: code,
	}
}

/*RunsV1CopyRunDefault handles this case with default header values.

An unexpected error response
*/
type RunsV1CopyRunDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the runs v1 copy run default response
func (o *RunsV1CopyRunDefault) Code() int {
	return o._statusCode
}

func (o *RunsV1CopyRunDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/{entity.owner}/{entity.project}/runs/{entity.uuid}/copy][%d] RunsV1_CopyRun default  %+v", o._statusCode, o.Payload)
}

func (o *RunsV1CopyRunDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RunsV1CopyRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
