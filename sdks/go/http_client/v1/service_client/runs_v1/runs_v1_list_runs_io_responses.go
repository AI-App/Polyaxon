// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package runs_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// RunsV1ListRunsIoReader is a Reader for the RunsV1ListRunsIo structure.
type RunsV1ListRunsIoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunsV1ListRunsIoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunsV1ListRunsIoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRunsV1ListRunsIoNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRunsV1ListRunsIoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunsV1ListRunsIoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRunsV1ListRunsIoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRunsV1ListRunsIoOK creates a RunsV1ListRunsIoOK with default headers values
func NewRunsV1ListRunsIoOK() *RunsV1ListRunsIoOK {
	return &RunsV1ListRunsIoOK{}
}

/*RunsV1ListRunsIoOK handles this case with default header values.

A successful response.
*/
type RunsV1ListRunsIoOK struct {
	Payload *service_model.V1ListRunsResponse
}

func (o *RunsV1ListRunsIoOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/io][%d] runsV1ListRunsIoOK  %+v", 200, o.Payload)
}

func (o *RunsV1ListRunsIoOK) GetPayload() *service_model.V1ListRunsResponse {
	return o.Payload
}

func (o *RunsV1ListRunsIoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListRunsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ListRunsIoNoContent creates a RunsV1ListRunsIoNoContent with default headers values
func NewRunsV1ListRunsIoNoContent() *RunsV1ListRunsIoNoContent {
	return &RunsV1ListRunsIoNoContent{}
}

/*RunsV1ListRunsIoNoContent handles this case with default header values.

No content.
*/
type RunsV1ListRunsIoNoContent struct {
	Payload interface{}
}

func (o *RunsV1ListRunsIoNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/io][%d] runsV1ListRunsIoNoContent  %+v", 204, o.Payload)
}

func (o *RunsV1ListRunsIoNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1ListRunsIoNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ListRunsIoForbidden creates a RunsV1ListRunsIoForbidden with default headers values
func NewRunsV1ListRunsIoForbidden() *RunsV1ListRunsIoForbidden {
	return &RunsV1ListRunsIoForbidden{}
}

/*RunsV1ListRunsIoForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type RunsV1ListRunsIoForbidden struct {
	Payload interface{}
}

func (o *RunsV1ListRunsIoForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/io][%d] runsV1ListRunsIoForbidden  %+v", 403, o.Payload)
}

func (o *RunsV1ListRunsIoForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1ListRunsIoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ListRunsIoNotFound creates a RunsV1ListRunsIoNotFound with default headers values
func NewRunsV1ListRunsIoNotFound() *RunsV1ListRunsIoNotFound {
	return &RunsV1ListRunsIoNotFound{}
}

/*RunsV1ListRunsIoNotFound handles this case with default header values.

Resource does not exist.
*/
type RunsV1ListRunsIoNotFound struct {
	Payload interface{}
}

func (o *RunsV1ListRunsIoNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/io][%d] runsV1ListRunsIoNotFound  %+v", 404, o.Payload)
}

func (o *RunsV1ListRunsIoNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *RunsV1ListRunsIoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunsV1ListRunsIoDefault creates a RunsV1ListRunsIoDefault with default headers values
func NewRunsV1ListRunsIoDefault(code int) *RunsV1ListRunsIoDefault {
	return &RunsV1ListRunsIoDefault{
		_statusCode: code,
	}
}

/*RunsV1ListRunsIoDefault handles this case with default header values.

An unexpected error response
*/
type RunsV1ListRunsIoDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the runs v1 list runs io default response
func (o *RunsV1ListRunsIoDefault) Code() int {
	return o._statusCode
}

func (o *RunsV1ListRunsIoDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/{owner}/{project}/runs/io][%d] RunsV1_ListRunsIo default  %+v", o._statusCode, o.Payload)
}

func (o *RunsV1ListRunsIoDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *RunsV1ListRunsIoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
