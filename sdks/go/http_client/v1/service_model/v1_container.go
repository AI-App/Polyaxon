// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package service_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// V1Container Container specification
// swagger:model v1Container
type V1Container struct {

	// Arguments to the entrypoint.
	Args []string `json:"args"`

	// The command to execute on the container.
	Command []string `json:"command"`

	// Image to use for the container defintion
	Image string `json:"image,omitempty"`

	// A valid image pull policy
	ImagePullPolicy string `json:"image_pull_policy,omitempty"`

	// Kind of parallel, should be equal to "container"
	Kind string `json:"kind,omitempty"`
}

// Validate validates this v1 container
func (m *V1Container) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1Container) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Container) UnmarshalBinary(b []byte) error {
	var res V1Container
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
