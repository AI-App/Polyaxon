// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/connection.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Connection kinds
type ConnectionKind int32

const (
	ConnectionKind_host_path       ConnectionKind = 0
	ConnectionKind_volume_claim    ConnectionKind = 1
	ConnectionKind_ftp             ConnectionKind = 2
	ConnectionKind_gcp             ConnectionKind = 3
	ConnectionKind_gcs             ConnectionKind = 4
	ConnectionKind_gcpcloudsql     ConnectionKind = 5
	ConnectionKind_grpc            ConnectionKind = 6
	ConnectionKind_hdfs            ConnectionKind = 7
	ConnectionKind_http            ConnectionKind = 8
	ConnectionKind_pig_cli         ConnectionKind = 9
	ConnectionKind_hive_cli        ConnectionKind = 10
	ConnectionKind_hive_metastore  ConnectionKind = 11
	ConnectionKind_hive_server2    ConnectionKind = 12
	ConnectionKind_jdbc            ConnectionKind = 13
	ConnectionKind_jenkins         ConnectionKind = 14
	ConnectionKind_mysql           ConnectionKind = 15
	ConnectionKind_postgres        ConnectionKind = 16
	ConnectionKind_oracle          ConnectionKind = 17
	ConnectionKind_vertica         ConnectionKind = 18
	ConnectionKind_sqlite          ConnectionKind = 19
	ConnectionKind_mssql           ConnectionKind = 20
	ConnectionKind_redis           ConnectionKind = 21
	ConnectionKind_presto          ConnectionKind = 22
	ConnectionKind_mongo           ConnectionKind = 23
	ConnectionKind_cassandra       ConnectionKind = 24
	ConnectionKind_samba           ConnectionKind = 25
	ConnectionKind_aws             ConnectionKind = 26
	ConnectionKind_s3              ConnectionKind = 27
	ConnectionKind_emr             ConnectionKind = 28
	ConnectionKind_snowflake       ConnectionKind = 29
	ConnectionKind_ssh             ConnectionKind = 30
	ConnectionKind_cloudant        ConnectionKind = 31
	ConnectionKind_databricks      ConnectionKind = 32
	ConnectionKind_segment         ConnectionKind = 33
	ConnectionKind_azure_data_lake ConnectionKind = 34
	ConnectionKind_azure_cosmos    ConnectionKind = 35
	ConnectionKind_wasb            ConnectionKind = 36
	ConnectionKind_registry        ConnectionKind = 37
	ConnectionKind_git             ConnectionKind = 38
)

var ConnectionKind_name = map[int32]string{
	0:  "host_path",
	1:  "volume_claim",
	2:  "ftp",
	3:  "gcp",
	4:  "gcs",
	5:  "gcpcloudsql",
	6:  "grpc",
	7:  "hdfs",
	8:  "http",
	9:  "pig_cli",
	10: "hive_cli",
	11: "hive_metastore",
	12: "hive_server2",
	13: "jdbc",
	14: "jenkins",
	15: "mysql",
	16: "postgres",
	17: "oracle",
	18: "vertica",
	19: "sqlite",
	20: "mssql",
	21: "redis",
	22: "presto",
	23: "mongo",
	24: "cassandra",
	25: "samba",
	26: "aws",
	27: "s3",
	28: "emr",
	29: "snowflake",
	30: "ssh",
	31: "cloudant",
	32: "databricks",
	33: "segment",
	34: "azure_data_lake",
	35: "azure_cosmos",
	36: "wasb",
	37: "registry",
	38: "git",
}

var ConnectionKind_value = map[string]int32{
	"host_path":       0,
	"volume_claim":    1,
	"ftp":             2,
	"gcp":             3,
	"gcs":             4,
	"gcpcloudsql":     5,
	"grpc":            6,
	"hdfs":            7,
	"http":            8,
	"pig_cli":         9,
	"hive_cli":        10,
	"hive_metastore":  11,
	"hive_server2":    12,
	"jdbc":            13,
	"jenkins":         14,
	"mysql":           15,
	"postgres":        16,
	"oracle":          17,
	"vertica":         18,
	"sqlite":          19,
	"mssql":           20,
	"redis":           21,
	"presto":          22,
	"mongo":           23,
	"cassandra":       24,
	"samba":           25,
	"aws":             26,
	"s3":              27,
	"emr":             28,
	"snowflake":       29,
	"ssh":             30,
	"cloudant":        31,
	"databricks":      32,
	"segment":         33,
	"azure_data_lake": 34,
	"azure_cosmos":    35,
	"wasb":            36,
	"registry":        37,
	"git":             38,
}

func (x ConnectionKind) String() string {
	return proto.EnumName(ConnectionKind_name, int32(x))
}

func (ConnectionKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77c9382d6a11cfbf, []int{0}
}

// Conexion specification
type Connection struct {
	// UUID
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional Tags of this entity
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Optional time when the entityt was created
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional a flag to freeze the store
	Frozen bool `protobuf:"varint,7,opt,name=frozen,proto3" json:"frozen,omitempty"`
	// Optional a flag to disable the store
	Disabled bool `protobuf:"varint,8,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Optional if the entity has been deleted
	Deleted bool `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Optional the k8s secret to use
	K8SSecret string `protobuf:"bytes,10,opt,name=k8s_secret,json=k8sSecret,proto3" json:"k8s_secret,omitempty"`
	// Optional kind of the store
	Kind                 ConnectionKind  `protobuf:"varint,11,opt,name=kind,proto3,enum=v1.ConnectionKind" json:"kind,omitempty"`
	Schema               *_struct.Struct `protobuf:"bytes,12,opt,name=schema,proto3" json:"schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c9382d6a11cfbf, []int{0}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Connection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Connection) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Connection) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Connection) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Connection) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Connection) GetFrozen() bool {
	if m != nil {
		return m.Frozen
	}
	return false
}

func (m *Connection) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *Connection) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Connection) GetK8SSecret() string {
	if m != nil {
		return m.K8SSecret
	}
	return ""
}

func (m *Connection) GetKind() ConnectionKind {
	if m != nil {
		return m.Kind
	}
	return ConnectionKind_host_path
}

func (m *Connection) GetSchema() *_struct.Struct {
	if m != nil {
		return m.Schema
	}
	return nil
}

// Request data to create/update sonnexion
type ConnectionBodyRequest struct {
	// Owner of the namespace
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Connection body
	Connection           *Connection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ConnectionBodyRequest) Reset()         { *m = ConnectionBodyRequest{} }
func (m *ConnectionBodyRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectionBodyRequest) ProtoMessage()    {}
func (*ConnectionBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c9382d6a11cfbf, []int{1}
}

func (m *ConnectionBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionBodyRequest.Unmarshal(m, b)
}
func (m *ConnectionBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionBodyRequest.Marshal(b, m, deterministic)
}
func (m *ConnectionBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionBodyRequest.Merge(m, src)
}
func (m *ConnectionBodyRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectionBodyRequest.Size(m)
}
func (m *ConnectionBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionBodyRequest proto.InternalMessageInfo

func (m *ConnectionBodyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ConnectionBodyRequest) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

// Contains list connections
type ListConnectionsResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*Connection `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConnectionsResponse) Reset()         { *m = ListConnectionsResponse{} }
func (m *ListConnectionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListConnectionsResponse) ProtoMessage()    {}
func (*ListConnectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c9382d6a11cfbf, []int{2}
}

func (m *ListConnectionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConnectionsResponse.Unmarshal(m, b)
}
func (m *ListConnectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConnectionsResponse.Marshal(b, m, deterministic)
}
func (m *ListConnectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConnectionsResponse.Merge(m, src)
}
func (m *ListConnectionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListConnectionsResponse.Size(m)
}
func (m *ListConnectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConnectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListConnectionsResponse proto.InternalMessageInfo

func (m *ListConnectionsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListConnectionsResponse) GetResults() []*Connection {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListConnectionsResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListConnectionsResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func init() {
	proto.RegisterEnum("v1.ConnectionKind", ConnectionKind_name, ConnectionKind_value)
	proto.RegisterType((*Connection)(nil), "v1.Connection")
	proto.RegisterType((*ConnectionBodyRequest)(nil), "v1.ConnectionBodyRequest")
	proto.RegisterType((*ListConnectionsResponse)(nil), "v1.ListConnectionsResponse")
}

func init() { proto.RegisterFile("v1/connection.proto", fileDescriptor_77c9382d6a11cfbf) }

var fileDescriptor_77c9382d6a11cfbf = []byte{
	// 743 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x72, 0x1b, 0x45,
	0x10, 0x46, 0xff, 0x52, 0xcb, 0x91, 0x9b, 0x71, 0x12, 0x2f, 0x22, 0x21, 0xc2, 0x40, 0x4a, 0xc5,
	0x41, 0x2e, 0x3b, 0x97, 0x70, 0x0c, 0x1c, 0xe1, 0xb4, 0xe1, 0x4a, 0xa9, 0x46, 0xb3, 0xad, 0xd5,
	0x44, 0xbb, 0x3b, 0xeb, 0xe9, 0x5e, 0x39, 0xce, 0x1b, 0xf0, 0x22, 0xbc, 0x25, 0x55, 0xd4, 0x8c,
	0x24, 0x3b, 0x01, 0xaa, 0x72, 0xeb, 0xfe, 0x7e, 0x7a, 0x7b, 0xbe, 0x99, 0x85, 0xb3, 0xdd, 0xd5,
	0xa5, 0x71, 0x55, 0x45, 0x46, 0xac, 0xab, 0x16, 0xb5, 0x77, 0xe2, 0x54, 0x7b, 0x77, 0x35, 0x7d,
	0x91, 0x3b, 0x97, 0x17, 0x74, 0x19, 0x91, 0x55, 0xb3, 0xbe, 0x14, 0x5b, 0x12, 0x8b, 0x2e, 0xeb,
	0xbd, 0x68, 0xfa, 0xec, 0xdf, 0x02, 0x16, 0xdf, 0x18, 0xd9, 0xb3, 0x17, 0x7f, 0x75, 0x00, 0x7e,
	0xb9, 0x9f, 0xab, 0x14, 0x74, 0x9b, 0xc6, 0x66, 0x49, 0x6b, 0xd6, 0x9a, 0x8f, 0xd2, 0x58, 0x07,
	0xac, 0xd2, 0x25, 0x25, 0xed, 0x3d, 0x16, 0x6a, 0x35, 0x83, 0x71, 0x46, 0x6c, 0xbc, 0xad, 0x83,
	0x2d, 0xe9, 0x44, 0xea, 0x63, 0x28, 0xb8, 0x44, 0xe7, 0x9c, 0x74, 0x67, 0x9d, 0xe0, 0x0a, 0xb5,
	0xfa, 0x09, 0xc0, 0x78, 0xd2, 0x42, 0xd9, 0x52, 0x4b, 0xd2, 0x9b, 0xb5, 0xe6, 0xe3, 0xeb, 0xe9,
	0x62, 0xbf, 0xdf, 0xe2, 0xb8, 0xdf, 0xe2, 0xf7, 0xe3, 0x01, 0xd2, 0xd1, 0x41, 0xfd, 0x46, 0x82,
	0xb5, 0xa9, 0xb3, 0xa3, 0xb5, 0xff, 0x79, 0xeb, 0x41, 0xfd, 0x46, 0xd4, 0x53, 0xe8, 0xaf, 0xbd,
	0xfb, 0x40, 0x55, 0x32, 0x98, 0xb5, 0xe6, 0xc3, 0xf4, 0xd0, 0xa9, 0x29, 0x0c, 0x33, 0xcb, 0x7a,
	0x55, 0x50, 0x96, 0x0c, 0x23, 0x73, 0xdf, 0xab, 0x04, 0x06, 0x19, 0x15, 0x24, 0x94, 0x25, 0xa3,
	0x48, 0x1d, 0x5b, 0xf5, 0x1c, 0x60, 0xfb, 0x9a, 0x97, 0x4c, 0xc6, 0x93, 0x24, 0x10, 0x0f, 0x3e,
	0xda, 0xbe, 0xe6, 0xb7, 0x11, 0x50, 0x2f, 0xa1, 0xbb, 0xb5, 0x55, 0x96, 0x8c, 0x67, 0xad, 0xf9,
	0xe4, 0x5a, 0x2d, 0x76, 0x57, 0x8b, 0x87, 0x78, 0x7f, 0xb5, 0x55, 0x96, 0x46, 0x5e, 0x5d, 0x42,
	0x9f, 0xcd, 0x86, 0x4a, 0x9d, 0x9c, 0xc4, 0xb3, 0x9c, 0xff, 0xe7, 0x2c, 0x6f, 0xe3, 0x35, 0xa5,
	0x07, 0xd9, 0xc5, 0x1f, 0xf0, 0xe4, 0x61, 0xd0, 0xcf, 0x2e, 0xbb, 0x4b, 0xe9, 0xa6, 0x21, 0x16,
	0xf5, 0x18, 0x7a, 0xee, 0xb6, 0x22, 0x7f, 0xb8, 0xb3, 0x7d, 0xa3, 0x16, 0x00, 0x0f, 0xcf, 0x25,
	0x5e, 0xdd, 0xf8, 0x7a, 0xf2, 0xe9, 0x36, 0xe9, 0x47, 0x8a, 0x8b, 0x3f, 0x5b, 0x70, 0xfe, 0x9b,
	0x65, 0x79, 0xa0, 0x39, 0x25, 0xae, 0x5d, 0xc5, 0x14, 0xbe, 0x60, 0x5c, 0x53, 0x49, 0xfc, 0x42,
	0x2f, 0xdd, 0x37, 0x6a, 0x0e, 0x03, 0x4f, 0xdc, 0x14, 0xc2, 0x49, 0x7b, 0xd6, 0xf9, 0x9f, 0xf1,
	0x47, 0x3a, 0x04, 0x5d, 0x7b, 0xda, 0x59, 0xd7, 0xf0, 0xe1, 0xa5, 0xdc, 0xf7, 0xf1, 0x71, 0xd1,
	0x7b, 0x49, 0xba, 0x87, 0xc7, 0x45, 0xef, 0xe5, 0xc7, 0xbf, 0x3b, 0x30, 0xf9, 0x34, 0x34, 0xf5,
	0x08, 0x46, 0x1b, 0xc7, 0xb2, 0xac, 0xb5, 0x6c, 0xf0, 0x0b, 0x85, 0x70, 0xb2, 0x73, 0x45, 0x53,
	0xd2, 0xd2, 0x14, 0xda, 0x96, 0xd8, 0x52, 0x03, 0xe8, 0xac, 0xa5, 0xc6, 0x76, 0x28, 0x72, 0x53,
	0x63, 0x67, 0x5f, 0x30, 0x76, 0xd5, 0x29, 0x8c, 0x73, 0x53, 0x9b, 0xc2, 0x35, 0x19, 0xdf, 0x14,
	0xd8, 0x53, 0x43, 0xe8, 0xe6, 0xbe, 0x36, 0xd8, 0x0f, 0xd5, 0x26, 0x5b, 0x33, 0x0e, 0x62, 0x25,
	0x52, 0xe3, 0x50, 0x8d, 0x61, 0x50, 0xdb, 0x7c, 0x69, 0x0a, 0x8b, 0x23, 0x75, 0x02, 0xc3, 0x8d,
	0xdd, 0x51, 0xec, 0x40, 0x29, 0x98, 0xc4, 0xae, 0x24, 0xd1, 0x2c, 0xce, 0x13, 0x8e, 0xc3, 0x2a,
	0x11, 0x63, 0xf2, 0x3b, 0xf2, 0xd7, 0x78, 0x12, 0x46, 0xbd, 0xcb, 0x56, 0x06, 0x1f, 0x85, 0x51,
	0xef, 0xa8, 0xda, 0xda, 0x8a, 0x71, 0xa2, 0x46, 0xd0, 0x2b, 0xef, 0xc2, 0x02, 0xa7, 0x61, 0x6a,
	0xed, 0x58, 0x72, 0x4f, 0x8c, 0xa8, 0x00, 0xfa, 0xce, 0x6b, 0x53, 0x10, 0x7e, 0x19, 0x1c, 0x3b,
	0xf2, 0x62, 0x8d, 0x46, 0x15, 0x08, 0xbe, 0x29, 0xac, 0x10, 0x9e, 0x45, 0x37, 0x07, 0xf7, 0xe3,
	0x50, 0x7a, 0xca, 0x2c, 0xe3, 0x93, 0xa0, 0xa8, 0x3d, 0xb1, 0x38, 0x7c, 0x1a, 0x15, 0xae, 0xca,
	0x1d, 0x9e, 0x87, 0xb4, 0x8c, 0x66, 0xd6, 0x55, 0xe6, 0x35, 0x26, 0x81, 0x61, 0x5d, 0xae, 0x34,
	0x7e, 0x15, 0x42, 0xd1, 0xb7, 0x8c, 0x53, 0xd5, 0x87, 0x36, 0xbf, 0xc2, 0xaf, 0x03, 0x40, 0xa5,
	0xc7, 0x67, 0xc1, 0xc3, 0x95, 0xbb, 0x5d, 0x17, 0x7a, 0x4b, 0xf8, 0x3c, 0xe0, 0xcc, 0x1b, 0xfc,
	0x26, 0xec, 0x1a, 0xa3, 0xd3, 0x95, 0xe0, 0x0b, 0x35, 0x01, 0xc8, 0xb4, 0xe8, 0x95, 0xb7, 0x66,
	0xcb, 0x38, 0x0b, 0xfb, 0x32, 0xe5, 0x25, 0x55, 0x82, 0xdf, 0xaa, 0x33, 0x38, 0xd5, 0x1f, 0x1a,
	0x4f, 0xcb, 0x20, 0x59, 0xc6, 0x41, 0x17, 0x21, 0x9f, 0x3d, 0x68, 0x1c, 0x97, 0x8e, 0xf1, 0xbb,
	0x90, 0xcf, 0xad, 0xe6, 0x15, 0x7e, 0x1f, 0x66, 0x7b, 0xca, 0x2d, 0x8b, 0xbf, 0xc3, 0x1f, 0xe2,
	0x85, 0x59, 0xc1, 0x97, 0xab, 0x7e, 0xfc, 0x07, 0x5e, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x0b,
	0xfe, 0xc2, 0xcd, 0xf4, 0x04, 0x00, 0x00,
}
