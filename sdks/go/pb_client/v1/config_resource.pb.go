// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/config_resource.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config resource specification
type ConfigResource struct {
	// UUID
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional Tags of this entity
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Optional time when the entityt was created
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Optional last time the entity was updated
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional the k8s ref
	K8SRef string `protobuf:"bytes,7,opt,name=k8s_ref,json=k8sRef,proto3" json:"k8s_ref,omitempty"`
	// Optional wether this config resource is a secret
	IsSecret bool `protobuf:"varint,8,opt,name=is_secret,json=isSecret,proto3" json:"is_secret,omitempty"`
	// Optional a flag to freeze the resource
	Frozen bool `protobuf:"varint,9,opt,name=frozen,proto3" json:"frozen,omitempty"`
	// Optional a flag to disable the resource
	Disabled bool `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Optional if the entity has been deleted
	Deleted bool `protobuf:"varint,11,opt,name=deleted,proto3" json:"deleted,omitempty"`
	//Optional a mount path to specifiy where to mount this resource
	MountPath string `protobuf:"bytes,12,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	// Optional the k8s secret to use
	Items                []string `protobuf:"bytes,13,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigResource) Reset()         { *m = ConfigResource{} }
func (m *ConfigResource) String() string { return proto.CompactTextString(m) }
func (*ConfigResource) ProtoMessage()    {}
func (*ConfigResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a596bc712ebbf63, []int{0}
}

func (m *ConfigResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResource.Unmarshal(m, b)
}
func (m *ConfigResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResource.Marshal(b, m, deterministic)
}
func (m *ConfigResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResource.Merge(m, src)
}
func (m *ConfigResource) XXX_Size() int {
	return xxx_messageInfo_ConfigResource.Size(m)
}
func (m *ConfigResource) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResource.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResource proto.InternalMessageInfo

func (m *ConfigResource) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ConfigResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigResource) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ConfigResource) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ConfigResource) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ConfigResource) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ConfigResource) GetK8SRef() string {
	if m != nil {
		return m.K8SRef
	}
	return ""
}

func (m *ConfigResource) GetIsSecret() bool {
	if m != nil {
		return m.IsSecret
	}
	return false
}

func (m *ConfigResource) GetFrozen() bool {
	if m != nil {
		return m.Frozen
	}
	return false
}

func (m *ConfigResource) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *ConfigResource) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *ConfigResource) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *ConfigResource) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// Request data to create/update k8s resource
type ConfigResourceBodyRequest struct {
	// Owner of the namespace
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Artifact store body
	ConfigResource       *ConfigResource `protobuf:"bytes,2,opt,name=config_resource,json=configResource,proto3" json:"config_resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConfigResourceBodyRequest) Reset()         { *m = ConfigResourceBodyRequest{} }
func (m *ConfigResourceBodyRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigResourceBodyRequest) ProtoMessage()    {}
func (*ConfigResourceBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a596bc712ebbf63, []int{1}
}

func (m *ConfigResourceBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResourceBodyRequest.Unmarshal(m, b)
}
func (m *ConfigResourceBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResourceBodyRequest.Marshal(b, m, deterministic)
}
func (m *ConfigResourceBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResourceBodyRequest.Merge(m, src)
}
func (m *ConfigResourceBodyRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigResourceBodyRequest.Size(m)
}
func (m *ConfigResourceBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResourceBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResourceBodyRequest proto.InternalMessageInfo

func (m *ConfigResourceBodyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ConfigResourceBodyRequest) GetConfigResource() *ConfigResource {
	if m != nil {
		return m.ConfigResource
	}
	return nil
}

// Contains list config resources
type ListConfigResourcesResponse struct {
	// Count of the entities
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// List of all entities
	Results []*ConfigResource `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Previous page
	Previous string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	// Next page
	Next                 string   `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConfigResourcesResponse) Reset()         { *m = ListConfigResourcesResponse{} }
func (m *ListConfigResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*ListConfigResourcesResponse) ProtoMessage()    {}
func (*ListConfigResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a596bc712ebbf63, []int{2}
}

func (m *ListConfigResourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConfigResourcesResponse.Unmarshal(m, b)
}
func (m *ListConfigResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConfigResourcesResponse.Marshal(b, m, deterministic)
}
func (m *ListConfigResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConfigResourcesResponse.Merge(m, src)
}
func (m *ListConfigResourcesResponse) XXX_Size() int {
	return xxx_messageInfo_ListConfigResourcesResponse.Size(m)
}
func (m *ListConfigResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConfigResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListConfigResourcesResponse proto.InternalMessageInfo

func (m *ListConfigResourcesResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListConfigResourcesResponse) GetResults() []*ConfigResource {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListConfigResourcesResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *ListConfigResourcesResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func init() {
	proto.RegisterType((*ConfigResource)(nil), "v1.ConfigResource")
	proto.RegisterType((*ConfigResourceBodyRequest)(nil), "v1.ConfigResourceBodyRequest")
	proto.RegisterType((*ListConfigResourcesResponse)(nil), "v1.ListConfigResourcesResponse")
}

func init() { proto.RegisterFile("v1/config_resource.proto", fileDescriptor_3a596bc712ebbf63) }

var fileDescriptor_3a596bc712ebbf63 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0xfa, 0x9d, 0x29, 0x2c, 0x92, 0x85, 0xc0, 0x74, 0x85, 0x88, 0x7a, 0xea, 0x01, 0xa5,
	0xea, 0x72, 0x59, 0xc4, 0x69, 0xe1, 0xca, 0x01, 0x05, 0xee, 0x51, 0x1a, 0x4f, 0xba, 0xd6, 0x36,
	0x71, 0xf0, 0x8c, 0xcb, 0xc2, 0xbf, 0xe0, 0x07, 0xf0, 0x5f, 0x91, 0x9d, 0x04, 0x51, 0x24, 0xb4,
	0xb7, 0x79, 0x6f, 0xde, 0xf3, 0x3c, 0x79, 0x06, 0xe4, 0x69, 0xb7, 0x2d, 0x4d, 0x53, 0xe9, 0x43,
	0x6e, 0x91, 0x8c, 0xb3, 0x25, 0xa6, 0xad, 0x35, 0x6c, 0xc4, 0xe8, 0xb4, 0x5b, 0xbd, 0x3a, 0x18,
	0x73, 0x38, 0xe2, 0x36, 0x30, 0x7b, 0x57, 0x6d, 0x59, 0xd7, 0x48, 0x5c, 0xd4, 0x6d, 0x27, 0x5a,
	0xff, 0x1a, 0xc3, 0xc5, 0x87, 0x60, 0xcf, 0x7a, 0xb7, 0x10, 0x30, 0x71, 0x4e, 0x2b, 0x19, 0x25,
	0xd1, 0x26, 0xce, 0x42, 0xed, 0xb9, 0xa6, 0xa8, 0x51, 0x8e, 0x3a, 0xce, 0xd7, 0x22, 0x81, 0xa5,
	0x42, 0x2a, 0xad, 0x6e, 0x59, 0x9b, 0x46, 0x8e, 0x43, 0xeb, 0x6f, 0xca, 0xbb, 0xb8, 0x38, 0x90,
	0x9c, 0x24, 0x63, 0xef, 0xf2, 0xb5, 0x78, 0x0b, 0x50, 0x5a, 0x2c, 0x18, 0x55, 0x5e, 0xb0, 0x9c,
	0x26, 0xd1, 0x66, 0x79, 0xb5, 0x4a, 0xbb, 0x98, 0xe9, 0x10, 0x33, 0xfd, 0x32, 0xc4, 0xcc, 0xe2,
	0x5e, 0x7d, 0xc3, 0xde, 0xea, 0x5a, 0x35, 0x58, 0x67, 0x0f, 0x5b, 0x7b, 0xf5, 0x0d, 0x8b, 0xe7,
	0x30, 0xbf, 0xbb, 0xa6, 0xdc, 0x62, 0x25, 0xe7, 0x21, 0xe7, 0xec, 0xee, 0x9a, 0x32, 0xac, 0xc4,
	0x25, 0xc4, 0x9a, 0x72, 0xc2, 0xd2, 0x22, 0xcb, 0x45, 0x12, 0x6d, 0x16, 0xd9, 0x42, 0xd3, 0xe7,
	0x80, 0xc5, 0x33, 0x98, 0x55, 0xd6, 0xfc, 0xc0, 0x46, 0xc6, 0xa1, 0xd3, 0x23, 0xb1, 0x82, 0x85,
	0xd2, 0x54, 0xec, 0x8f, 0xa8, 0x24, 0x74, 0x9e, 0x01, 0x0b, 0x09, 0x73, 0x85, 0x47, 0x64, 0x54,
	0x72, 0x19, 0x5a, 0x03, 0x14, 0x2f, 0x01, 0x6a, 0xe3, 0x1a, 0xce, 0xdb, 0x82, 0x6f, 0xe5, 0xa3,
	0x10, 0x23, 0x0e, 0xcc, 0xa7, 0x82, 0x6f, 0xc5, 0x53, 0x98, 0x6a, 0xc6, 0x9a, 0xe4, 0xe3, 0xf0,
	0x5b, 0x1d, 0x58, 0x37, 0xf0, 0xe2, 0x7c, 0x3d, 0xef, 0x8d, 0xfa, 0x9e, 0xe1, 0x57, 0x87, 0xc4,
	0xde, 0x62, 0xbe, 0x35, 0x68, 0xfb, 0x55, 0x75, 0x40, 0xbc, 0x83, 0x27, 0xff, 0x1c, 0x44, 0x58,
	0xdb, 0xf2, 0x4a, 0xa4, 0xa7, 0x5d, 0x7a, 0xfe, 0x5a, 0x76, 0x51, 0x9e, 0xe1, 0xf5, 0xcf, 0x08,
	0x2e, 0x3f, 0x6a, 0xe2, 0x73, 0x19, 0x65, 0x48, 0xad, 0x69, 0x08, 0xfd, 0xc8, 0xd2, 0x47, 0x0e,
	0x23, 0xa7, 0x59, 0x07, 0xc4, 0x6b, 0x98, 0x5b, 0x24, 0x77, 0x64, 0x92, 0xa3, 0x64, 0xfc, 0x9f,
	0x51, 0x83, 0xc4, 0x7f, 0x5f, 0x6b, 0xf1, 0xa4, 0x8d, 0xa3, 0xfe, 0x6a, 0xfe, 0xe0, 0x70, 0x68,
	0x78, 0xcf, 0x72, 0xd2, 0x1f, 0x1a, 0xde, 0xf3, 0x7e, 0x16, 0x76, 0xfb, 0xe6, 0x77, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x04, 0xef, 0x21, 0xa3, 0xeb, 0x02, 0x00, 0x00,
}
