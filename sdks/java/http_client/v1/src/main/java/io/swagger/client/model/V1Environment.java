// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.V1ContainerEnv;
import io.swagger.client.model.V1ResourceRequirements;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * V1Environment
 */

public class V1Environment {
  @SerializedName("resources")
  private V1ResourceRequirements resources = null;

  @SerializedName("labels")
  private Map<String, String> labels = null;

  @SerializedName("annotations")
  private Map<String, String> annotations = null;

  @SerializedName("node_selector")
  private Map<String, String> nodeSelector = null;

  @SerializedName("affinity")
  private List<Object> affinity = null;

  @SerializedName("tolerations")
  private List<Object> tolerations = null;

  @SerializedName("service_account")
  private String serviceAccount = null;

  @SerializedName("image_pull_secrets")
  private List<String> imagePullSecrets = null;

  @SerializedName("env_vars")
  private List<Object> envVars = null;

  @SerializedName("security_context")
  private Object securityContext = null;

  @SerializedName("log_level")
  private String logLevel = null;

  @SerializedName("auth")
  private Boolean auth = null;

  @SerializedName("docker")
  private Boolean docker = null;

  @SerializedName("shm")
  private Boolean shm = null;

  @SerializedName("outputs")
  private Boolean outputs = null;

  @SerializedName("logs")
  private Boolean logs = null;

  @SerializedName("registry")
  private String registry = null;

  @SerializedName("init_container")
  private V1ContainerEnv initContainer = null;

  @SerializedName("sidecar_container")
  private V1ContainerEnv sidecarContainer = null;

  public V1Environment resources(V1ResourceRequirements resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @ApiModelProperty(value = "")
  public V1ResourceRequirements getResources() {
    return resources;
  }

  public void setResources(V1ResourceRequirements resources) {
    this.resources = resources;
  }

  public V1Environment labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public V1Environment putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<String, String>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }

  public V1Environment annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public V1Environment putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<String, String>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }

  public V1Environment nodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
    return this;
  }

  public V1Environment putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * Get nodeSelector
   * @return nodeSelector
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }

  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }

  public V1Environment affinity(List<Object> affinity) {
    this.affinity = affinity;
    return this;
  }

  public V1Environment addAffinityItem(Object affinityItem) {
    if (this.affinity == null) {
      this.affinity = new ArrayList<Object>();
    }
    this.affinity.add(affinityItem);
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @ApiModelProperty(value = "")
  public List<Object> getAffinity() {
    return affinity;
  }

  public void setAffinity(List<Object> affinity) {
    this.affinity = affinity;
  }

  public V1Environment tolerations(List<Object> tolerations) {
    this.tolerations = tolerations;
    return this;
  }

  public V1Environment addTolerationsItem(Object tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<Object>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * Get tolerations
   * @return tolerations
  **/
  @ApiModelProperty(value = "")
  public List<Object> getTolerations() {
    return tolerations;
  }

  public void setTolerations(List<Object> tolerations) {
    this.tolerations = tolerations;
  }

  public V1Environment serviceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

   /**
   * Get serviceAccount
   * @return serviceAccount
  **/
  @ApiModelProperty(value = "")
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }

  public V1Environment imagePullSecrets(List<String> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public V1Environment addImagePullSecretsItem(String imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<String>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * Get imagePullSecrets
   * @return imagePullSecrets
  **/
  @ApiModelProperty(value = "")
  public List<String> getImagePullSecrets() {
    return imagePullSecrets;
  }

  public void setImagePullSecrets(List<String> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }

  public V1Environment envVars(List<Object> envVars) {
    this.envVars = envVars;
    return this;
  }

  public V1Environment addEnvVarsItem(Object envVarsItem) {
    if (this.envVars == null) {
      this.envVars = new ArrayList<Object>();
    }
    this.envVars.add(envVarsItem);
    return this;
  }

   /**
   * Get envVars
   * @return envVars
  **/
  @ApiModelProperty(value = "")
  public List<Object> getEnvVars() {
    return envVars;
  }

  public void setEnvVars(List<Object> envVars) {
    this.envVars = envVars;
  }

  public V1Environment securityContext(Object securityContext) {
    this.securityContext = securityContext;
    return this;
  }

   /**
   * Get securityContext
   * @return securityContext
  **/
  @ApiModelProperty(value = "")
  public Object getSecurityContext() {
    return securityContext;
  }

  public void setSecurityContext(Object securityContext) {
    this.securityContext = securityContext;
  }

  public V1Environment logLevel(String logLevel) {
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Get logLevel
   * @return logLevel
  **/
  @ApiModelProperty(value = "")
  public String getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(String logLevel) {
    this.logLevel = logLevel;
  }

  public V1Environment auth(Boolean auth) {
    this.auth = auth;
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @ApiModelProperty(value = "")
  public Boolean isAuth() {
    return auth;
  }

  public void setAuth(Boolean auth) {
    this.auth = auth;
  }

  public V1Environment docker(Boolean docker) {
    this.docker = docker;
    return this;
  }

   /**
   * Get docker
   * @return docker
  **/
  @ApiModelProperty(value = "")
  public Boolean isDocker() {
    return docker;
  }

  public void setDocker(Boolean docker) {
    this.docker = docker;
  }

  public V1Environment shm(Boolean shm) {
    this.shm = shm;
    return this;
  }

   /**
   * Get shm
   * @return shm
  **/
  @ApiModelProperty(value = "")
  public Boolean isShm() {
    return shm;
  }

  public void setShm(Boolean shm) {
    this.shm = shm;
  }

  public V1Environment outputs(Boolean outputs) {
    this.outputs = outputs;
    return this;
  }

   /**
   * Get outputs
   * @return outputs
  **/
  @ApiModelProperty(value = "")
  public Boolean isOutputs() {
    return outputs;
  }

  public void setOutputs(Boolean outputs) {
    this.outputs = outputs;
  }

  public V1Environment logs(Boolean logs) {
    this.logs = logs;
    return this;
  }

   /**
   * Get logs
   * @return logs
  **/
  @ApiModelProperty(value = "")
  public Boolean isLogs() {
    return logs;
  }

  public void setLogs(Boolean logs) {
    this.logs = logs;
  }

  public V1Environment registry(String registry) {
    this.registry = registry;
    return this;
  }

   /**
   * Get registry
   * @return registry
  **/
  @ApiModelProperty(value = "")
  public String getRegistry() {
    return registry;
  }

  public void setRegistry(String registry) {
    this.registry = registry;
  }

  public V1Environment initContainer(V1ContainerEnv initContainer) {
    this.initContainer = initContainer;
    return this;
  }

   /**
   * Get initContainer
   * @return initContainer
  **/
  @ApiModelProperty(value = "")
  public V1ContainerEnv getInitContainer() {
    return initContainer;
  }

  public void setInitContainer(V1ContainerEnv initContainer) {
    this.initContainer = initContainer;
  }

  public V1Environment sidecarContainer(V1ContainerEnv sidecarContainer) {
    this.sidecarContainer = sidecarContainer;
    return this;
  }

   /**
   * Get sidecarContainer
   * @return sidecarContainer
  **/
  @ApiModelProperty(value = "")
  public V1ContainerEnv getSidecarContainer() {
    return sidecarContainer;
  }

  public void setSidecarContainer(V1ContainerEnv sidecarContainer) {
    this.sidecarContainer = sidecarContainer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Environment v1Environment = (V1Environment) o;
    return Objects.equals(this.resources, v1Environment.resources) &&
        Objects.equals(this.labels, v1Environment.labels) &&
        Objects.equals(this.annotations, v1Environment.annotations) &&
        Objects.equals(this.nodeSelector, v1Environment.nodeSelector) &&
        Objects.equals(this.affinity, v1Environment.affinity) &&
        Objects.equals(this.tolerations, v1Environment.tolerations) &&
        Objects.equals(this.serviceAccount, v1Environment.serviceAccount) &&
        Objects.equals(this.imagePullSecrets, v1Environment.imagePullSecrets) &&
        Objects.equals(this.envVars, v1Environment.envVars) &&
        Objects.equals(this.securityContext, v1Environment.securityContext) &&
        Objects.equals(this.logLevel, v1Environment.logLevel) &&
        Objects.equals(this.auth, v1Environment.auth) &&
        Objects.equals(this.docker, v1Environment.docker) &&
        Objects.equals(this.shm, v1Environment.shm) &&
        Objects.equals(this.outputs, v1Environment.outputs) &&
        Objects.equals(this.logs, v1Environment.logs) &&
        Objects.equals(this.registry, v1Environment.registry) &&
        Objects.equals(this.initContainer, v1Environment.initContainer) &&
        Objects.equals(this.sidecarContainer, v1Environment.sidecarContainer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resources, labels, annotations, nodeSelector, affinity, tolerations, serviceAccount, imagePullSecrets, envVars, securityContext, logLevel, auth, docker, shm, outputs, logs, registry, initContainer, sidecarContainer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Environment {\n");
    
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    docker: ").append(toIndentedString(docker)).append("\n");
    sb.append("    shm: ").append(toIndentedString(shm)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
    sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
    sb.append("    initContainer: ").append(toIndentedString(initContainer)).append("\n");
    sb.append("    sidecarContainer: ").append(toIndentedString(sidecarContainer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

