// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.V1BlobConnection;
import io.swagger.client.model.V1ClaimConnection;
import io.swagger.client.model.V1HostConnection;
import io.swagger.client.model.V1HostPathConnection;
import java.io.IOException;

/**
 * V1ConnectionScema
 */

public class V1ConnectionScema {
  @SerializedName("blob_connection")
  private V1BlobConnection blobConnection = null;

  @SerializedName("host_path_connection")
  private V1HostPathConnection hostPathConnection = null;

  @SerializedName("claim_connection")
  private V1ClaimConnection claimConnection = null;

  @SerializedName("host_connection")
  private V1HostConnection hostConnection = null;

  public V1ConnectionScema blobConnection(V1BlobConnection blobConnection) {
    this.blobConnection = blobConnection;
    return this;
  }

   /**
   * Get blobConnection
   * @return blobConnection
  **/
  @ApiModelProperty(value = "")
  public V1BlobConnection getBlobConnection() {
    return blobConnection;
  }

  public void setBlobConnection(V1BlobConnection blobConnection) {
    this.blobConnection = blobConnection;
  }

  public V1ConnectionScema hostPathConnection(V1HostPathConnection hostPathConnection) {
    this.hostPathConnection = hostPathConnection;
    return this;
  }

   /**
   * Get hostPathConnection
   * @return hostPathConnection
  **/
  @ApiModelProperty(value = "")
  public V1HostPathConnection getHostPathConnection() {
    return hostPathConnection;
  }

  public void setHostPathConnection(V1HostPathConnection hostPathConnection) {
    this.hostPathConnection = hostPathConnection;
  }

  public V1ConnectionScema claimConnection(V1ClaimConnection claimConnection) {
    this.claimConnection = claimConnection;
    return this;
  }

   /**
   * Get claimConnection
   * @return claimConnection
  **/
  @ApiModelProperty(value = "")
  public V1ClaimConnection getClaimConnection() {
    return claimConnection;
  }

  public void setClaimConnection(V1ClaimConnection claimConnection) {
    this.claimConnection = claimConnection;
  }

  public V1ConnectionScema hostConnection(V1HostConnection hostConnection) {
    this.hostConnection = hostConnection;
    return this;
  }

   /**
   * Get hostConnection
   * @return hostConnection
  **/
  @ApiModelProperty(value = "")
  public V1HostConnection getHostConnection() {
    return hostConnection;
  }

  public void setHostConnection(V1HostConnection hostConnection) {
    this.hostConnection = hostConnection;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ConnectionScema v1ConnectionScema = (V1ConnectionScema) o;
    return Objects.equals(this.blobConnection, v1ConnectionScema.blobConnection) &&
        Objects.equals(this.hostPathConnection, v1ConnectionScema.hostPathConnection) &&
        Objects.equals(this.claimConnection, v1ConnectionScema.claimConnection) &&
        Objects.equals(this.hostConnection, v1ConnectionScema.hostConnection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blobConnection, hostPathConnection, claimConnection, hostConnection);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ConnectionScema {\n");
    
    sb.append("    blobConnection: ").append(toIndentedString(blobConnection)).append("\n");
    sb.append("    hostPathConnection: ").append(toIndentedString(hostPathConnection)).append("\n");
    sb.append("    claimConnection: ").append(toIndentedString(claimConnection)).append("\n");
    sb.append("    hostConnection: ").append(toIndentedString(hostConnection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

