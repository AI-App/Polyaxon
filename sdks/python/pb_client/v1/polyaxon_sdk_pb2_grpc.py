#!/usr/bin/python
#
# Copyright 2019 Polyaxon, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from v1 import artifacts_store_pb2 as v1_dot_artifacts__store__pb2
from v1 import auth_pb2 as v1_dot_auth__pb2
from v1 import base_pb2 as v1_dot_base__pb2
from v1 import code_ref_pb2 as v1_dot_code__ref__pb2
from v1 import host_access_pb2 as v1_dot_host__access__pb2
from v1 import k8s_resource_pb2 as v1_dot_k8s__resource__pb2
from v1 import project_pb2 as v1_dot_project__pb2
from v1 import run_pb2 as v1_dot_run__pb2
from v1 import search_pb2 as v1_dot_search__pb2
from v1 import status_pb2 as v1_dot_status__pb2
from v1 import user_pb2 as v1_dot_user__pb2
from v1 import version_pb2 as v1_dot_version__pb2


class RunsV1Stub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListBookmarkedRuns = channel.unary_unary(
        '/v1.RunsV1/ListBookmarkedRuns',
        request_serializer=v1_dot_base__pb2.UserResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.ListRunsResponse.FromString,
        )
    self.ListArchivedRuns = channel.unary_unary(
        '/v1.RunsV1/ListArchivedRuns',
        request_serializer=v1_dot_base__pb2.UserResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.ListRunsResponse.FromString,
        )
    self.ListRuns = channel.unary_unary(
        '/v1.RunsV1/ListRuns',
        request_serializer=v1_dot_base__pb2.ProjectResourceListRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.ListRunsResponse.FromString,
        )
    self.CreateRun = channel.unary_unary(
        '/v1.RunsV1/CreateRun',
        request_serializer=v1_dot_run__pb2.RunBodyRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.GetRun = channel.unary_unary(
        '/v1.RunsV1/GetRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.UpdateRun = channel.unary_unary(
        '/v1.RunsV1/UpdateRun',
        request_serializer=v1_dot_run__pb2.RunBodyRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.PatchRun = channel.unary_unary(
        '/v1.RunsV1/PatchRun',
        request_serializer=v1_dot_run__pb2.RunBodyRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.DeleteRun = channel.unary_unary(
        '/v1.RunsV1/DeleteRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.DeleteRuns = channel.unary_unary(
        '/v1.RunsV1/DeleteRuns',
        request_serializer=v1_dot_base__pb2.ProjectResourceUuidsBodyRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.StopRun = channel.unary_unary(
        '/v1.RunsV1/StopRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.StopRuns = channel.unary_unary(
        '/v1.RunsV1/StopRuns',
        request_serializer=v1_dot_base__pb2.ProjectResourceUuidsBodyRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.InvalidateRun = channel.unary_unary(
        '/v1.RunsV1/InvalidateRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.InvalidateRuns = channel.unary_unary(
        '/v1.RunsV1/InvalidateRuns',
        request_serializer=v1_dot_base__pb2.ProjectResourceUuidsBodyRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.CopyRun = channel.unary_unary(
        '/v1.RunsV1/CopyRun',
        request_serializer=v1_dot_run__pb2.EntityRunBodyRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.RestartRun = channel.unary_unary(
        '/v1.RunsV1/RestartRun',
        request_serializer=v1_dot_run__pb2.EntityRunBodyRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.ResumeRun = channel.unary_unary(
        '/v1.RunsV1/ResumeRun',
        request_serializer=v1_dot_run__pb2.EntityRunBodyRequest.SerializeToString,
        response_deserializer=v1_dot_run__pb2.Run.FromString,
        )
    self.ArchiveRun = channel.unary_unary(
        '/v1.RunsV1/ArchiveRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.RestoreRun = channel.unary_unary(
        '/v1.RunsV1/RestoreRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.BookmarkRun = channel.unary_unary(
        '/v1.RunsV1/BookmarkRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.UnbookmarkRun = channel.unary_unary(
        '/v1.RunsV1/UnbookmarkRun',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.StartRunTensorboard = channel.unary_unary(
        '/v1.RunsV1/StartRunTensorboard',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.StopRunTensorboard = channel.unary_unary(
        '/v1.RunsV1/StopRunTensorboard',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.GetRunStatuses = channel.unary_unary(
        '/v1.RunsV1/GetRunStatuses',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_status__pb2.Status.FromString,
        )
    self.CreateRunStatus = channel.unary_unary(
        '/v1.RunsV1/CreateRunStatus',
        request_serializer=v1_dot_status__pb2.EntityStatusBodyRequest.SerializeToString,
        response_deserializer=v1_dot_status__pb2.Status.FromString,
        )
    self.GetRunCodeRefs = channel.unary_unary(
        '/v1.RunsV1/GetRunCodeRefs',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_code__ref__pb2.ListCodeRefsResponse.FromString,
        )
    self.CreateRunCodeRef = channel.unary_unary(
        '/v1.RunsV1/CreateRunCodeRef',
        request_serializer=v1_dot_code__ref__pb2.CodeRefBodyRequest.SerializeToString,
        response_deserializer=v1_dot_code__ref__pb2.CodeReference.FromString,
        )
    self.ImpersonateToken = channel.unary_unary(
        '/v1.RunsV1/ImpersonateToken',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_auth__pb2.Auth.FromString,
        )
    self.GetRunLogsTree = channel.unary_unary(
        '/v1.RunsV1/GetRunLogsTree',
        request_serializer=v1_dot_base__pb2.RunArtifactRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ArtifactTreeResponse.FromString,
        )
    self.GetRunArtifactsTree = channel.unary_unary(
        '/v1.RunsV1/GetRunArtifactsTree',
        request_serializer=v1_dot_base__pb2.RunArtifactRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ArtifactTreeResponse.FromString,
        )


class RunsV1Servicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListBookmarkedRuns(self, request, context):
    """List bookmarked runs for user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListArchivedRuns(self, request, context):
    """List archived runs for user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListRuns(self, request, context):
    """List runs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateRun(self, request, context):
    """Create new run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRun(self, request, context):
    """Get run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateRun(self, request, context):
    """Update run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchRun(self, request, context):
    """Patch run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteRun(self, request, context):
    """Delete run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteRuns(self, request, context):
    """Delete runs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRun(self, request, context):
    """Stop run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRuns(self, request, context):
    """Stop runs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InvalidateRun(self, request, context):
    """Invalidate run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InvalidateRuns(self, request, context):
    """Invalidate runs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CopyRun(self, request, context):
    """Restart run with copy
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RestartRun(self, request, context):
    """Restart run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResumeRun(self, request, context):
    """Resume run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ArchiveRun(self, request, context):
    """Archive run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RestoreRun(self, request, context):
    """Restore run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BookmarkRun(self, request, context):
    """Bookmark run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnbookmarkRun(self, request, context):
    """Unbookmark run
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRunTensorboard(self, request, context):
    """Start run tensorboard
    TODO: should be a tensorboard object
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRunTensorboard(self, request, context):
    """Stop run tensorboard
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRunStatuses(self, request, context):
    """Get run status
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateRunStatus(self, request, context):
    """Create new run status
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRunCodeRefs(self, request, context):
    """Get run code ref
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateRunCodeRef(self, request, context):
    """Get run code ref
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ImpersonateToken(self, request, context):
    """Impersonate run token
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRunLogsTree(self, request, context):
    """Get run logs list
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRunArtifactsTree(self, request, context):
    """Get run artifacts list
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RunsV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListBookmarkedRuns': grpc.unary_unary_rpc_method_handler(
          servicer.ListBookmarkedRuns,
          request_deserializer=v1_dot_base__pb2.UserResouceListRequest.FromString,
          response_serializer=v1_dot_run__pb2.ListRunsResponse.SerializeToString,
      ),
      'ListArchivedRuns': grpc.unary_unary_rpc_method_handler(
          servicer.ListArchivedRuns,
          request_deserializer=v1_dot_base__pb2.UserResouceListRequest.FromString,
          response_serializer=v1_dot_run__pb2.ListRunsResponse.SerializeToString,
      ),
      'ListRuns': grpc.unary_unary_rpc_method_handler(
          servicer.ListRuns,
          request_deserializer=v1_dot_base__pb2.ProjectResourceListRequest.FromString,
          response_serializer=v1_dot_run__pb2.ListRunsResponse.SerializeToString,
      ),
      'CreateRun': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRun,
          request_deserializer=v1_dot_run__pb2.RunBodyRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'GetRun': grpc.unary_unary_rpc_method_handler(
          servicer.GetRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'UpdateRun': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateRun,
          request_deserializer=v1_dot_run__pb2.RunBodyRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'PatchRun': grpc.unary_unary_rpc_method_handler(
          servicer.PatchRun,
          request_deserializer=v1_dot_run__pb2.RunBodyRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'DeleteRun': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'DeleteRuns': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteRuns,
          request_deserializer=v1_dot_base__pb2.ProjectResourceUuidsBodyRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'StopRun': grpc.unary_unary_rpc_method_handler(
          servicer.StopRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'StopRuns': grpc.unary_unary_rpc_method_handler(
          servicer.StopRuns,
          request_deserializer=v1_dot_base__pb2.ProjectResourceUuidsBodyRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'InvalidateRun': grpc.unary_unary_rpc_method_handler(
          servicer.InvalidateRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'InvalidateRuns': grpc.unary_unary_rpc_method_handler(
          servicer.InvalidateRuns,
          request_deserializer=v1_dot_base__pb2.ProjectResourceUuidsBodyRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'CopyRun': grpc.unary_unary_rpc_method_handler(
          servicer.CopyRun,
          request_deserializer=v1_dot_run__pb2.EntityRunBodyRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'RestartRun': grpc.unary_unary_rpc_method_handler(
          servicer.RestartRun,
          request_deserializer=v1_dot_run__pb2.EntityRunBodyRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'ResumeRun': grpc.unary_unary_rpc_method_handler(
          servicer.ResumeRun,
          request_deserializer=v1_dot_run__pb2.EntityRunBodyRequest.FromString,
          response_serializer=v1_dot_run__pb2.Run.SerializeToString,
      ),
      'ArchiveRun': grpc.unary_unary_rpc_method_handler(
          servicer.ArchiveRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'RestoreRun': grpc.unary_unary_rpc_method_handler(
          servicer.RestoreRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'BookmarkRun': grpc.unary_unary_rpc_method_handler(
          servicer.BookmarkRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'UnbookmarkRun': grpc.unary_unary_rpc_method_handler(
          servicer.UnbookmarkRun,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'StartRunTensorboard': grpc.unary_unary_rpc_method_handler(
          servicer.StartRunTensorboard,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'StopRunTensorboard': grpc.unary_unary_rpc_method_handler(
          servicer.StopRunTensorboard,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'GetRunStatuses': grpc.unary_unary_rpc_method_handler(
          servicer.GetRunStatuses,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=v1_dot_status__pb2.Status.SerializeToString,
      ),
      'CreateRunStatus': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRunStatus,
          request_deserializer=v1_dot_status__pb2.EntityStatusBodyRequest.FromString,
          response_serializer=v1_dot_status__pb2.Status.SerializeToString,
      ),
      'GetRunCodeRefs': grpc.unary_unary_rpc_method_handler(
          servicer.GetRunCodeRefs,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=v1_dot_code__ref__pb2.ListCodeRefsResponse.SerializeToString,
      ),
      'CreateRunCodeRef': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRunCodeRef,
          request_deserializer=v1_dot_code__ref__pb2.CodeRefBodyRequest.FromString,
          response_serializer=v1_dot_code__ref__pb2.CodeReference.SerializeToString,
      ),
      'ImpersonateToken': grpc.unary_unary_rpc_method_handler(
          servicer.ImpersonateToken,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=v1_dot_auth__pb2.Auth.SerializeToString,
      ),
      'GetRunLogsTree': grpc.unary_unary_rpc_method_handler(
          servicer.GetRunLogsTree,
          request_deserializer=v1_dot_base__pb2.RunArtifactRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ArtifactTreeResponse.SerializeToString,
      ),
      'GetRunArtifactsTree': grpc.unary_unary_rpc_method_handler(
          servicer.GetRunArtifactsTree,
          request_deserializer=v1_dot_base__pb2.RunArtifactRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ArtifactTreeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.RunsV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ProjectsV1Stub(object):
  """Service to manage project
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListProjects = channel.unary_unary(
        '/v1.ProjectsV1/ListProjects',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.ListProjectsResponse.FromString,
        )
    self.CreateProject = channel.unary_unary(
        '/v1.ProjectsV1/CreateProject',
        request_serializer=v1_dot_project__pb2.ProjectBodyRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.Project.FromString,
        )
    self.ListProjectNames = channel.unary_unary(
        '/v1.ProjectsV1/ListProjectNames',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.ListProjectsResponse.FromString,
        )
    self.ListBookmarkedProjects = channel.unary_unary(
        '/v1.ProjectsV1/ListBookmarkedProjects',
        request_serializer=v1_dot_base__pb2.UserResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.ListProjectsResponse.FromString,
        )
    self.ListArchivedProjects = channel.unary_unary(
        '/v1.ProjectsV1/ListArchivedProjects',
        request_serializer=v1_dot_base__pb2.UserResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.ListProjectsResponse.FromString,
        )
    self.GetProject = channel.unary_unary(
        '/v1.ProjectsV1/GetProject',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.Project.FromString,
        )
    self.UpdateProject = channel.unary_unary(
        '/v1.ProjectsV1/UpdateProject',
        request_serializer=v1_dot_project__pb2.ProjectBodyRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.Project.FromString,
        )
    self.PatchProject = channel.unary_unary(
        '/v1.ProjectsV1/PatchProject',
        request_serializer=v1_dot_project__pb2.ProjectBodyRequest.SerializeToString,
        response_deserializer=v1_dot_project__pb2.Project.FromString,
        )
    self.DeleteProject = channel.unary_unary(
        '/v1.ProjectsV1/DeleteProject',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ArchiveProject = channel.unary_unary(
        '/v1.ProjectsV1/ArchiveProject',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.RestoreProject = channel.unary_unary(
        '/v1.ProjectsV1/RestoreProject',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.BookmarkProject = channel.unary_unary(
        '/v1.ProjectsV1/BookmarkProject',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.UnbookmarkProject = channel.unary_unary(
        '/v1.ProjectsV1/UnbookmarkProject',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.EnableProjectCI = channel.unary_unary(
        '/v1.ProjectsV1/EnableProjectCI',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.DisableProjectCI = channel.unary_unary(
        '/v1.ProjectsV1/DisableProjectCI',
        request_serializer=v1_dot_base__pb2.ProjectResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class ProjectsV1Servicer(object):
  """Service to manage project
  """

  def ListProjects(self, request, context):
    """List projects
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateProject(self, request, context):
    """Create new project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListProjectNames(self, request, context):
    """List project namess
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListBookmarkedProjects(self, request, context):
    """List bookmarked projects for user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListArchivedProjects(self, request, context):
    """List archived projects for user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetProject(self, request, context):
    """Get project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateProject(self, request, context):
    """Update project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchProject(self, request, context):
    """Patch project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteProject(self, request, context):
    """Delete project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ArchiveProject(self, request, context):
    """Archive project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RestoreProject(self, request, context):
    """Restore project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BookmarkProject(self, request, context):
    """Bookmark project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnbookmarkProject(self, request, context):
    """Unbookmark project
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EnableProjectCI(self, request, context):
    """Enable project CI
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisableProjectCI(self, request, context):
    """Disbale project CI
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProjectsV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListProjects': grpc.unary_unary_rpc_method_handler(
          servicer.ListProjects,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_project__pb2.ListProjectsResponse.SerializeToString,
      ),
      'CreateProject': grpc.unary_unary_rpc_method_handler(
          servicer.CreateProject,
          request_deserializer=v1_dot_project__pb2.ProjectBodyRequest.FromString,
          response_serializer=v1_dot_project__pb2.Project.SerializeToString,
      ),
      'ListProjectNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListProjectNames,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_project__pb2.ListProjectsResponse.SerializeToString,
      ),
      'ListBookmarkedProjects': grpc.unary_unary_rpc_method_handler(
          servicer.ListBookmarkedProjects,
          request_deserializer=v1_dot_base__pb2.UserResouceListRequest.FromString,
          response_serializer=v1_dot_project__pb2.ListProjectsResponse.SerializeToString,
      ),
      'ListArchivedProjects': grpc.unary_unary_rpc_method_handler(
          servicer.ListArchivedProjects,
          request_deserializer=v1_dot_base__pb2.UserResouceListRequest.FromString,
          response_serializer=v1_dot_project__pb2.ListProjectsResponse.SerializeToString,
      ),
      'GetProject': grpc.unary_unary_rpc_method_handler(
          servicer.GetProject,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=v1_dot_project__pb2.Project.SerializeToString,
      ),
      'UpdateProject': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateProject,
          request_deserializer=v1_dot_project__pb2.ProjectBodyRequest.FromString,
          response_serializer=v1_dot_project__pb2.Project.SerializeToString,
      ),
      'PatchProject': grpc.unary_unary_rpc_method_handler(
          servicer.PatchProject,
          request_deserializer=v1_dot_project__pb2.ProjectBodyRequest.FromString,
          response_serializer=v1_dot_project__pb2.Project.SerializeToString,
      ),
      'DeleteProject': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteProject,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ArchiveProject': grpc.unary_unary_rpc_method_handler(
          servicer.ArchiveProject,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'RestoreProject': grpc.unary_unary_rpc_method_handler(
          servicer.RestoreProject,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'BookmarkProject': grpc.unary_unary_rpc_method_handler(
          servicer.BookmarkProject,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'UnbookmarkProject': grpc.unary_unary_rpc_method_handler(
          servicer.UnbookmarkProject,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'EnableProjectCI': grpc.unary_unary_rpc_method_handler(
          servicer.EnableProjectCI,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'DisableProjectCI': grpc.unary_unary_rpc_method_handler(
          servicer.DisableProjectCI,
          request_deserializer=v1_dot_base__pb2.ProjectResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.ProjectsV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ArtifactsStoresV1Stub(object):
  """Service to manage artifacts
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListArtifactsStoreNames = channel.unary_unary(
        '/v1.ArtifactsStoresV1/ListArtifactsStoreNames',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ListArtifactsStoresResponse.FromString,
        )
    self.ListArtifactsStores = channel.unary_unary(
        '/v1.ArtifactsStoresV1/ListArtifactsStores',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ListArtifactsStoresResponse.FromString,
        )
    self.CreateArtifactsStore = channel.unary_unary(
        '/v1.ArtifactsStoresV1/CreateArtifactsStore',
        request_serializer=v1_dot_artifacts__store__pb2.ArtifactsStoreBodyRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStore.FromString,
        )
    self.GetArtifactsStore = channel.unary_unary(
        '/v1.ArtifactsStoresV1/GetArtifactsStore',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStore.FromString,
        )
    self.UpdateArtifactsStore = channel.unary_unary(
        '/v1.ArtifactsStoresV1/UpdateArtifactsStore',
        request_serializer=v1_dot_artifacts__store__pb2.ArtifactsStoreBodyRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStore.FromString,
        )
    self.PatchArtifactsStore = channel.unary_unary(
        '/v1.ArtifactsStoresV1/PatchArtifactsStore',
        request_serializer=v1_dot_artifacts__store__pb2.ArtifactsStoreBodyRequest.SerializeToString,
        response_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStore.FromString,
        )
    self.DeleteArtifactsStore = channel.unary_unary(
        '/v1.ArtifactsStoresV1/DeleteArtifactsStore',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class ArtifactsStoresV1Servicer(object):
  """Service to manage artifacts
  """

  def ListArtifactsStoreNames(self, request, context):
    """List artifact stores namess
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListArtifactsStores(self, request, context):
    """List artifact stores
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateArtifactsStore(self, request, context):
    """Create artifact store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetArtifactsStore(self, request, context):
    """Get artifact store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateArtifactsStore(self, request, context):
    """Update artifact store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchArtifactsStore(self, request, context):
    """Patch artifact store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteArtifactsStore(self, request, context):
    """Delete artifact store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ArtifactsStoresV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListArtifactsStoreNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListArtifactsStoreNames,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ListArtifactsStoresResponse.SerializeToString,
      ),
      'ListArtifactsStores': grpc.unary_unary_rpc_method_handler(
          servicer.ListArtifactsStores,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ListArtifactsStoresResponse.SerializeToString,
      ),
      'CreateArtifactsStore': grpc.unary_unary_rpc_method_handler(
          servicer.CreateArtifactsStore,
          request_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStoreBodyRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ArtifactsStore.SerializeToString,
      ),
      'GetArtifactsStore': grpc.unary_unary_rpc_method_handler(
          servicer.GetArtifactsStore,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ArtifactsStore.SerializeToString,
      ),
      'UpdateArtifactsStore': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateArtifactsStore,
          request_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStoreBodyRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ArtifactsStore.SerializeToString,
      ),
      'PatchArtifactsStore': grpc.unary_unary_rpc_method_handler(
          servicer.PatchArtifactsStore,
          request_deserializer=v1_dot_artifacts__store__pb2.ArtifactsStoreBodyRequest.FromString,
          response_serializer=v1_dot_artifacts__store__pb2.ArtifactsStore.SerializeToString,
      ),
      'DeleteArtifactsStore': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteArtifactsStore,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.ArtifactsStoresV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class K8sConfigMapsV1Stub(object):
  """Service to manage k8s config maps
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListK8sConfigMapNames = channel.unary_unary(
        '/v1.K8sConfigMapsV1/ListK8sConfigMapNames',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.FromString,
        )
    self.ListK8sConfigMaps = channel.unary_unary(
        '/v1.K8sConfigMapsV1/ListK8sConfigMaps',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.FromString,
        )
    self.CreateK8sConfigMaps = channel.unary_unary(
        '/v1.K8sConfigMapsV1/CreateK8sConfigMaps',
        request_serializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.GetK8sConfigMap = channel.unary_unary(
        '/v1.K8sConfigMapsV1/GetK8sConfigMap',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.UpdateK8sConfigMap = channel.unary_unary(
        '/v1.K8sConfigMapsV1/UpdateK8sConfigMap',
        request_serializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.PatchK8sConfigMap = channel.unary_unary(
        '/v1.K8sConfigMapsV1/PatchK8sConfigMap',
        request_serializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.DeleteK8sConfigMap = channel.unary_unary(
        '/v1.K8sConfigMapsV1/DeleteK8sConfigMap',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class K8sConfigMapsV1Servicer(object):
  """Service to manage k8s config maps
  """

  def ListK8sConfigMapNames(self, request, context):
    """List k8s config map namess
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListK8sConfigMaps(self, request, context):
    """List k8s config maps
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateK8sConfigMaps(self, request, context):
    """Create k8s config map
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetK8sConfigMap(self, request, context):
    """Get k8s config map
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateK8sConfigMap(self, request, context):
    """Update k8s config map
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchK8sConfigMap(self, request, context):
    """Patch k8s config map
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteK8sConfigMap(self, request, context):
    """Delete k8s config map
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_K8sConfigMapsV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListK8sConfigMapNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListK8sConfigMapNames,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.SerializeToString,
      ),
      'ListK8sConfigMaps': grpc.unary_unary_rpc_method_handler(
          servicer.ListK8sConfigMaps,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.SerializeToString,
      ),
      'CreateK8sConfigMaps': grpc.unary_unary_rpc_method_handler(
          servicer.CreateK8sConfigMaps,
          request_deserializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'GetK8sConfigMap': grpc.unary_unary_rpc_method_handler(
          servicer.GetK8sConfigMap,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'UpdateK8sConfigMap': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateK8sConfigMap,
          request_deserializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'PatchK8sConfigMap': grpc.unary_unary_rpc_method_handler(
          servicer.PatchK8sConfigMap,
          request_deserializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'DeleteK8sConfigMap': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteK8sConfigMap,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.K8sConfigMapsV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class K8sSecretsV1Stub(object):
  """Service to manage k8s secrets
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListK8sSecretNames = channel.unary_unary(
        '/v1.K8sSecretsV1/ListK8sSecretNames',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.FromString,
        )
    self.ListK8sSecrets = channel.unary_unary(
        '/v1.K8sSecretsV1/ListK8sSecrets',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.FromString,
        )
    self.CreateK8sSecrets = channel.unary_unary(
        '/v1.K8sSecretsV1/CreateK8sSecrets',
        request_serializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.GetK8sSecret = channel.unary_unary(
        '/v1.K8sSecretsV1/GetK8sSecret',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.UpdateK8sSecret = channel.unary_unary(
        '/v1.K8sSecretsV1/UpdateK8sSecret',
        request_serializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.PatchK8sSecret = channel.unary_unary(
        '/v1.K8sSecretsV1/PatchK8sSecret',
        request_serializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.SerializeToString,
        response_deserializer=v1_dot_k8s__resource__pb2.K8sResource.FromString,
        )
    self.DeleteK8sSecret = channel.unary_unary(
        '/v1.K8sSecretsV1/DeleteK8sSecret',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class K8sSecretsV1Servicer(object):
  """Service to manage k8s secrets
  """

  def ListK8sSecretNames(self, request, context):
    """List k8s secret namess
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListK8sSecrets(self, request, context):
    """List k8s secrets
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateK8sSecrets(self, request, context):
    """Create k8s secret
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetK8sSecret(self, request, context):
    """Get k8s secret
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateK8sSecret(self, request, context):
    """Update k8s secret
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchK8sSecret(self, request, context):
    """Patch k8s secret
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteK8sSecret(self, request, context):
    """Delete k8s config map
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_K8sSecretsV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListK8sSecretNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListK8sSecretNames,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.SerializeToString,
      ),
      'ListK8sSecrets': grpc.unary_unary_rpc_method_handler(
          servicer.ListK8sSecrets,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.ListK8sResourcesResponse.SerializeToString,
      ),
      'CreateK8sSecrets': grpc.unary_unary_rpc_method_handler(
          servicer.CreateK8sSecrets,
          request_deserializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'GetK8sSecret': grpc.unary_unary_rpc_method_handler(
          servicer.GetK8sSecret,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'UpdateK8sSecret': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateK8sSecret,
          request_deserializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'PatchK8sSecret': grpc.unary_unary_rpc_method_handler(
          servicer.PatchK8sSecret,
          request_deserializer=v1_dot_k8s__resource__pb2.K8sResourceBodyRequest.FromString,
          response_serializer=v1_dot_k8s__resource__pb2.K8sResource.SerializeToString,
      ),
      'DeleteK8sSecret': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteK8sSecret,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.K8sSecretsV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class RegistryAccessesV1Stub(object):
  """Service to manage regsitry access
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListRegistryAccessNames = channel.unary_unary(
        '/v1.RegistryAccessesV1/ListRegistryAccessNames',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.ListHostAccessesResponse.FromString,
        )
    self.ListRegistryAccesses = channel.unary_unary(
        '/v1.RegistryAccessesV1/ListRegistryAccesses',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.ListHostAccessesResponse.FromString,
        )
    self.CreateRegistryAccess = channel.unary_unary(
        '/v1.RegistryAccessesV1/CreateRegistryAccess',
        request_serializer=v1_dot_host__access__pb2.HostAccessBodyRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.GetRegistryAccess = channel.unary_unary(
        '/v1.RegistryAccessesV1/GetRegistryAccess',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.UpdateRegistryAccess = channel.unary_unary(
        '/v1.RegistryAccessesV1/UpdateRegistryAccess',
        request_serializer=v1_dot_host__access__pb2.HostAccessBodyRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.PatchRegistryAccess = channel.unary_unary(
        '/v1.RegistryAccessesV1/PatchRegistryAccess',
        request_serializer=v1_dot_host__access__pb2.HostAccessBodyRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.DeleteRegistryAccess = channel.unary_unary(
        '/v1.RegistryAccessesV1/DeleteRegistryAccess',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class RegistryAccessesV1Servicer(object):
  """Service to manage regsitry access
  """

  def ListRegistryAccessNames(self, request, context):
    """List registry access names
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListRegistryAccesses(self, request, context):
    """List registry access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateRegistryAccess(self, request, context):
    """Create registry access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRegistryAccess(self, request, context):
    """Get registry access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateRegistryAccess(self, request, context):
    """Update registry access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchRegistryAccess(self, request, context):
    """Patch registry access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteRegistryAccess(self, request, context):
    """Delete registry access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RegistryAccessesV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListRegistryAccessNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListRegistryAccessNames,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.ListHostAccessesResponse.SerializeToString,
      ),
      'ListRegistryAccesses': grpc.unary_unary_rpc_method_handler(
          servicer.ListRegistryAccesses,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.ListHostAccessesResponse.SerializeToString,
      ),
      'CreateRegistryAccess': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRegistryAccess,
          request_deserializer=v1_dot_host__access__pb2.HostAccessBodyRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'GetRegistryAccess': grpc.unary_unary_rpc_method_handler(
          servicer.GetRegistryAccess,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'UpdateRegistryAccess': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateRegistryAccess,
          request_deserializer=v1_dot_host__access__pb2.HostAccessBodyRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'PatchRegistryAccess': grpc.unary_unary_rpc_method_handler(
          servicer.PatchRegistryAccess,
          request_deserializer=v1_dot_host__access__pb2.HostAccessBodyRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'DeleteRegistryAccess': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteRegistryAccess,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.RegistryAccessesV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GitAccessesV1Stub(object):
  """Service to manage git access
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListGitAccessNames = channel.unary_unary(
        '/v1.GitAccessesV1/ListGitAccessNames',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.ListHostAccessesResponse.FromString,
        )
    self.ListGitAccesses = channel.unary_unary(
        '/v1.GitAccessesV1/ListGitAccesses',
        request_serializer=v1_dot_base__pb2.OwnerResouceListRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.ListHostAccessesResponse.FromString,
        )
    self.CreateGitAccess = channel.unary_unary(
        '/v1.GitAccessesV1/CreateGitAccess',
        request_serializer=v1_dot_host__access__pb2.HostAccessBodyRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.GetGitAccess = channel.unary_unary(
        '/v1.GitAccessesV1/GetGitAccess',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.UpdateGitAccess = channel.unary_unary(
        '/v1.GitAccessesV1/UpdateGitAccess',
        request_serializer=v1_dot_host__access__pb2.HostAccessBodyRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.PatchGitAccess = channel.unary_unary(
        '/v1.GitAccessesV1/PatchGitAccess',
        request_serializer=v1_dot_host__access__pb2.HostAccessBodyRequest.SerializeToString,
        response_deserializer=v1_dot_host__access__pb2.HostAccess.FromString,
        )
    self.DeleteGitAccess = channel.unary_unary(
        '/v1.GitAccessesV1/DeleteGitAccess',
        request_serializer=v1_dot_base__pb2.OwnerEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class GitAccessesV1Servicer(object):
  """Service to manage git access
  """

  def ListGitAccessNames(self, request, context):
    """List git access names
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListGitAccesses(self, request, context):
    """List git accesses
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateGitAccess(self, request, context):
    """Create git accesses
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetGitAccess(self, request, context):
    """Get git access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateGitAccess(self, request, context):
    """Update git access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchGitAccess(self, request, context):
    """Patch git access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteGitAccess(self, request, context):
    """Delete git access
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GitAccessesV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListGitAccessNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListGitAccessNames,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.ListHostAccessesResponse.SerializeToString,
      ),
      'ListGitAccesses': grpc.unary_unary_rpc_method_handler(
          servicer.ListGitAccesses,
          request_deserializer=v1_dot_base__pb2.OwnerResouceListRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.ListHostAccessesResponse.SerializeToString,
      ),
      'CreateGitAccess': grpc.unary_unary_rpc_method_handler(
          servicer.CreateGitAccess,
          request_deserializer=v1_dot_host__access__pb2.HostAccessBodyRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'GetGitAccess': grpc.unary_unary_rpc_method_handler(
          servicer.GetGitAccess,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'UpdateGitAccess': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateGitAccess,
          request_deserializer=v1_dot_host__access__pb2.HostAccessBodyRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'PatchGitAccess': grpc.unary_unary_rpc_method_handler(
          servicer.PatchGitAccess,
          request_deserializer=v1_dot_host__access__pb2.HostAccessBodyRequest.FromString,
          response_serializer=v1_dot_host__access__pb2.HostAccess.SerializeToString,
      ),
      'DeleteGitAccess': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteGitAccess,
          request_deserializer=v1_dot_base__pb2.OwnerEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.GitAccessesV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SearchV1Stub(object):
  """Service to manage searches
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListSearches = channel.unary_unary(
        '/v1.SearchV1/ListSearches',
        request_serializer=v1_dot_base__pb2.ProjectResourceListRequest.SerializeToString,
        response_deserializer=v1_dot_search__pb2.ListSearchesResponse.FromString,
        )
    self.CreateSearch = channel.unary_unary(
        '/v1.SearchV1/CreateSearch',
        request_serializer=v1_dot_search__pb2.SearchBodyRequest.SerializeToString,
        response_deserializer=v1_dot_search__pb2.Search.FromString,
        )
    self.GetSearch = channel.unary_unary(
        '/v1.SearchV1/GetSearch',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=v1_dot_search__pb2.Search.FromString,
        )
    self.UpdateSearch = channel.unary_unary(
        '/v1.SearchV1/UpdateSearch',
        request_serializer=v1_dot_search__pb2.SearchBodyRequest.SerializeToString,
        response_deserializer=v1_dot_search__pb2.Search.FromString,
        )
    self.PatchSearch = channel.unary_unary(
        '/v1.SearchV1/PatchSearch',
        request_serializer=v1_dot_search__pb2.SearchBodyRequest.SerializeToString,
        response_deserializer=v1_dot_search__pb2.Search.FromString,
        )
    self.DeleteSearch = channel.unary_unary(
        '/v1.SearchV1/DeleteSearch',
        request_serializer=v1_dot_base__pb2.ProjectEntityResourceRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class SearchV1Servicer(object):
  """Service to manage searches
  """

  def ListSearches(self, request, context):
    """List searches
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateSearch(self, request, context):
    """Create search
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSearch(self, request, context):
    """Get search
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateSearch(self, request, context):
    """Update search
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PatchSearch(self, request, context):
    """Patch search
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSearch(self, request, context):
    """Delete search
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SearchV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListSearches': grpc.unary_unary_rpc_method_handler(
          servicer.ListSearches,
          request_deserializer=v1_dot_base__pb2.ProjectResourceListRequest.FromString,
          response_serializer=v1_dot_search__pb2.ListSearchesResponse.SerializeToString,
      ),
      'CreateSearch': grpc.unary_unary_rpc_method_handler(
          servicer.CreateSearch,
          request_deserializer=v1_dot_search__pb2.SearchBodyRequest.FromString,
          response_serializer=v1_dot_search__pb2.Search.SerializeToString,
      ),
      'GetSearch': grpc.unary_unary_rpc_method_handler(
          servicer.GetSearch,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=v1_dot_search__pb2.Search.SerializeToString,
      ),
      'UpdateSearch': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateSearch,
          request_deserializer=v1_dot_search__pb2.SearchBodyRequest.FromString,
          response_serializer=v1_dot_search__pb2.Search.SerializeToString,
      ),
      'PatchSearch': grpc.unary_unary_rpc_method_handler(
          servicer.PatchSearch,
          request_deserializer=v1_dot_search__pb2.SearchBodyRequest.FromString,
          response_serializer=v1_dot_search__pb2.Search.SerializeToString,
      ),
      'DeleteSearch': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSearch,
          request_deserializer=v1_dot_base__pb2.ProjectEntityResourceRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.SearchV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class AuthV1Stub(object):
  """Service to manage auth
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/v1.AuthV1/Login',
        request_serializer=v1_dot_auth__pb2.CredsBodyRequest.SerializeToString,
        response_deserializer=v1_dot_auth__pb2.Auth.FromString,
        )


class AuthV1Servicer(object):
  """Service to manage auth
  """

  def Login(self, request, context):
    """Login
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AuthV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=v1_dot_auth__pb2.CredsBodyRequest.FromString,
          response_serializer=v1_dot_auth__pb2.Auth.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.AuthV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class UsersV1Stub(object):
  """Service to get user level infotmation
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetUser = channel.unary_unary(
        '/v1.UsersV1/GetUser',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=v1_dot_user__pb2.User.FromString,
        )


class UsersV1Servicer(object):
  """Service to get user level infotmation
  """

  def GetUser(self, request, context):
    """Get current user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UsersV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetUser': grpc.unary_unary_rpc_method_handler(
          servicer.GetUser,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=v1_dot_user__pb2.User.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.UsersV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class VersionsV1Stub(object):
  """Service to get versions
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVersions = channel.unary_unary(
        '/v1.VersionsV1/GetVersions',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=v1_dot_version__pb2.Versions.FromString,
        )
    self.GetLogHandler = channel.unary_unary(
        '/v1.VersionsV1/GetLogHandler',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=v1_dot_version__pb2.LogHandler.FromString,
        )


class VersionsV1Servicer(object):
  """Service to get versions
  """

  def GetVersions(self, request, context):
    """Get versions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLogHandler(self, request, context):
    """Get log handler
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VersionsV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVersions': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersions,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=v1_dot_version__pb2.Versions.SerializeToString,
      ),
      'GetLogHandler': grpc.unary_unary_rpc_method_handler(
          servicer.GetLogHandler,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=v1_dot_version__pb2.LogHandler.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'v1.VersionsV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
