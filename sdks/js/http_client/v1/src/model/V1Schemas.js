// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1ArtifactFormat', 'model/V1ConnectionScema', 'model/V1EarlyStopping', 'model/V1Op', 'model/V1OpCondition', 'model/V1Parallel', 'model/V1RunSchema', 'model/V1Schedule'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1ArtifactFormat'), require('./V1ConnectionScema'), require('./V1EarlyStopping'), require('./V1Op'), require('./V1OpCondition'), require('./V1Parallel'), require('./V1RunSchema'), require('./V1Schedule'));
  } else {
    // Browser globals (root is window)
    if (!root.PolyaxonSdk) {
      root.PolyaxonSdk = {};
    }
    root.PolyaxonSdk.V1Schemas = factory(root.PolyaxonSdk.ApiClient, root.PolyaxonSdk.V1ArtifactFormat, root.PolyaxonSdk.V1ConnectionScema, root.PolyaxonSdk.V1EarlyStopping, root.PolyaxonSdk.V1Op, root.PolyaxonSdk.V1OpCondition, root.PolyaxonSdk.V1Parallel, root.PolyaxonSdk.V1RunSchema, root.PolyaxonSdk.V1Schedule);
  }
}(this, function(ApiClient, V1ArtifactFormat, V1ConnectionScema, V1EarlyStopping, V1Op, V1OpCondition, V1Parallel, V1RunSchema, V1Schedule) {
  'use strict';

  /**
   * The V1Schemas model module.
   * @module model/V1Schemas
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>V1Schemas</code>.
   * @alias module:model/V1Schemas
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>V1Schemas</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1Schemas} obj Optional instance to populate.
   * @return {module:model/V1Schemas} The populated <code>V1Schemas</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('op_condition'))
        obj.op_condition = V1OpCondition.constructFromObject(data['op_condition']);
      if (data.hasOwnProperty('early_stopping'))
        obj.early_stopping = V1EarlyStopping.constructFromObject(data['early_stopping']);
      if (data.hasOwnProperty('parallel'))
        obj.parallel = V1Parallel.constructFromObject(data['parallel']);
      if (data.hasOwnProperty('op'))
        obj.op = V1Op.constructFromObject(data['op']);
      if (data.hasOwnProperty('run'))
        obj.run = V1RunSchema.constructFromObject(data['run']);
      if (data.hasOwnProperty('schedule'))
        obj.schedule = V1Schedule.constructFromObject(data['schedule']);
      if (data.hasOwnProperty('artifact_format'))
        obj.artifact_format = V1ArtifactFormat.constructFromObject(data['artifact_format']);
      if (data.hasOwnProperty('connection_schema'))
        obj.connection_schema = V1ConnectionScema.constructFromObject(data['connection_schema']);
    }
    return obj;
  }

  /**
   * @member {module:model/V1OpCondition} op_condition
   */
  exports.prototype.op_condition = undefined;

  /**
   * @member {module:model/V1EarlyStopping} early_stopping
   */
  exports.prototype.early_stopping = undefined;

  /**
   * @member {module:model/V1Parallel} parallel
   */
  exports.prototype.parallel = undefined;

  /**
   * @member {module:model/V1Op} op
   */
  exports.prototype.op = undefined;

  /**
   * @member {module:model/V1RunSchema} run
   */
  exports.prototype.run = undefined;

  /**
   * @member {module:model/V1Schedule} schedule
   */
  exports.prototype.schedule = undefined;

  /**
   * @member {module:model/V1ArtifactFormat} artifact_format
   */
  exports.prototype.artifact_format = undefined;

  /**
   * @member {module:model/V1ConnectionScema} connection_schema
   */
  exports.prototype.connection_schema = undefined;

  return exports;

}));
