// Copyright 2019 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1RunSettingsCatalog'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1RunSettingsCatalog'));
  } else {
    // Browser globals (root is window)
    if (!root.PolyaxonSdk) {
      root.PolyaxonSdk = {};
    }
    root.PolyaxonSdk.V1RunSettings = factory(root.PolyaxonSdk.ApiClient, root.PolyaxonSdk.V1RunSettingsCatalog);
  }
}(this, function(ApiClient, V1RunSettingsCatalog) {
  'use strict';

  /**
   * The V1RunSettings model module.
   * @module model/V1RunSettings
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>V1RunSettings</code>.
   * @alias module:model/V1RunSettings
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>V1RunSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1RunSettings} obj Optional instance to populate.
   * @return {module:model/V1RunSettings} The populated <code>V1RunSettings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
      if (data.hasOwnProperty('agent'))
        obj.agent = V1RunSettingsCatalog.constructFromObject(data['agent']);
      if (data.hasOwnProperty('queue'))
        obj.queue = V1RunSettingsCatalog.constructFromObject(data['queue']);
      if (data.hasOwnProperty('logs_store'))
        obj.logs_store = V1RunSettingsCatalog.constructFromObject(data['logs_store']);
      if (data.hasOwnProperty('outputs_store'))
        obj.outputs_store = V1RunSettingsCatalog.constructFromObject(data['outputs_store']);
      if (data.hasOwnProperty('init_artifacts_stores'))
        obj.init_artifacts_stores = ApiClient.convertToType(data['init_artifacts_stores'], [V1RunSettingsCatalog]);
      if (data.hasOwnProperty('artifacts_stores'))
        obj.artifacts_stores = ApiClient.convertToType(data['artifacts_stores'], [V1RunSettingsCatalog]);
      if (data.hasOwnProperty('git_accesses'))
        obj.git_accesses = ApiClient.convertToType(data['git_accesses'], [V1RunSettingsCatalog]);
      if (data.hasOwnProperty('registry_access'))
        obj.registry_access = V1RunSettingsCatalog.constructFromObject(data['registry_access']);
      if (data.hasOwnProperty('k8s_secrets'))
        obj.k8s_secrets = ApiClient.convertToType(data['k8s_secrets'], [V1RunSettingsCatalog]);
      if (data.hasOwnProperty('k8s_config_maps'))
        obj.k8s_config_maps = ApiClient.convertToType(data['k8s_config_maps'], [V1RunSettingsCatalog]);
    }
    return obj;
  }

  /**
   * @member {String} namespace
   */
  exports.prototype.namespace = undefined;

  /**
   * @member {module:model/V1RunSettingsCatalog} agent
   */
  exports.prototype.agent = undefined;

  /**
   * @member {module:model/V1RunSettingsCatalog} queue
   */
  exports.prototype.queue = undefined;

  /**
   * @member {module:model/V1RunSettingsCatalog} logs_store
   */
  exports.prototype.logs_store = undefined;

  /**
   * @member {module:model/V1RunSettingsCatalog} outputs_store
   */
  exports.prototype.outputs_store = undefined;

  /**
   * @member {Array.<module:model/V1RunSettingsCatalog>} init_artifacts_stores
   */
  exports.prototype.init_artifacts_stores = undefined;

  /**
   * @member {Array.<module:model/V1RunSettingsCatalog>} artifacts_stores
   */
  exports.prototype.artifacts_stores = undefined;

  /**
   * @member {Array.<module:model/V1RunSettingsCatalog>} git_accesses
   */
  exports.prototype.git_accesses = undefined;

  /**
   * @member {module:model/V1RunSettingsCatalog} registry_access
   */
  exports.prototype.registry_access = undefined;

  /**
   * @member {Array.<module:model/V1RunSettingsCatalog>} k8s_secrets
   */
  exports.prototype.k8s_secrets = undefined;

  /**
   * @member {Array.<module:model/V1RunSettingsCatalog>} k8s_config_maps
   */
  exports.prototype.k8s_config_maps = undefined;

  return exports;

}));
