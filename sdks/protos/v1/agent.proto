syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

// Agent specification
message Agent {
    // UUID
    string uuid = 1;

    // Name
    string name = 2;

    // Optional description
    string description = 3;

    // Optional Tags of this entity
    repeated string tags = 4;

    // Optional a flag to disable the store
    bool disabled = 5;

    // Optional if the entity has been deleted
    bool deleted = 6;

    // Namespace where the agen is deployed
    string namespace = 7;

    // Optional version api
    google.protobuf.Struct version_api = 9;

    // Optional time when the entityt was created
    google.protobuf.Timestamp created_at = 10;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 11;

}

 // Request data to create/update agents
 message AgentBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Agent body
    Agent agent = 2;
 }


// Contains list agents
message ListAgentsResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Agent results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}


// Queue specification
message Queue {
    // UUID
    string uuid = 1;

    // Agent
    string agent = 2;

    // Name
    string name = 3;

    // The queue priority
    int32 priority = 4;

    // The queue concurrency
    int32 concurrency = 5;

    // Optional time when the entityt was created
    google.protobuf.Timestamp created_at = 6;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 7;

}

 // Request data to create/update agents
 message QueueBodyRequest {
    // Owner of the namespace
    string owner = 1;

    // Agent that consumes the queue
    string agent = 2;

    // Queue body
    Queue queue = 3;
 }


// Contains list agents
message ListQueuesResponse {
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Queue results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}
