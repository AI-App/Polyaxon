syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";

import "v1/schemas/component.proto";
import "v1/schemas/dask.proto";
import "v1/schemas/early_stopping.proto";
import "v1/schemas/environment.proto";
import "v1/schemas/init.proto";
import "v1/schemas/io.proto";
import "v1/schemas/mounts.proto";
import "v1/schemas/service.proto";
import "v1/schemas/termination.proto";
import "v1/schemas/trigger_policy.proto";

message Op {
    // Spec version
    float version = 1;

    // Optional component kind, should be equal to "component"
    string kind = 2;

    // Optional component name, should a valid slug
    string name = 3;

    // Optional component tag version
    string tag = 4;

    // Optional component description
    string description = 5;

    // Optional component tags
    repeated string tags = 6;

    // Optional profile to use for running this component
    string profile = 7;

    // Optional queue to use for running this component
    string queue = 8;

    // Optional flag to disable cache validation and force run this component
    bool nocache = 9;

    // Optional environment section
    Environment environment = 10;

    // optional termination section
    Termination termination = 11;

    // Optional init section
    Init init = 12;

    // Optioanl mount section
    Mounts mounts = 13;

    // Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)
    google.protobuf.Struct schedule = 14;

    // Optional parallel section, must be a valid Parallel option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)
    google.protobuf.Struct parallel = 15;

    // Optional service section
    Service service = 16;

    // Optional graph dependencies of this op
    repeated string dependencies = 17;

    // Optional trigger policy
    TriggerPolicy trigger = 18;

    // An optional list of condition to check before starting the run, entities should be a valid Condition
    repeated google.protobuf.Struct conditions = 19;

    // Optional flag to skip this run if upstream was skipped
    bool skip_on_upstream_skip = 20;

    // Optional dict of params
    google.protobuf.Struct params = 21;

    // Optional component reference if a component is not provided
    ComponentRef component_ref = 22;

    // Optional inline component to use for the op if a reference is not provided
    Component component = 23;
}
